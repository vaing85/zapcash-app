{"version":3,"file":"static/js/491.10ffb994.chunk.js","mappings":"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","sources":["components/QRCodeGenerator.tsx","components/CameraQRScanner.tsx","pages/QRPayment.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport QRCode from 'qrcode';\r\nimport { motion } from 'framer-motion';\r\nimport { QrCodeIcon, ClipboardIcon, CheckIcon } from '@heroicons/react/24/outline';\r\nimport { toast } from 'react-toastify';\r\n\r\ninterface QRCodeGeneratorProps {\r\n  userEmail: string;\r\n  amount?: number;\r\n  note?: string;\r\n}\r\n\r\nconst QRCodeGenerator: React.FC<QRCodeGeneratorProps> = ({ userEmail, amount, note }) => {\r\n  const [qrCodeDataURL, setQrCodeDataURL] = useState<string>('');\r\n  const [copied, setCopied] = useState(false);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const generateQRCode = useCallback(async () => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Create payment data object\r\n      const paymentData = {\r\n        type: 'zappay_payment',\r\n        recipient: userEmail,\r\n        amount: amount || 0,\r\n        note: note || '',\r\n        timestamp: new Date().toISOString(),\r\n        app: 'ZapPay'\r\n      };\r\n\r\n      // Generate QR code\r\n      const qrCodeString = JSON.stringify(paymentData);\r\n      const dataURL = await QRCode.toDataURL(qrCodeString, {\r\n        width: 256,\r\n        margin: 2,\r\n        color: {\r\n          dark: '#1f2937', // Dark gray\r\n          light: '#ffffff'  // White\r\n        }\r\n      });\r\n      \r\n      setQrCodeDataURL(dataURL);\r\n    } catch (error) {\r\n      console.error('Error generating QR code:', error);\r\n      toast.error('Failed to generate QR code');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [userEmail, amount, note]);\r\n\r\n  useEffect(() => {\r\n    generateQRCode();\r\n  }, [generateQRCode]);\r\n\r\n  const copyToClipboard = async () => {\r\n    try {\r\n      const paymentData = {\r\n        type: 'zappay_payment',\r\n        recipient: userEmail,\r\n        amount: amount || 0,\r\n        note: note || '',\r\n        timestamp: new Date().toISOString(),\r\n        app: 'ZapPay'\r\n      };\r\n      \r\n      await navigator.clipboard.writeText(JSON.stringify(paymentData));\r\n      setCopied(true);\r\n      toast.success('Payment link copied to clipboard!');\r\n      \r\n      setTimeout(() => setCopied(false), 2000);\r\n    } catch (error) {\r\n      toast.error('Failed to copy to clipboard');\r\n    }\r\n  };\r\n\r\n  const downloadQRCode = () => {\r\n    if (qrCodeDataURL) {\r\n      const link = document.createElement('a');\r\n      link.download = `zappay-payment-${userEmail}-${Date.now()}.png`;\r\n      link.href = qrCodeDataURL;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white rounded-2xl p-6 shadow-lg\">\r\n      <div className=\"text-center mb-6\">\r\n        <QrCodeIcon className=\"w-12 h-12 text-yellow-500 mx-auto mb-4\" />\r\n        <h3 className=\"text-xl font-semibold text-gray-900 mb-2\">\r\n          {amount ? `Request $${amount.toFixed(2)}` : 'Receive Payment'}\r\n        </h3>\r\n        <p className=\"text-gray-600\">\r\n          {amount ? 'Share this QR code to receive payment' : 'Share this QR code to receive any amount'}\r\n        </p>\r\n        {note && (\r\n          <p className=\"text-sm text-gray-500 mt-2\">\"{note}\"</p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex justify-center mb-6\">\r\n        {loading ? (\r\n          <div className=\"w-64 h-64 bg-gray-100 rounded-lg flex items-center justify-center\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-500\"></div>\r\n          </div>\r\n        ) : (\r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.8 }}\r\n            animate={{ opacity: 1, scale: 1 }}\r\n            transition={{ duration: 0.5 }}\r\n            className=\"bg-white p-4 rounded-lg shadow-inner\"\r\n          >\r\n            <img\r\n              src={qrCodeDataURL}\r\n              alt=\"Payment QR Code\"\r\n              className=\"w-64 h-64\"\r\n            />\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"space-y-3\">\r\n        <button\r\n          onClick={copyToClipboard}\r\n          disabled={loading}\r\n          className=\"w-full flex items-center justify-center space-x-2 bg-yellow-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-yellow-600 disabled:opacity-50 transition-colors\"\r\n        >\r\n          {copied ? (\r\n            <>\r\n              <CheckIcon className=\"w-5 h-5\" />\r\n              <span>Copied!</span>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <ClipboardIcon className=\"w-5 h-5\" />\r\n              <span>Copy Payment Link</span>\r\n            </>\r\n          )}\r\n        </button>\r\n\r\n        <button\r\n          onClick={downloadQRCode}\r\n          disabled={loading || !qrCodeDataURL}\r\n          className=\"w-full bg-gray-100 text-gray-700 py-3 px-4 rounded-lg font-medium hover:bg-gray-200 disabled:opacity-50 transition-colors\"\r\n        >\r\n          Download QR Code\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"mt-4 p-3 bg-yellow-50 rounded-lg\">\r\n        <p className=\"text-sm text-yellow-800 text-center\">\r\n          💡 <strong>Tip:</strong> Others can scan this QR code with ZapPay to send you money instantly!\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n","import React, { useRef, useEffect, useState, useCallback } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { \r\n  XMarkIcon, \r\n  QrCodeIcon,\r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon\r\n} from '@heroicons/react/24/outline';\r\nimport jsQR from 'jsqr';\r\n\r\ninterface QRScanResult {\r\n  data: string;\r\n  format: string;\r\n  timestamp: Date;\r\n}\r\n\r\ninterface CameraQRScannerProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onScan: (result: QRScanResult) => void;\r\n  onError?: (error: string) => void;\r\n  className?: string;\r\n}\r\n\r\nconst CameraQRScanner: React.FC<CameraQRScannerProps> = ({\r\n  isOpen,\r\n  onClose,\r\n  onScan,\r\n  onError,\r\n  className = ''\r\n}) => {\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  const canvasRef = useRef<HTMLCanvasElement>(null);\r\n  const streamRef = useRef<MediaStream | null>(null);\r\n  const [isScanning, setIsScanning] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [hasPermission, setHasPermission] = useState<boolean | null>(null);\r\n\r\n  // QR code detection using jsQR library\r\n  const detectQRCode = useCallback((video: HTMLVideoElement, canvas: HTMLCanvasElement) => {\r\n    const context = canvas.getContext('2d');\r\n    if (!context) return;\r\n\r\n    // Set canvas dimensions to match video\r\n    canvas.width = video.videoWidth;\r\n    canvas.height = video.videoHeight;\r\n\r\n    // Draw video frame to canvas\r\n    context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n\r\n    // Get image data\r\n    const imageData = context.getImageData(0, 0, canvas.width, canvas.height);\r\n    \r\n    // Use jsQR library to detect QR code\r\n    const code = jsQR(imageData.data, imageData.width, imageData.height);\r\n    \r\n    if (code) {\r\n      const result: QRScanResult = {\r\n        data: code.data,\r\n        format: 'QR_CODE',\r\n        timestamp: new Date()\r\n      };\r\n      \r\n      onScan(result);\r\n      setIsScanning(false);\r\n    }\r\n  }, [onScan]);\r\n\r\n\r\n  // Start camera\r\n  const startCamera = useCallback(async () => {\r\n    try {\r\n      setError(null);\r\n      setHasPermission(null);\r\n\r\n      const stream = await navigator.mediaDevices.getUserMedia({\r\n        video: {\r\n          facingMode: 'environment', // Use back camera on mobile\r\n          width: { ideal: 1280 },\r\n          height: { ideal: 720 }\r\n        }\r\n      });\r\n\r\n      streamRef.current = stream;\r\n      setHasPermission(true);\r\n\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = stream;\r\n        videoRef.current.play();\r\n        setIsScanning(true);\r\n      }\r\n    } catch (err) {\r\n      const errorMessage = err instanceof Error ? err.message : 'Failed to access camera';\r\n      setError(errorMessage);\r\n      setHasPermission(false);\r\n      onError?.(errorMessage);\r\n    }\r\n  }, [onError]);\r\n\r\n  // Stop camera\r\n  const stopCamera = useCallback(() => {\r\n    if (streamRef.current) {\r\n      streamRef.current.getTracks().forEach(track => track.stop());\r\n      streamRef.current = null;\r\n    }\r\n    setIsScanning(false);\r\n  }, []);\r\n\r\n  // Start scanning when component mounts\r\n  useEffect(() => {\r\n    if (isOpen) {\r\n      startCamera();\r\n    } else {\r\n      stopCamera();\r\n    }\r\n\r\n    return () => {\r\n      stopCamera();\r\n    };\r\n  }, [isOpen, startCamera, stopCamera]);\r\n\r\n  // Scan loop\r\n  useEffect(() => {\r\n    if (!isScanning || !videoRef.current || !canvasRef.current) return;\r\n\r\n    const scanInterval = setInterval(() => {\r\n      if (videoRef.current && canvasRef.current && videoRef.current.readyState === 4) {\r\n        detectQRCode(videoRef.current, canvasRef.current);\r\n      }\r\n    }, 100); // Scan every 100ms\r\n\r\n    return () => clearInterval(scanInterval);\r\n  }, [isScanning, detectQRCode]);\r\n\r\n  // Handle close\r\n  const handleClose = useCallback(() => {\r\n    stopCamera();\r\n    onClose();\r\n  }, [stopCamera, onClose]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <motion.div\r\n        initial={{ opacity: 0 }}\r\n        animate={{ opacity: 1 }}\r\n        exit={{ opacity: 0 }}\r\n        className={`fixed inset-0 z-50 bg-black bg-opacity-75 flex items-center justify-center p-4 ${className}`}\r\n      >\r\n        <motion.div\r\n          initial={{ scale: 0.9, opacity: 0 }}\r\n          animate={{ scale: 1, opacity: 1 }}\r\n          exit={{ scale: 0.9, opacity: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-lg p-6 max-w-md w-full\"\r\n        >\r\n          {/* Header */}\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <QrCodeIcon className=\"w-6 h-6 text-yellow-500\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                QR Code Scanner\r\n              </h3>\r\n            </div>\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n            >\r\n              <XMarkIcon className=\"w-6 h-6\" />\r\n            </button>\r\n          </div>\r\n\r\n          {/* Camera View */}\r\n          <div className=\"relative mb-4\">\r\n            <div className=\"relative bg-gray-100 dark:bg-gray-700 rounded-lg overflow-hidden aspect-video\">\r\n              <video\r\n                ref={videoRef}\r\n                className=\"w-full h-full object-cover\"\r\n                playsInline\r\n                muted\r\n              />\r\n              <canvas\r\n                ref={canvasRef}\r\n                className=\"hidden\"\r\n              />\r\n              \r\n              {/* Scanning Overlay */}\r\n              {isScanning && (\r\n                <div className=\"absolute inset-0 flex items-center justify-center\">\r\n                  <div className=\"w-48 h-48 border-2 border-yellow-500 rounded-lg relative\">\r\n                    <div className=\"absolute top-0 left-0 w-6 h-6 border-t-4 border-l-4 border-yellow-500 rounded-tl-lg\"></div>\r\n                    <div className=\"absolute top-0 right-0 w-6 h-6 border-t-4 border-r-4 border-yellow-500 rounded-tr-lg\"></div>\r\n                    <div className=\"absolute bottom-0 left-0 w-6 h-6 border-b-4 border-l-4 border-yellow-500 rounded-bl-lg\"></div>\r\n                    <div className=\"absolute bottom-0 right-0 w-6 h-6 border-b-4 border-r-4 border-yellow-500 rounded-br-lg\"></div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* Status Indicators */}\r\n            <div className=\"flex items-center justify-center space-x-4 mt-2\">\r\n              {hasPermission === null && (\r\n                <div className=\"flex items-center space-x-2 text-yellow-600 dark:text-yellow-400\">\r\n                  <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-yellow-500\"></div>\r\n                  <span className=\"text-sm\">Initializing camera...</span>\r\n                </div>\r\n              )}\r\n              \r\n              {hasPermission === true && isScanning && (\r\n                <div className=\"flex items-center space-x-2 text-green-600 dark:text-green-400\">\r\n                  <CheckCircleIcon className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Scanning for QR codes...</span>\r\n                </div>\r\n              )}\r\n              \r\n              {hasPermission === false && (\r\n                <div className=\"flex items-center space-x-2 text-red-600 dark:text-red-400\">\r\n                  <ExclamationTriangleIcon className=\"w-4 h-4\" />\r\n                  <span className=\"text-sm\">Camera access denied</span>\r\n                </div>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Error Message */}\r\n          {error && (\r\n            <div className=\"mb-4 p-3 bg-red-50 dark:bg-red-900/20 text-red-800 dark:text-red-200 rounded-lg\">\r\n              <div className=\"flex items-center space-x-2\">\r\n                <ExclamationTriangleIcon className=\"w-4 h-4\" />\r\n                <span className=\"text-sm\">{error}</span>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Instructions */}\r\n          <div className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n            <p>• Point your camera at a QR code</p>\r\n            <p>• Make sure the QR code is well-lit and in focus</p>\r\n            <p>• The scanner will automatically detect and process the code</p>\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={handleClose}\r\n              className=\"flex-1 bg-gray-500 hover:bg-gray-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n            >\r\n              Cancel\r\n            </button>\r\n            {hasPermission === false && (\r\n              <button\r\n                onClick={startCamera}\r\n                className=\"flex-1 bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-lg text-sm font-medium transition-colors\"\r\n              >\r\n                Try Again\r\n              </button>\r\n            )}\r\n          </div>\r\n        </motion.div>\r\n      </motion.div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default CameraQRScanner;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { \r\n  QrCodeIcon, \r\n  CameraIcon, \r\n  CurrencyDollarIcon,\r\n  DocumentTextIcon,\r\n  BoltIcon\r\n} from '@heroicons/react/24/outline';\r\nimport QRCodeGenerator from '../components/QRCodeGenerator';\r\nimport QRCodeScanner from '../components/QRCodeScanner';\r\nimport CameraQRScanner from '../components/CameraQRScanner';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst QRPayment: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [activeTab, setActiveTab] = useState<'generate' | 'scan'>('generate');\r\n  const [showScanner, setShowScanner] = useState(false);\r\n  const [requestAmount, setRequestAmount] = useState('');\r\n  const [requestNote, setRequestNote] = useState('');\r\n\r\n  const handleQRScan = (data: any) => {\r\n    // QR Code scanned successfully\r\n    \r\n    // In a real app, this would navigate to a payment confirmation screen\r\n    toast.success(`QR Code scanned! Payment to ${data.recipient} for $${data.amount}`);\r\n    setShowScanner(false);\r\n  };\r\n\r\n  const handleCameraScan = (result: any) => {\r\n    // Handle camera QR scan result\r\n    console.log('Camera QR scan result:', result);\r\n    toast.success(`QR Code scanned: ${result.data}`);\r\n    setShowScanner(false);\r\n  };\r\n\r\n  const handleGenerateQR = () => {\r\n    if (requestAmount && parseFloat(requestAmount) <= 0) {\r\n      toast.error('Amount must be greater than 0');\r\n      return;\r\n    }\r\n    // QR will be generated automatically by the QRCodeGenerator component\r\n  };\r\n\r\n  if (!user) {\r\n    return <div>Please log in to use QR payments.</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-4xl mx-auto\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6 }}\r\n        className=\"mb-8\"\r\n      >\r\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\r\n          QR Code Payments\r\n        </h1>\r\n        <p className=\"text-gray-600 dark:text-gray-300\">\r\n          Generate QR codes to receive payments or scan codes to send money\r\n        </p>\r\n      </motion.div>\r\n\r\n      {/* Tab Navigation */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6, delay: 0.1 }}\r\n        className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg mb-6\"\r\n      >\r\n        <div className=\"flex space-x-1 bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n          <button\r\n            onClick={() => setActiveTab('generate')}\r\n            className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-md font-medium transition-all ${\r\n              activeTab === 'generate'\r\n                ? 'bg-white dark:bg-gray-600 text-yellow-600 dark:text-yellow-400 shadow-sm'\r\n                : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'\r\n            }`}\r\n          >\r\n            <QrCodeIcon className=\"w-5 h-5\" />\r\n            <span>Generate QR</span>\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('scan')}\r\n            className={`flex-1 flex items-center justify-center space-x-2 py-3 px-4 rounded-md font-medium transition-all ${\r\n              activeTab === 'scan'\r\n                ? 'bg-white dark:bg-gray-600 text-yellow-600 dark:text-yellow-400 shadow-sm'\r\n                : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'\r\n            }`}\r\n          >\r\n            <CameraIcon className=\"w-5 h-5\" />\r\n            <span>Scan QR</span>\r\n          </button>\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Generate QR Tab */}\r\n      {activeTab === 'generate' && (\r\n        <motion.div\r\n          initial={{ opacity: 0, x: -20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"grid md:grid-cols-2 gap-6\"\r\n        >\r\n          {/* QR Code Settings */}\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-4 flex items-center\">\r\n              <BoltIcon className=\"w-6 h-6 text-yellow-500 mr-2\" />\r\n              Payment Request\r\n            </h3>\r\n            \r\n            <div className=\"space-y-4\">\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Amount (Optional)\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <CurrencyDollarIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                  <input\r\n                    type=\"number\"\r\n                    step=\"0.01\"\r\n                    value={requestAmount}\r\n                    onChange={(e) => setRequestAmount(e.target.value)}\r\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                    placeholder=\"0.00\"\r\n                  />\r\n                </div>\r\n                <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n                  Leave empty to receive any amount\r\n                </p>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Note (Optional)\r\n                </label>\r\n                <div className=\"relative\">\r\n                  <DocumentTextIcon className=\"absolute left-3 top-3 w-5 h-5 text-gray-400\" />\r\n                  <textarea\r\n                    value={requestNote}\r\n                    onChange={(e) => setRequestNote(e.target.value)}\r\n                    className=\"w-full pl-10 pr-4 py-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white resize-none\"\r\n                    rows={3}\r\n                    placeholder=\"What's this payment for?\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <button\r\n                onClick={handleGenerateQR}\r\n                className=\"w-full bg-yellow-500 text-white py-3 px-4 rounded-lg font-medium hover:bg-yellow-600 transition-colors\"\r\n              >\r\n                Generate QR Code\r\n              </button>\r\n            </div>\r\n          </div>\r\n\r\n          {/* QR Code Display */}\r\n          <div>\r\n            <QRCodeGenerator\r\n              userEmail={user.email}\r\n              amount={requestAmount ? parseFloat(requestAmount) : undefined}\r\n              note={requestNote}\r\n            />\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* Scan QR Tab */}\r\n      {activeTab === 'scan' && (\r\n        <motion.div\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.5 }}\r\n          className=\"text-center\"\r\n        >\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-12 shadow-lg\">\r\n            <CameraIcon className=\"w-20 h-20 text-gray-400 mx-auto mb-6\" />\r\n            <h3 className=\"text-2xl font-semibold text-gray-900 dark:text-white mb-4\">\r\n              Scan QR Code\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-8\">\r\n              Click the button below to open the camera and scan a QR code\r\n            </p>\r\n            <button\r\n              onClick={() => setShowScanner(true)}\r\n              className=\"bg-yellow-500 text-white py-4 px-8 rounded-lg font-medium hover:bg-yellow-600 transition-colors text-lg\"\r\n            >\r\n              Open Camera Scanner\r\n            </button>\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n\r\n      {/* QR Scanner Modal */}\r\n      {showScanner && (\r\n        <CameraQRScanner\r\n          isOpen={showScanner}\r\n          onScan={handleCameraScan}\r\n          onClose={() => setShowScanner(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRPayment;\r\n"],"names":["_ref","userEmail","amount","note","qrCodeDataURL","setQrCodeDataURL","useState","copied","setCopied","loading","setLoading","generateQRCode","useCallback","async","paymentData","type","recipient","timestamp","Date","toISOString","app","qrCodeString","JSON","stringify","dataURL","QRCode","width","margin","color","dark","light","error","console","toast","useEffect","_jsxs","className","children","_jsx","QrCodeIcon","concat","toFixed","motion","div","initial","opacity","scale","animate","transition","duration","src","alt","onClick","navigator","clipboard","writeText","success","setTimeout","disabled","_Fragment","CheckIcon","ClipboardIcon","downloadQRCode","link","document","createElement","download","now","href","click","isOpen","onClose","onScan","onError","videoRef","useRef","canvasRef","streamRef","isScanning","setIsScanning","setError","hasPermission","setHasPermission","detectQRCode","video","canvas","context","getContext","videoWidth","height","videoHeight","drawImage","imageData","getImageData","code","jsQR","data","result","format","startCamera","stream","mediaDevices","getUserMedia","facingMode","ideal","current","srcObject","play","err","errorMessage","Error","message","stopCamera","getTracks","forEach","track","stop","scanInterval","setInterval","readyState","clearInterval","handleClose","AnimatePresence","exit","XMarkIcon","ref","playsInline","muted","CheckCircleIcon","ExclamationTriangleIcon","QRPayment","user","useAuth","activeTab","setActiveTab","showScanner","setShowScanner","requestAmount","setRequestAmount","requestNote","setRequestNote","y","delay","CameraIcon","x","BoltIcon","CurrencyDollarIcon","step","value","onChange","e","target","placeholder","DocumentTextIcon","rows","handleGenerateQR","parseFloat","QRCodeGenerator","email","undefined","CameraQRScanner","log"],"sourceRoot":""}