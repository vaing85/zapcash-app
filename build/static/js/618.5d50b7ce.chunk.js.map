{"version":3,"file":"static/js/618.5d50b7ce.chunk.js","mappings":"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","sources":["pages/VerifyEmail.tsx","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSearchParams, useNavigate, Link } from 'react-router-dom';\r\nimport { CheckCircleIcon, ExclamationTriangleIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\r\nimport { authService } from '../services/authService';\r\n\r\nconst VerifyEmail: React.FC = () => {\r\n  const [searchParams] = useSearchParams();\r\n  const navigate = useNavigate();\r\n  const [status, setStatus] = useState<'loading' | 'success' | 'error' | 'expired'>('loading');\r\n  const [message, setMessage] = useState('');\r\n  const [isResending, setIsResending] = useState(false);\r\n  const [resendMessage, setResendMessage] = useState('');\r\n\r\n  const token = searchParams.get('token');\r\n  const email = searchParams.get('email');\r\n\r\n  useEffect(() => {\r\n    if (token) {\r\n      verifyEmail(token);\r\n    } else {\r\n      setStatus('error');\r\n      setMessage('No verification token provided');\r\n    }\r\n  }, [token]);\r\n\r\n  const verifyEmail = async (verificationToken: string) => {\r\n    try {\r\n      setStatus('loading');\r\n      setMessage('Verifying your email...');\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'https://zappayapp-ie9d2.ondigitalocean.app'}/api/auth/verify-email`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ token: verificationToken }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setStatus('success');\r\n        setMessage('Email verified successfully! You can now log in to your account.');\r\n        \r\n        // Redirect to login after 3 seconds\r\n        setTimeout(() => {\r\n          navigate('/login?verified=true');\r\n        }, 3000);\r\n      } else {\r\n        setStatus('error');\r\n        setMessage(data.message || 'Verification failed. The token may be invalid or expired.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Email verification error:', error);\r\n      setStatus('error');\r\n      setMessage('Network error. Please check your connection and try again.');\r\n    }\r\n  };\r\n\r\n  const resendVerificationEmail = async () => {\r\n    if (!email) {\r\n      setResendMessage('Email address not found. Please try registering again.');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsResending(true);\r\n      setResendMessage('');\r\n\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'https://zappayapp-ie9d2.ondigitalocean.app'}/api/auth/resend-verification`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email }),\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.success) {\r\n        setResendMessage('Verification email sent! Please check your inbox.');\r\n      } else {\r\n        setResendMessage(data.message || 'Failed to resend verification email.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Resend verification error:', error);\r\n      setResendMessage('Network error. Please try again later.');\r\n    } finally {\r\n      setIsResending(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = () => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return <ArrowPathIcon className=\"w-16 h-16 text-yellow-500 animate-spin\" />;\r\n      case 'success':\r\n        return <CheckCircleIcon className=\"w-16 h-16 text-green-500\" />;\r\n      case 'error':\r\n      case 'expired':\r\n        return <ExclamationTriangleIcon className=\"w-16 h-16 text-red-500\" />;\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = () => {\r\n    switch (status) {\r\n      case 'loading':\r\n        return 'text-yellow-600';\r\n      case 'success':\r\n        return 'text-green-600';\r\n      case 'error':\r\n      case 'expired':\r\n        return 'text-red-600';\r\n      default:\r\n        return 'text-gray-600';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-yellow-50 via-orange-50 to-red-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900 flex items-center justify-center px-4\">\r\n      <div className=\"max-w-md w-full\">\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-xl p-8\">\r\n          {/* Header */}\r\n          <div className=\"text-center mb-8\">\r\n            <div className=\"mx-auto w-20 h-20 bg-gradient-to-r from-yellow-400 to-orange-500 rounded-full flex items-center justify-center mb-4\">\r\n              <span className=\"text-2xl font-bold text-white\">âš¡</span>\r\n            </div>\r\n            <h1 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              Email Verification\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">\r\n              {status === 'loading' ? 'Please wait...' : 'Complete your account setup'}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Status Display */}\r\n          <div className=\"text-center mb-8\">\r\n            <div className=\"flex justify-center mb-4\">\r\n              {getStatusIcon()}\r\n            </div>\r\n            <p className={`text-lg font-medium ${getStatusColor()}`}>\r\n              {message}\r\n            </p>\r\n          </div>\r\n\r\n          {/* Actions */}\r\n          {status === 'success' && (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-4\">\r\n                <p className=\"text-green-800 dark:text-green-200 text-sm\">\r\n                  ðŸŽ‰ Your email has been verified! You'll be redirected to the login page shortly.\r\n                </p>\r\n              </div>\r\n              <Link\r\n                to=\"/login?verified=true\"\r\n                className=\"w-full bg-gradient-to-r from-yellow-400 to-orange-500 text-white font-semibold py-3 px-4 rounded-lg hover:from-yellow-500 hover:to-orange-600 transition-all duration-200 text-center block\"\r\n              >\r\n                Go to Login\r\n              </Link>\r\n            </div>\r\n          )}\r\n\r\n          {status === 'error' && (\r\n            <div className=\"space-y-4\">\r\n              <div className=\"bg-red-50 dark:bg-red-900/20 border border-red-200 dark:border-red-800 rounded-lg p-4\">\r\n                <p className=\"text-red-800 dark:text-red-200 text-sm\">\r\n                  {message}\r\n                </p>\r\n              </div>\r\n              \r\n              {email && (\r\n                <div className=\"space-y-3\">\r\n                  <button\r\n                    onClick={resendVerificationEmail}\r\n                    disabled={isResending}\r\n                    className=\"w-full bg-blue-500 text-white font-semibold py-3 px-4 rounded-lg hover:bg-blue-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all duration-200 flex items-center justify-center\"\r\n                  >\r\n                    {isResending ? (\r\n                      <>\r\n                        <ArrowPathIcon className=\"w-5 h-5 mr-2 animate-spin\" />\r\n                        Sending...\r\n                      </>\r\n                    ) : (\r\n                      'Resend Verification Email'\r\n                    )}\r\n                  </button>\r\n                  \r\n                  {resendMessage && (\r\n                    <p className={`text-sm text-center ${\r\n                      resendMessage.includes('sent') ? 'text-green-600' : 'text-red-600'\r\n                    }`}>\r\n                      {resendMessage}\r\n                    </p>\r\n                  )}\r\n                </div>\r\n              )}\r\n              \r\n              <div className=\"flex space-x-3\">\r\n                <Link\r\n                  to=\"/register\"\r\n                  className=\"flex-1 bg-gray-500 text-white font-semibold py-3 px-4 rounded-lg hover:bg-gray-600 transition-all duration-200 text-center\"\r\n                >\r\n                  Try Again\r\n                </Link>\r\n                <Link\r\n                  to=\"/login\"\r\n                  className=\"flex-1 bg-gradient-to-r from-yellow-400 to-orange-500 text-white font-semibold py-3 px-4 rounded-lg hover:from-yellow-500 hover:to-orange-600 transition-all duration-200 text-center\"\r\n                >\r\n                  Login\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {status === 'loading' && (\r\n            <div className=\"text-center\">\r\n              <div className=\"animate-pulse\">\r\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mx-auto mb-2\"></div>\r\n                <div className=\"h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2 mx-auto\"></div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Help Text */}\r\n          <div className=\"mt-8 pt-6 border-t border-gray-200 dark:border-gray-700\">\r\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 text-center\">\r\n              Having trouble? Check your spam folder or{' '}\r\n              <Link to=\"/contact-support\" className=\"text-yellow-600 hover:text-yellow-700\">\r\n                contact support\r\n              </Link>\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VerifyEmail;\r\n","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;"],"names":["VerifyEmail","searchParams","useSearchParams","navigate","useNavigate","status","setStatus","useState","message","setMessage","isResending","setIsResending","resendMessage","setResendMessage","token","get","email","useEffect","verifyEmail","async","response","fetch","concat","process","REACT_APP_API_URL","method","headers","body","JSON","stringify","verificationToken","data","json","success","setTimeout","error","console","_jsx","className","children","_jsxs","getStatusIcon","ArrowPathIcon","CheckCircleIcon","ExclamationTriangleIcon","getStatusColor","Link","to","onClick","disabled","_Fragment","includes","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}