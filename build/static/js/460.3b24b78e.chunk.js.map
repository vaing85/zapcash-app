{"version":3,"file":"static/js/460.3b24b78e.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingUpIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","components/NotificationAnalyticsDashboard.tsx","pages/NotificationAnalytics.tsx"],"sourcesContent":["import * as React from \"react\";\nfunction ArrowTrendingUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingUpIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  ChartBarIcon, \r\n  EnvelopeIcon, \r\n  DevicePhoneMobileIcon, \r\n  ComputerDesktopIcon, \r\n  BellIcon,\r\n  ArrowTrendingUpIcon,\r\n  ArrowTrendingDownIcon,\r\n  ClockIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ExclamationTriangleIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { enhancedNotificationService, NotificationAnalytics, NotificationChannel, NotificationTemplate } from '../services/enhancedNotificationService';\r\n\r\nconst NotificationAnalyticsDashboard: React.FC = () => {\r\n  const [analytics, setAnalytics] = useState<NotificationAnalytics | null>(null);\r\n  const [channels, setChannels] = useState<NotificationChannel[]>([]);\r\n  const [templates, setTemplates] = useState<NotificationTemplate[]>([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'channels' | 'templates' | 'performance'>('overview');\r\n\r\n  const loadData = useCallback(async () => {\r\n    setLoading(true);\r\n    try {\r\n      const analyticsData = enhancedNotificationService.getAnalytics();\r\n      const channelsData = enhancedNotificationService.getChannels();\r\n      const templatesData = enhancedNotificationService.getTemplates();\r\n\r\n      setAnalytics(analyticsData);\r\n      setChannels(channelsData);\r\n      setTemplates(templatesData);\r\n    } catch (error) {\r\n      console.error('Error loading notification analytics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    loadData();\r\n  }, [loadData]);\r\n\r\n  const getChannelIcon = (channelType: string) => {\r\n    switch (channelType) {\r\n      case 'push':\r\n        return <ComputerDesktopIcon className=\"w-6 h-6 text-blue-500\" />;\r\n      case 'email':\r\n        return <EnvelopeIcon className=\"w-6 h-6 text-green-500\" />;\r\n      case 'sms':\r\n        return <DevicePhoneMobileIcon className=\"w-6 h-6 text-purple-500\" />;\r\n      case 'in_app':\r\n        return <BellIcon className=\"w-6 h-6 text-orange-500\" />;\r\n      default:\r\n        return <ChartBarIcon className=\"w-6 h-6 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getChannelColor = (channelType: string) => {\r\n    switch (channelType) {\r\n      case 'push': return 'bg-blue-100 text-blue-800 dark:bg-blue-900/20 dark:text-blue-300';\r\n      case 'email': return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300';\r\n      case 'sms': return 'bg-purple-100 text-purple-800 dark:bg-purple-900/20 dark:text-purple-300';\r\n      case 'in_app': return 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-300';\r\n      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300';\r\n    }\r\n  };\r\n\r\n  const formatNumber = (num: number) => {\r\n    if (num >= 1000000) return (num / 1000000).toFixed(1) + 'M';\r\n    if (num >= 1000) return (num / 1000).toFixed(1) + 'K';\r\n    return num.toString();\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-96\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analytics) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <ExclamationTriangleIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n          No Analytics Data\r\n        </h3>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          No notification analytics available yet.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center\">\r\n            <ChartBarIcon className=\"w-8 h-8 text-orange-500 mr-3\" />\r\n            Notification Analytics\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300 mt-1\">\r\n            Track notification performance and delivery statistics\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          {[\r\n            { id: 'overview', name: 'Overview', icon: ChartBarIcon },\r\n            { id: 'channels', name: 'Channels', icon: ComputerDesktopIcon },\r\n            { id: 'templates', name: 'Templates', icon: EnvelopeIcon },\r\n            { id: 'performance', name: 'Performance', icon: ClockIcon }\r\n          ].map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id as any)}\r\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                    : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-5 h-5\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"py-6\">\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-6\">\r\n            {/* Key Metrics */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Sent</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      {formatNumber(analytics.totalSent)}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\r\n                    <EnvelopeIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.1 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Delivered</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      {formatNumber(analytics.totalDelivered)}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-green-100 dark:bg-green-900/20 rounded-lg\">\r\n                    <CheckCircleIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Delivery Rate</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      {(analytics.deliveryRate * 100).toFixed(1)}%\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-orange-100 dark:bg-orange-900/20 rounded-lg\">\r\n                    <ArrowTrendingUpIcon className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.3 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Avg. Delivery Time</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      {analytics.averageDeliveryTime.toFixed(1)}s\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-purple-100 dark:bg-purple-900/20 rounded-lg\">\r\n                    <ClockIcon className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </div>\r\n\r\n            {/* Channel Breakdown */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.4 }}\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n            >\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                Channel Performance\r\n              </h3>\r\n              <div className=\"space-y-4\">\r\n                {Object.entries(analytics.channelBreakdown).map(([channel, data]) => (\r\n                  <div key={channel} className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      {getChannelIcon(channel)}\r\n                      <span className=\"font-medium text-gray-900 dark:text-white capitalize\">\r\n                        {channel.replace('_', ' ')}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"text-right\">\r\n                        <div className=\"text-sm font-semibold text-gray-900 dark:text-white\">\r\n                          {formatNumber(data.sent)} sent\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                          {formatNumber(data.delivered)} delivered\r\n                        </div>\r\n                      </div>\r\n                      <div className=\"text-right\">\r\n                        <div className={`px-2 py-1 rounded-full text-xs font-medium ${getChannelColor(channel)}`}>\r\n                          {(data.rate * 100).toFixed(1)}%\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'channels' && (\r\n          <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Notification Channels\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {channels.map((channel) => (\r\n                <motion.div\r\n                  key={channel.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      {getChannelIcon(channel.type)}\r\n                      <div>\r\n                        <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                          {channel.name}\r\n                        </h4>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                          {channel.type.toUpperCase()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                      channel.enabled \r\n                        ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300'\r\n                        : 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300'\r\n                    }`}>\r\n                      {channel.enabled ? 'Enabled' : 'Disabled'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"space-y-2\">\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600 dark:text-gray-400\">Priority:</span>\r\n                      <span className=\"text-gray-900 dark:text-white\">{channel.priority}</span>\r\n                    </div>\r\n                    <div className=\"flex justify-between text-sm\">\r\n                      <span className=\"text-gray-600 dark:text-gray-400\">Delivery:</span>\r\n                      <span className=\"text-gray-900 dark:text-white capitalize\">{channel.deliveryTime}</span>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'templates' && (\r\n          <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Notification Templates\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {templates.map((template) => (\r\n                <motion.div\r\n                  key={template.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div>\r\n                      <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                        {template.name}\r\n                      </h4>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {template.type.replace('_', ' ').toUpperCase()}\r\n                      </p>\r\n                    </div>\r\n                    <div className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                      template.isActive \r\n                        ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-300'\r\n                        : 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-300'\r\n                    }`}>\r\n                      {template.isActive ? 'Active' : 'Inactive'}\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"mb-4\">\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                      {template.body}\r\n                    </p>\r\n                    {template.subject && (\r\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                        Subject: {template.subject}\r\n                      </p>\r\n                    )}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {template.channels.map((channel) => (\r\n                      <span\r\n                        key={channel.id}\r\n                        className={`px-2 py-1 rounded-full text-xs font-medium ${getChannelColor(channel.type)}`}\r\n                      >\r\n                        {channel.name}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                  \r\n                  {template.variables.length > 0 && (\r\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\r\n                      <p className=\"text-xs text-gray-500 dark:text-gray-500 mb-2\">\r\n                        Variables: {template.variables.join(', ')}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'performance' && (\r\n          <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Performance Metrics\r\n            </h3>\r\n            \r\n            {/* Delivery Rate Chart */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n            >\r\n              <h4 className=\"font-medium text-gray-900 dark:text-white mb-4\">\r\n                Delivery Rate by Channel\r\n              </h4>\r\n              <div className=\"space-y-3\">\r\n                {Object.entries(analytics.channelBreakdown).map(([channel, data]) => (\r\n                  <div key={channel}>\r\n                    <div className=\"flex justify-between text-sm mb-1\">\r\n                      <span className=\"text-gray-600 dark:text-gray-400 capitalize\">\r\n                        {channel.replace('_', ' ')}\r\n                      </span>\r\n                      <span className=\"text-gray-900 dark:text-white\">\r\n                        {(data.rate * 100).toFixed(1)}%\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n                      <div\r\n                        className=\"bg-orange-500 h-2 rounded-full transition-all duration-300\"\r\n                        style={{ width: `${data.rate * 100}%` }}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n\r\n            {/* Top Templates */}\r\n            {analytics.topTemplates.length > 0 && (\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.1 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <h4 className=\"font-medium text-gray-900 dark:text-white mb-4\">\r\n                  Most Used Templates\r\n                </h4>\r\n                <div className=\"space-y-3\">\r\n                  {analytics.topTemplates.map((template, index) => (\r\n                    <div key={template.templateId} className=\"flex items-center justify-between\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-6 h-6 bg-orange-100 dark:bg-orange-900/20 text-orange-600 dark:text-orange-400 rounded-full flex items-center justify-center text-xs font-bold\">\r\n                          {index + 1}\r\n                        </div>\r\n                        <span className=\"text-sm text-gray-900 dark:text-white\">\r\n                          {template.templateId}\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"text-sm font-semibold text-gray-900 dark:text-white\">\r\n                        {formatNumber(template.count)}\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </motion.div>\r\n            )}\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotificationAnalyticsDashboard;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport NotificationAnalyticsDashboard from '../components/NotificationAnalyticsDashboard';\r\nimport { ChartBarIcon } from '@heroicons/react/24/outline';\r\n\r\nconst NotificationAnalytics: React.FC = () => {\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n      className=\"max-w-7xl mx-auto\"\r\n    >\r\n      <NotificationAnalyticsDashboard />\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default NotificationAnalytics;\r\n"],"names":["ArrowTrendingUpIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","CheckCircleIcon","ClockIcon","NotificationAnalyticsDashboard","analytics","setAnalytics","useState","channels","setChannels","templates","setTemplates","loading","setLoading","activeTab","setActiveTab","loadData","useCallback","async","analyticsData","enhancedNotificationService","getAnalytics","channelsData","getChannels","templatesData","getTemplates","error","console","useEffect","getChannelIcon","channelType","_jsx","ComputerDesktopIcon","className","EnvelopeIcon","DevicePhoneMobileIcon","BellIcon","ChartBarIcon","getChannelColor","formatNumber","num","toFixed","toString","children","_jsxs","name","icon","map","tab","Icon","onClick","concat","motion","div","initial","opacity","y","animate","totalSent","transition","delay","totalDelivered","deliveryRate","averageDeliveryTime","entries","channelBreakdown","channel","data","replace","sent","delivered","rate","type","toUpperCase","enabled","priority","deliveryTime","template","isActive","body","subject","variables","length","join","_ref2","style","width","topTemplates","index","templateId","count","ExclamationTriangleIcon","NotificationAnalytics","duration"],"sourceRoot":""}