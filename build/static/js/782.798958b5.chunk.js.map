{"version":3,"file":"static/js/782.798958b5.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/QuestionMarkCircleIcon.js","pages/HelpCenter.tsx","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../node_modules/@heroicons/react/24/outline/esm/MagnifyingGlassIcon.js","../node_modules/@heroicons/react/24/outline/esm/PhoneIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction QuestionMarkCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(QuestionMarkCircleIcon);\nexport default ForwardRef;","import React, { useState } from 'react';\r\nimport { \r\n  QuestionMarkCircleIcon, \r\n  MagnifyingGlassIcon,\r\n  ChatBubbleLeftRightIcon,\r\n  PhoneIcon,\r\n  EnvelopeIcon,\r\n  ClockIcon,\r\n  CheckCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  InformationCircleIcon\r\n} from '@heroicons/react/24/outline';\r\nimport Chatbot from '../components/Chatbot';\r\n\r\nconst HelpCenter: React.FC = () => {\r\n  const [isChatbotOpen, setIsChatbotOpen] = useState(false);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const faqCategories = [\r\n    {\r\n      title: 'Getting Started',\r\n      icon: '🚀',\r\n      questions: [\r\n        {\r\n          question: 'How do I create a ZapPay account?',\r\n          answer: 'Click \"Get Started\" on our homepage, enter your email and create a secure password. Verify your email and you\\'re ready to go!'\r\n        },\r\n        {\r\n          question: 'What information do I need to get started?',\r\n          answer: 'Just your email address and a secure password. For enhanced security, we recommend adding your phone number and enabling two-factor authentication.'\r\n        },\r\n        {\r\n          question: 'Is ZapPay free to use?',\r\n          answer: 'Yes! Our basic plan is completely free and includes sending money, QR payments, and basic analytics. Premium features are available with our Pro, Business, and Enterprise plans.'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Sending Money',\r\n      icon: '💸',\r\n      questions: [\r\n        {\r\n          question: 'How do I send money to someone?',\r\n          answer: 'Go to your dashboard, click \"Send Money\", enter the recipient\\'s email or phone number, add the amount, and confirm the transaction. It\\'s that simple!'\r\n        },\r\n        {\r\n          question: 'How long do transfers take?',\r\n          answer: 'Most transfers are instant! Standard transfers may take 1-3 business days depending on the recipient\\'s bank. You\\'ll see the estimated time before confirming.'\r\n        },\r\n        {\r\n          question: 'What are the fees for sending money?',\r\n          answer: 'Personal transfers are completely free! Business payments have a small fee of 2.9% + $0.30. All fees are clearly shown before you confirm any transaction.'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Security & Safety',\r\n      icon: '🔒',\r\n      questions: [\r\n        {\r\n          question: 'Is my money safe with ZapPay?',\r\n          answer: 'Absolutely! We use bank-level security with end-to-end encryption, two-factor authentication, and real-time fraud detection. Your money is protected with military-grade security.'\r\n        },\r\n        {\r\n          question: 'What if I forget my password?',\r\n          answer: 'Use the \"Forgot Password\" link on the login screen. We\\'ll send you a secure reset link to your registered email address.'\r\n        },\r\n        {\r\n          question: 'Can I cancel a payment?',\r\n          answer: 'You can cancel pending payments before they\\'re accepted by the recipient. Once accepted, you\\'ll need to request a refund from the recipient.'\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      title: 'Business Features',\r\n      icon: '🏢',\r\n      questions: [\r\n        {\r\n          question: 'How do I accept payments for my business?',\r\n          answer: 'Upgrade to our Business plan to access merchant features. Generate QR codes, create payment links, and manage transactions through your merchant dashboard.'\r\n        },\r\n        {\r\n          question: 'What payment methods can I accept?',\r\n          answer: 'Accept payments via credit cards, bank transfers, and digital wallets. We support all major payment methods to maximize your customer reach.'\r\n        },\r\n        {\r\n          question: 'How do I track my business payments?',\r\n          answer: 'Use our comprehensive analytics dashboard to track sales, customer behavior, revenue trends, and transaction history in real-time.'\r\n        }\r\n      ]\r\n    }\r\n  ];\r\n\r\n  const supportOptions = [\r\n    {\r\n      icon: ChatBubbleLeftRightIcon,\r\n      title: 'AI Assistant',\r\n      description: 'Get instant help with our AI-powered chatbot',\r\n      action: 'Start Chat',\r\n      onClick: () => setIsChatbotOpen(true),\r\n      color: 'from-yellow-500 to-orange-500',\r\n      textColor: 'text-yellow-600',\r\n      bgColor: 'bg-yellow-50',\r\n      borderColor: 'border-yellow-200'\r\n    },\r\n    {\r\n      icon: PhoneIcon,\r\n      title: 'Phone Support',\r\n      description: 'Call us for urgent issues or complex problems',\r\n      action: 'Call Now',\r\n      onClick: () => window.open('tel:+1-555-ZAPPAY'),\r\n      color: 'from-blue-500 to-indigo-500',\r\n      textColor: 'text-blue-600',\r\n      bgColor: 'bg-blue-50',\r\n      borderColor: 'border-blue-200'\r\n    },\r\n    {\r\n      icon: EnvelopeIcon,\r\n      title: 'Email Support',\r\n      description: 'Send us a detailed message and we\\'ll respond within 24 hours',\r\n      action: 'Send Email',\r\n      onClick: () => window.open('mailto:support@zappay.site'),\r\n      color: 'from-green-500 to-emerald-500',\r\n      textColor: 'text-green-600',\r\n      bgColor: 'bg-green-50',\r\n      borderColor: 'border-green-200'\r\n    }\r\n  ];\r\n\r\n  const filteredCategories = faqCategories.map(category => ({\r\n    ...category,\r\n    questions: category.questions.filter(q => \r\n      q.question.toLowerCase().includes(searchQuery.toLowerCase()) ||\r\n      q.answer.toLowerCase().includes(searchQuery.toLowerCase())\r\n    )\r\n  })).filter(category => category.questions.length > 0);\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gradient-to-br from-yellow-50 via-orange-50 to-red-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900\">\r\n      <div className=\"container mx-auto px-4 py-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <div className=\"inline-flex items-center justify-center w-16 h-16 bg-yellow-100 dark:bg-yellow-900 rounded-full mb-4\">\r\n            <QuestionMarkCircleIcon className=\"w-8 h-8 text-yellow-600 dark:text-yellow-400\" />\r\n          </div>\r\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n            Help Center\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-300 max-w-2xl mx-auto\">\r\n            Find answers to common questions and get the help you need\r\n          </p>\r\n        </div>\r\n\r\n        {/* Search Bar */}\r\n        <div className=\"max-w-2xl mx-auto mb-12\">\r\n          <div className=\"relative\">\r\n            <MagnifyingGlassIcon className=\"absolute left-4 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search for help articles, FAQs, or topics...\"\r\n              value={searchQuery}\r\n              onChange={(e) => setSearchQuery(e.target.value)}\r\n              className=\"w-full pl-12 pr-4 py-4 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent bg-white dark:bg-gray-800 text-gray-900 dark:text-white\"\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Support Options */}\r\n        <div className=\"grid md:grid-cols-3 gap-6 mb-12\">\r\n          {supportOptions.map((option, index) => (\r\n            <div\r\n              key={index}\r\n              className={`${option.bgColor} ${option.borderColor} border-2 rounded-xl p-6 hover:shadow-lg transition-all duration-200 cursor-pointer`}\r\n              onClick={option.onClick}\r\n            >\r\n              <div className=\"flex items-center mb-4\">\r\n                <div className={`p-3 rounded-lg bg-gradient-to-r ${option.color} text-white`}>\r\n                  <option.icon className=\"h-6 w-6\" />\r\n                </div>\r\n                <h3 className={`text-xl font-semibold ml-3 ${option.textColor}`}>\r\n                  {option.title}\r\n                </h3>\r\n              </div>\r\n              <p className=\"text-gray-600 dark:text-gray-300 mb-4\">\r\n                {option.description}\r\n              </p>\r\n              <button className={`w-full py-2 px-4 bg-gradient-to-r ${option.color} text-white rounded-lg hover:opacity-90 transition-opacity`}>\r\n                {option.action}\r\n              </button>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* FAQ Categories */}\r\n        <div className=\"space-y-8\">\r\n          {filteredCategories.map((category, categoryIndex) => (\r\n            <div key={categoryIndex} className=\"bg-white dark:bg-gray-800 rounded-xl p-8 shadow-lg\">\r\n              <div className=\"flex items-center mb-6\">\r\n                <span className=\"text-3xl mr-3\">{category.icon}</span>\r\n                <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                  {category.title}\r\n                </h2>\r\n              </div>\r\n              <div className=\"space-y-4\">\r\n                {category.questions.map((item, index) => (\r\n                  <div key={index} className=\"border-b border-gray-200 dark:border-gray-700 pb-4 last:border-b-0\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                      {item.question}\r\n                    </h3>\r\n                    <p className=\"text-gray-600 dark:text-gray-300\">\r\n                      {item.answer}\r\n                    </p>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* No Results */}\r\n        {searchQuery && filteredCategories.length === 0 && (\r\n          <div className=\"text-center py-12\">\r\n            <ExclamationTriangleIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n            <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n              No results found\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-300 mb-6\">\r\n              Try searching with different keywords or contact our support team\r\n            </p>\r\n            <button\r\n              onClick={() => setIsChatbotOpen(true)}\r\n              className=\"inline-flex items-center px-6 py-3 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition-colors\"\r\n            >\r\n              <ChatBubbleLeftRightIcon className=\"w-5 h-5 mr-2\" />\r\n              Contact Support\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        {/* Status Indicators */}\r\n        <div className=\"grid md:grid-cols-3 gap-6 mt-12\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n            <div className=\"flex items-center mb-3\">\r\n              <CheckCircleIcon className=\"h-6 w-6 text-green-500 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                System Status\r\n              </h3>\r\n            </div>\r\n            <p className=\"text-green-600 dark:text-green-400 font-medium\">\r\n              All systems operational\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n              Last updated: 2 minutes ago\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n            <div className=\"flex items-center mb-3\">\r\n              <ClockIcon className=\"h-6 w-6 text-blue-500 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                Response Time\r\n              </h3>\r\n            </div>\r\n            <p className=\"text-blue-600 dark:text-blue-400 font-medium\">\r\n              AI Assistant: Instant\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n              Email: Within 24 hours\r\n            </p>\r\n          </div>\r\n\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n            <div className=\"flex items-center mb-3\">\r\n              <InformationCircleIcon className=\"h-6 w-6 text-purple-500 mr-2\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                Support Hours\r\n              </h3>\r\n            </div>\r\n            <p className=\"text-purple-600 dark:text-purple-400 font-medium\">\r\n              Mon-Fri: 9 AM - 6 PM EST\r\n            </p>\r\n            <p className=\"text-sm text-gray-500 dark:text-gray-400 mt-1\">\r\n              AI Assistant: 24/7\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Chatbot Modal */}\r\n      <Chatbot\r\n        isOpen={isChatbotOpen}\r\n        onClose={() => setIsChatbotOpen(false)}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HelpCenter;\r\n\r\n","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction MagnifyingGlassIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m21 21-5.197-5.197m0 0A7.5 7.5 0 1 0 5.196 5.196a7.5 7.5 0 0 0 10.607 10.607Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MagnifyingGlassIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PhoneIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6.75c0 8.284 6.716 15 15 15h2.25a2.25 2.25 0 0 0 2.25-2.25v-1.372c0-.516-.351-.966-.852-1.091l-4.423-1.106c-.44-.11-.902.055-1.173.417l-.97 1.293c-.282.376-.769.542-1.21.38a12.035 12.035 0 0 1-7.143-7.143c-.162-.441.004-.928.38-1.21l1.293-.97c.363-.271.527-.734.417-1.173L6.963 3.102a1.125 1.125 0 0 0-1.091-.852H4.5A2.25 2.25 0 0 0 2.25 4.5v2.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PhoneIcon);\nexport default ForwardRef;"],"names":["QuestionMarkCircleIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","HelpCenter","isChatbotOpen","setIsChatbotOpen","useState","searchQuery","setSearchQuery","supportOptions","icon","ChatBubbleLeftRightIcon","description","action","onClick","color","textColor","bgColor","borderColor","PhoneIcon","window","open","EnvelopeIcon","filteredCategories","questions","question","answer","map","category","_objectSpread","filter","q","toLowerCase","includes","length","_jsxs","className","children","_jsx","MagnifyingGlassIcon","type","placeholder","value","onChange","e","target","option","index","concat","categoryIndex","item","ExclamationTriangleIcon","CheckCircleIcon","ClockIcon","InformationCircleIcon","Chatbot","isOpen","onClose"],"sourceRoot":""}