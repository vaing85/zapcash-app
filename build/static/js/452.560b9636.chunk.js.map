{"version":3,"file":"static/js/452.560b9636.chunk.js","mappings":"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","sources":["components/security/TransactionRiskIndicator.tsx","components/security/SecurityAlertsPanel.tsx","components/security/TransactionSecuritySettings.tsx","pages/TransactionSecurity.tsx","../node_modules/@heroicons/react/24/outline/esm/ExclamationCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  ExclamationTriangleIcon,\r\n  ShieldCheckIcon,\r\n  ExclamationCircleIcon,\r\n  XCircleIcon,\r\n  CheckCircleIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { TransactionRiskScore } from '../../types/TransactionSecurity';\r\n\r\ninterface TransactionRiskIndicatorProps {\r\n  riskScore: TransactionRiskScore | null;\r\n  size?: 'sm' | 'md' | 'lg';\r\n  showDetails?: boolean;\r\n}\r\n\r\nconst TransactionRiskIndicator: React.FC<TransactionRiskIndicatorProps> = ({\r\n  riskScore,\r\n  size = 'md',\r\n  showDetails = false\r\n}) => {\r\n  if (!riskScore) {\r\n    return (\r\n      <div className=\"flex items-center space-x-2 text-gray-500\">\r\n        <div className=\"animate-pulse bg-gray-300 rounded-full w-4 h-4\"></div>\r\n        <span className=\"text-sm\">Analyzing...</span>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const getRiskColor = (level: string) => {\r\n    switch (level) {\r\n      case 'low':\r\n        return 'text-green-600 bg-green-100';\r\n      case 'medium':\r\n        return 'text-yellow-600 bg-yellow-100';\r\n      case 'high':\r\n        return 'text-orange-600 bg-orange-100';\r\n      case 'critical':\r\n        return 'text-red-600 bg-red-100';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100';\r\n    }\r\n  };\r\n\r\n  const getRiskIcon = (level: string) => {\r\n    switch (level) {\r\n      case 'low':\r\n        return <CheckCircleIcon className=\"w-5 h-5\" />;\r\n      case 'medium':\r\n        return <ExclamationTriangleIcon className=\"w-5 h-5\" />;\r\n      case 'high':\r\n        return <ExclamationCircleIcon className=\"w-5 h-5\" />;\r\n      case 'critical':\r\n        return <XCircleIcon className=\"w-5 h-5\" />;\r\n      default:\r\n        return <ShieldCheckIcon className=\"w-5 h-5\" />;\r\n    }\r\n  };\r\n\r\n  const getSizeClasses = (size: string) => {\r\n    switch (size) {\r\n      case 'sm':\r\n        return 'text-xs px-2 py-1';\r\n      case 'lg':\r\n        return 'text-base px-4 py-2';\r\n      default:\r\n        return 'text-sm px-3 py-1.5';\r\n    }\r\n  };\r\n\r\n  const getRecommendationText = (recommendation: string) => {\r\n    switch (recommendation) {\r\n      case 'allow':\r\n        return 'Transaction approved';\r\n      case 'review':\r\n        return 'Under review';\r\n      case 'require_2fa':\r\n        return '2FA required';\r\n      case 'block':\r\n        return 'Transaction blocked';\r\n      default:\r\n        return 'Pending analysis';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, scale: 0.9 }}\r\n      animate={{ opacity: 1, scale: 1 }}\r\n      className=\"flex flex-col space-y-2\"\r\n    >\r\n      <div className={`inline-flex items-center space-x-2 rounded-full ${getRiskColor(riskScore.level)} ${getSizeClasses(size)}`}>\r\n        {getRiskIcon(riskScore.level)}\r\n        <span className=\"font-medium\">\r\n          Risk: {riskScore.level.toUpperCase()} ({riskScore.score}/100)\r\n        </span>\r\n      </div>\r\n\r\n      {showDetails && (\r\n        <motion.div\r\n          initial={{ opacity: 0, height: 0 }}\r\n          animate={{ opacity: 1, height: 'auto' }}\r\n          className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 space-y-3\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n              Recommendation:\r\n            </span>\r\n            <span className={`text-sm font-medium ${\r\n              riskScore.recommendation === 'allow' ? 'text-green-600' :\r\n              riskScore.recommendation === 'review' ? 'text-yellow-600' :\r\n              riskScore.recommendation === 'require_2fa' ? 'text-orange-600' :\r\n              'text-red-600'\r\n            }`}>\r\n              {getRecommendationText(riskScore.recommendation)}\r\n            </span>\r\n          </div>\r\n\r\n          {riskScore.factors.length > 0 && (\r\n            <div>\r\n              <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Risk Factors:\r\n              </h4>\r\n              <div className=\"space-y-2\">\r\n                {riskScore.factors.map((factor, index) => (\r\n                  <div key={index} className=\"flex items-start space-x-2\">\r\n                    <div className=\"w-2 h-2 bg-red-400 rounded-full mt-2 flex-shrink-0\"></div>\r\n                    <div className=\"flex-1\">\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {factor.description}\r\n                      </p>\r\n                      <div className=\"flex items-center space-x-2 mt-1\">\r\n                        <div className=\"flex-1 bg-gray-200 dark:bg-gray-700 rounded-full h-1.5\">\r\n                          <div\r\n                            className=\"bg-red-400 h-1.5 rounded-full transition-all duration-300\"\r\n                            style={{ width: `${factor.impact}%` }}\r\n                          ></div>\r\n                        </div>\r\n                        <span className=\"text-xs text-gray-500\">\r\n                          {Math.round(factor.impact)}%\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      )}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default TransactionRiskIndicator;\r\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport {\r\n  ExclamationTriangleIcon,\r\n  ExclamationCircleIcon,\r\n  XCircleIcon,\r\n  CheckCircleIcon,\r\n  EyeIcon,\r\n  XMarkIcon,\r\n  ClockIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { TransactionAlert } from '../../types/TransactionSecurity';\r\nimport { useTransactionSecurity } from '../../contexts/TransactionSecurityContext';\r\n\r\ninterface SecurityAlertsPanelProps {\r\n  alerts: TransactionAlert[];\r\n  onResolveAlert: (alertId: string, resolution: string) => void;\r\n  className?: string;\r\n}\r\n\r\nconst SecurityAlertsPanel: React.FC<SecurityAlertsPanelProps> = ({\r\n  alerts,\r\n  onResolveAlert,\r\n  className = ''\r\n}) => {\r\n  const [selectedAlert, setSelectedAlert] = useState<TransactionAlert | null>(null);\r\n  const [resolutionText, setResolutionText] = useState('');\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'low':\r\n        return 'text-blue-600 bg-blue-100 border-blue-200';\r\n      case 'medium':\r\n        return 'text-yellow-600 bg-yellow-100 border-yellow-200';\r\n      case 'high':\r\n        return 'text-orange-600 bg-orange-100 border-orange-200';\r\n      case 'critical':\r\n        return 'text-red-600 bg-red-100 border-red-200';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100 border-gray-200';\r\n    }\r\n  };\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case 'low':\r\n        return <ExclamationTriangleIcon className=\"w-5 h-5\" />;\r\n      case 'medium':\r\n        return <ExclamationCircleIcon className=\"w-5 h-5\" />;\r\n      case 'high':\r\n        return <XCircleIcon className=\"w-5 h-5\" />;\r\n      case 'critical':\r\n        return <XCircleIcon className=\"w-5 h-5\" />;\r\n      default:\r\n        return <ExclamationTriangleIcon className=\"w-5 h-5\" />;\r\n    }\r\n  };\r\n\r\n  const getAlertTypeText = (type: string) => {\r\n    switch (type) {\r\n      case 'suspicious_amount':\r\n        return 'Suspicious Amount';\r\n      case 'unusual_location':\r\n        return 'Unusual Location';\r\n      case 'high_frequency':\r\n        return 'High Frequency';\r\n      case 'pattern_anomaly':\r\n        return 'Pattern Anomaly';\r\n      case 'device_mismatch':\r\n        return 'Device Mismatch';\r\n      case 'time_anomaly':\r\n        return 'Time Anomaly';\r\n      default:\r\n        return 'Security Alert';\r\n    }\r\n  };\r\n\r\n  const formatTimestamp = (timestamp: Date) => {\r\n    return new Intl.DateTimeFormat('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    }).format(new Date(timestamp));\r\n  };\r\n\r\n  const handleResolveAlert = () => {\r\n    if (selectedAlert && resolutionText.trim()) {\r\n      onResolveAlert(selectedAlert.id, resolutionText);\r\n      setSelectedAlert(null);\r\n      setResolutionText('');\r\n    }\r\n  };\r\n\r\n  const unresolvedAlerts = alerts.filter(alert => !alert.resolved);\r\n  const resolvedAlerts = alerts.filter(alert => alert.resolved);\r\n\r\n  return (\r\n    <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-lg ${className}`}>\r\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n            Security Alerts\r\n          </h3>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <span className=\"text-sm text-gray-500\">\r\n              {unresolvedAlerts.length} unresolved\r\n            </span>\r\n            {resolvedAlerts.length > 0 && (\r\n              <span className=\"text-sm text-gray-400\">\r\n                • {resolvedAlerts.length} resolved\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"max-h-96 overflow-y-auto\">\r\n        <AnimatePresence>\r\n          {unresolvedAlerts.length === 0 ? (\r\n            <motion.div\r\n              initial={{ opacity: 0 }}\r\n              animate={{ opacity: 1 }}\r\n              className=\"p-6 text-center\"\r\n            >\r\n              <CheckCircleIcon className=\"w-12 h-12 text-green-500 mx-auto mb-3\" />\r\n              <p className=\"text-gray-500 dark:text-gray-400\">\r\n                No unresolved security alerts\r\n              </p>\r\n            </motion.div>\r\n          ) : (\r\n            unresolvedAlerts.map((alert) => (\r\n              <motion.div\r\n                key={alert.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                exit={{ opacity: 0, y: -20 }}\r\n                className=\"p-4 border-b border-gray-200 dark:border-gray-700 hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\r\n              >\r\n                <div className=\"flex items-start space-x-3\">\r\n                  <div className={`p-2 rounded-full ${getSeverityColor(alert.severity)}`}>\r\n                    {getSeverityIcon(alert.severity)}\r\n                  </div>\r\n                  \r\n                  <div className=\"flex-1 min-w-0\">\r\n                    <div className=\"flex items-center justify-between\">\r\n                      <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                        {getAlertTypeText(alert.type)}\r\n                      </h4>\r\n                      <span className={`text-xs px-2 py-1 rounded-full ${getSeverityColor(alert.severity)}`}>\r\n                        {alert.severity.toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                      {alert.message}\r\n                    </p>\r\n                    \r\n                    <div className=\"flex items-center space-x-4 mt-2 text-xs text-gray-500\">\r\n                      <div className=\"flex items-center space-x-1\">\r\n                        <ClockIcon className=\"w-4 h-4\" />\r\n                        <span>{formatTimestamp(alert.timestamp)}</span>\r\n                      </div>\r\n                      <span>Transaction: {alert.transactionId}</span>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-2 mt-3\">\r\n                      <button\r\n                        onClick={() => setSelectedAlert(alert)}\r\n                        className=\"inline-flex items-center space-x-1 text-sm text-blue-600 hover:text-blue-700 dark:text-blue-400 dark:hover:text-blue-300\"\r\n                      >\r\n                        <EyeIcon className=\"w-4 h-4\" />\r\n                        <span>Resolve</span>\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))\r\n          )}\r\n        </AnimatePresence>\r\n      </div>\r\n\r\n      {/* Resolution Modal */}\r\n      <AnimatePresence>\r\n        {selectedAlert && (\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\"\r\n            onClick={() => setSelectedAlert(null)}\r\n          >\r\n            <motion.div\r\n              initial={{ scale: 0.9, opacity: 0 }}\r\n              animate={{ scale: 1, opacity: 1 }}\r\n              exit={{ scale: 0.9, opacity: 0 }}\r\n              className=\"bg-white dark:bg-gray-800 rounded-lg p-6 w-full max-w-md mx-4\"\r\n              onClick={(e) => e.stopPropagation()}\r\n            >\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                  Resolve Alert\r\n                </h3>\r\n                <button\r\n                  onClick={() => setSelectedAlert(null)}\r\n                  className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n                >\r\n                  <XMarkIcon className=\"w-6 h-6\" />\r\n                </button>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                  <strong>Alert:</strong> {getAlertTypeText(selectedAlert.type)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                  <strong>Message:</strong> {selectedAlert.message}\r\n                </p>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  <strong>Severity:</strong> {selectedAlert.severity.toUpperCase()}\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Resolution Notes\r\n                </label>\r\n                <textarea\r\n                  value={resolutionText}\r\n                  onChange={(e) => setResolutionText(e.target.value)}\r\n                  placeholder=\"Describe how this alert was resolved...\"\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                  rows={3}\r\n                />\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-end space-x-3\">\r\n                <button\r\n                  onClick={() => setSelectedAlert(null)}\r\n                  className=\"px-4 py-2 text-sm font-medium text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 rounded-md hover:bg-gray-200 dark:hover:bg-gray-600\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={handleResolveAlert}\r\n                  disabled={!resolutionText.trim()}\r\n                  className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed\"\r\n                >\r\n                  Resolve Alert\r\n                </button>\r\n              </div>\r\n            </motion.div>\r\n          </motion.div>\r\n        )}\r\n      </AnimatePresence>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SecurityAlertsPanel;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  ShieldCheckIcon,\r\n  ExclamationTriangleIcon,\r\n  GlobeAltIcon,\r\n  DevicePhoneMobileIcon,\r\n  ClockIcon,\r\n  BellIcon,\r\n  CheckIcon,\r\n  XMarkIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { TransactionSecuritySettings, TransactionValidationRule } from '../../types/TransactionSecurity';\r\nimport { useTransactionSecurity } from '../../contexts/TransactionSecurityContext';\r\n\r\ninterface TransactionSecuritySettingsProps {\r\n  className?: string;\r\n}\r\n\r\nconst TransactionSecuritySettingsComponent: React.FC<TransactionSecuritySettingsProps> = ({\r\n  className = ''\r\n}) => {\r\n  const {\r\n    settings,\r\n    validationRules,\r\n    updateSecuritySettings,\r\n    loading\r\n  } = useTransactionSecurity();\r\n\r\n  const [localSettings, setLocalSettings] = useState<TransactionSecuritySettings | null>(null);\r\n  const [activeTab, setActiveTab] = useState<'general' | 'rules' | 'notifications'>('general');\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const [saveStatus, setSaveStatus] = useState<'idle' | 'saving' | 'success' | 'error'>('idle');\r\n\r\n  useEffect(() => {\r\n    if (settings) {\r\n      setLocalSettings(settings);\r\n    }\r\n  }, [settings]);\r\n\r\n  const handleSave = async () => {\r\n    if (!localSettings) return;\r\n    \r\n    setIsSaving(true);\r\n    setSaveStatus('saving');\r\n    \r\n    try {\r\n      await updateSecuritySettings(localSettings);\r\n      setSaveStatus('success');\r\n      setTimeout(() => setSaveStatus('idle'), 2000);\r\n    } catch (error) {\r\n      console.error('Failed to save settings:', error);\r\n      setSaveStatus('error');\r\n      setTimeout(() => setSaveStatus('idle'), 3000);\r\n    } finally {\r\n      setIsSaving(false);\r\n    }\r\n  };\r\n\r\n  const updateLocalSettings = (updates: Partial<TransactionSecuritySettings>) => {\r\n    setLocalSettings(prev => prev ? { ...prev, ...updates } : null);\r\n  };\r\n\r\n  const updateFraudDetection = (updates: Partial<TransactionSecuritySettings['fraudDetection']>) => {\r\n    if (!localSettings) return;\r\n    updateLocalSettings({\r\n      fraudDetection: {\r\n        ...localSettings.fraudDetection,\r\n        ...updates\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateTimeRestrictions = (updates: Partial<TransactionSecuritySettings['timeRestrictions']>) => {\r\n    if (!localSettings) return;\r\n    updateLocalSettings({\r\n      timeRestrictions: {\r\n        ...localSettings.timeRestrictions,\r\n        ...updates\r\n      }\r\n    });\r\n  };\r\n\r\n  const updateNotificationSettings = (updates: Partial<TransactionSecuritySettings['notificationSettings']>) => {\r\n    if (!localSettings) return;\r\n    updateLocalSettings({\r\n      notificationSettings: {\r\n        ...localSettings.notificationSettings,\r\n        ...updates\r\n      }\r\n    });\r\n  };\r\n\r\n  const toggleRule = (ruleId: string) => {\r\n    if (!localSettings) return;\r\n    \r\n    const updatedRules = localSettings.fraudDetection.rules.map(rule =>\r\n      rule.id === ruleId ? { ...rule, enabled: !rule.enabled } : rule\r\n    );\r\n    \r\n    updateFraudDetection({ rules: updatedRules });\r\n  };\r\n\r\n  if (loading || !localSettings) {\r\n    return (\r\n      <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 ${className}`}>\r\n        <div className=\"animate-pulse space-y-4\">\r\n          <div className=\"h-6 bg-gray-300 dark:bg-gray-600 rounded w-1/3\"></div>\r\n          <div className=\"space-y-2\">\r\n            <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded\"></div>\r\n            <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-2/3\"></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const tabs = [\r\n    { id: 'general', name: 'General', icon: ShieldCheckIcon },\r\n    { id: 'rules', name: 'Rules', icon: ExclamationTriangleIcon },\r\n    { id: 'notifications', name: 'Notifications', icon: BellIcon }\r\n  ];\r\n\r\n  return (\r\n    <div className={`bg-white dark:bg-gray-800 rounded-lg shadow-lg ${className}`}>\r\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n            Transaction Security Settings\r\n          </h3>\r\n          <div className=\"flex items-center space-x-2\">\r\n            {saveStatus === 'saving' && (\r\n              <div className=\"flex items-center space-x-2 text-blue-600\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600\"></div>\r\n                <span className=\"text-sm\">Saving...</span>\r\n              </div>\r\n            )}\r\n            {saveStatus === 'success' && (\r\n              <div className=\"flex items-center space-x-2 text-green-600\">\r\n                <CheckIcon className=\"w-4 h-4\" />\r\n                <span className=\"text-sm\">Saved</span>\r\n              </div>\r\n            )}\r\n            {saveStatus === 'error' && (\r\n              <div className=\"flex items-center space-x-2 text-red-600\">\r\n                <XMarkIcon className=\"w-4 h-4\" />\r\n                <span className=\"text-sm\">Error</span>\r\n              </div>\r\n            )}\r\n            <button\r\n              onClick={handleSave}\r\n              disabled={isSaving}\r\n              className=\"px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 disabled:opacity-50\"\r\n            >\r\n              Save Changes\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"mt-4\">\r\n          <nav className=\"flex space-x-8\">\r\n            {tabs.map((tab) => {\r\n              const Icon = tab.icon;\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as any)}\r\n                  className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === tab.id\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  }`}\r\n                >\r\n                  <Icon className=\"w-5 h-5\" />\r\n                  <span>{tab.name}</span>\r\n                </button>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"p-6\">\r\n        <motion.div\r\n          key={activeTab}\r\n          initial={{ opacity: 0, x: 20 }}\r\n          animate={{ opacity: 1, x: 0 }}\r\n          transition={{ duration: 0.2 }}\r\n        >\r\n          {activeTab === 'general' && (\r\n            <div className=\"space-y-6\">\r\n              {/* Fraud Detection */}\r\n              <div>\r\n                <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\r\n                  Fraud Detection\r\n                </h4>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                        Enable Fraud Detection\r\n                      </label>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        Automatically detect and flag suspicious transactions\r\n                      </p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => updateFraudDetection({ enabled: !localSettings.fraudDetection.enabled })}\r\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                        localSettings.fraudDetection.enabled ? 'bg-blue-600' : 'bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <span\r\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                          localSettings.fraudDetection.enabled ? 'translate-x-6' : 'translate-x-1'\r\n                        }`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        Max Daily Amount ($)\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={localSettings.maxDailyAmount}\r\n                        onChange={(e) => updateLocalSettings({ maxDailyAmount: Number(e.target.value) })}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        Max Single Transaction ($)\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        value={localSettings.maxSingleTransaction}\r\n                        onChange={(e) => updateLocalSettings({ maxSingleTransaction: Number(e.target.value) })}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Two-Factor Authentication */}\r\n              <div>\r\n                <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\r\n                  Authentication\r\n                </h4>\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                      Require 2FA for Transactions\r\n                    </label>\r\n                    <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                      Always require two-factor authentication for transactions\r\n                    </p>\r\n                  </div>\r\n                  <button\r\n                    onClick={() => updateLocalSettings({ twoFactorRequired: !localSettings.twoFactorRequired })}\r\n                    className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                      localSettings.twoFactorRequired ? 'bg-blue-600' : 'bg-gray-200'\r\n                    }`}\r\n                  >\r\n                    <span\r\n                      className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                        localSettings.twoFactorRequired ? 'translate-x-6' : 'translate-x-1'\r\n                      }`}\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Location Settings */}\r\n              <div>\r\n                <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\r\n                  Location & Device\r\n                </h4>\r\n                <div className=\"space-y-4\">\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                        Device Verification\r\n                      </label>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        Verify transactions from trusted devices only\r\n                      </p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => updateLocalSettings({ deviceVerification: !localSettings.deviceVerification })}\r\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                        localSettings.deviceVerification ? 'bg-blue-600' : 'bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <span\r\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                          localSettings.deviceVerification ? 'translate-x-6' : 'translate-x-1'\r\n                        }`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n\r\n                  <div className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                        Location Verification\r\n                      </label>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        Flag transactions from unusual locations\r\n                      </p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => updateLocalSettings({ locationVerification: !localSettings.locationVerification })}\r\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                        localSettings.locationVerification ? 'bg-blue-600' : 'bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <span\r\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                          localSettings.locationVerification ? 'translate-x-6' : 'translate-x-1'\r\n                        }`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'rules' && (\r\n            <div className=\"space-y-4\">\r\n              <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\r\n                Validation Rules\r\n              </h4>\r\n              <div className=\"space-y-3\">\r\n                {validationRules.map((rule) => (\r\n                  <div\r\n                    key={rule.id}\r\n                    className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\"\r\n                  >\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <button\r\n                          onClick={() => toggleRule(rule.id)}\r\n                          className={`relative inline-flex h-5 w-9 items-center rounded-full transition-colors ${\r\n                            rule.enabled ? 'bg-blue-600' : 'bg-gray-200'\r\n                          }`}\r\n                        >\r\n                          <span\r\n                            className={`inline-block h-3 w-3 transform rounded-full bg-white transition-transform ${\r\n                              rule.enabled ? 'translate-x-5' : 'translate-x-1'\r\n                            }`}\r\n                          />\r\n                        </button>\r\n                        <div>\r\n                          <h5 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {rule.name}\r\n                          </h5>\r\n                          <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                            {rule.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <span className={`text-xs px-2 py-1 rounded-full ${\r\n                        rule.severity === 'low' ? 'bg-blue-100 text-blue-800' :\r\n                        rule.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                        rule.severity === 'high' ? 'bg-orange-100 text-orange-800' :\r\n                        'bg-red-100 text-red-800'\r\n                      }`}>\r\n                        {rule.severity.toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'notifications' && (\r\n            <div className=\"space-y-6\">\r\n              <h4 className=\"text-md font-medium text-gray-900 dark:text-white mb-4\">\r\n                Notification Preferences\r\n              </h4>\r\n              <div className=\"space-y-4\">\r\n                {Object.entries(localSettings.notificationSettings).map(([key, value]) => (\r\n                  <div key={key} className=\"flex items-center justify-between\">\r\n                    <div>\r\n                      <label className=\"text-sm font-medium text-gray-700 dark:text-gray-300 capitalize\">\r\n                        {key} Notifications\r\n                      </label>\r\n                      <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        Receive security alerts via {key}\r\n                      </p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => updateNotificationSettings({ [key]: !value })}\r\n                      className={`relative inline-flex h-6 w-11 items-center rounded-full transition-colors ${\r\n                        value ? 'bg-blue-600' : 'bg-gray-200'\r\n                      }`}\r\n                    >\r\n                      <span\r\n                        className={`inline-block h-4 w-4 transform rounded-full bg-white transition-transform ${\r\n                          value ? 'translate-x-6' : 'translate-x-1'\r\n                        }`}\r\n                      />\r\n                    </button>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionSecuritySettingsComponent;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport {\r\n  ShieldCheckIcon,\r\n  ExclamationTriangleIcon,\r\n  ChartBarIcon,\r\n  CogIcon,\r\n  DevicePhoneMobileIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { useTransactionSecurity } from '../contexts/TransactionSecurityContext';\r\nimport TransactionRiskIndicator from '../components/security/TransactionRiskIndicator';\r\nimport SecurityAlertsPanel from '../components/security/SecurityAlertsPanel';\r\nimport TransactionSecuritySettings from '../components/security/TransactionSecuritySettings';\r\n\r\nconst TransactionSecurity: React.FC = () => {\r\n  const {\r\n    alerts,\r\n    securityEvents,\r\n    trustedDevices,\r\n    loading,\r\n    refreshAlerts,\r\n    refreshSecurityEvents,\r\n    resolveAlert\r\n  } = useTransactionSecurity();\r\n\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'alerts' | 'settings' | 'devices'>('overview');\r\n  const [testTransaction, setTestTransaction] = useState({\r\n    amount: 1000,\r\n    recipient: 'test@example.com',\r\n    type: 'transfer'\r\n  });\r\n\r\n  useEffect(() => {\r\n    refreshAlerts();\r\n    refreshSecurityEvents();\r\n  }, [refreshAlerts, refreshSecurityEvents]);\r\n\r\n  const tabs = [\r\n    { id: 'overview', name: 'Overview', icon: ChartBarIcon },\r\n    { id: 'alerts', name: 'Alerts', icon: ExclamationTriangleIcon },\r\n    { id: 'settings', name: 'Settings', icon: CogIcon },\r\n    { id: 'devices', name: 'Devices', icon: DevicePhoneMobileIcon }\r\n  ];\r\n\r\n  const getStats = () => {\r\n    const totalAlerts = alerts.length;\r\n    const unresolvedAlerts = alerts.filter(alert => !alert.resolved).length;\r\n    const criticalEvents = securityEvents.filter(event => event.severity === 'critical').length;\r\n    const trustedDeviceCount = trustedDevices.length;\r\n\r\n    return {\r\n      totalAlerts,\r\n      unresolvedAlerts,\r\n      criticalEvents,\r\n      trustedDeviceCount\r\n    };\r\n  };\r\n\r\n  const stats = getStats();\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\">\r\n        <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n          <div className=\"animate-pulse\">\r\n            <div className=\"h-8 bg-gray-300 dark:bg-gray-600 rounded w-1/3 mb-8\"></div>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-8\">\r\n              {[...Array(4)].map((_, i) => (\r\n                <div key={i} className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\r\n                  <div className=\"h-4 bg-gray-300 dark:bg-gray-600 rounded w-1/2 mb-2\"></div>\r\n                  <div className=\"h-8 bg-gray-300 dark:bg-gray-600 rounded w-1/3\"></div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-8\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"mb-8\">\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n            Transaction Security\r\n          </h1>\r\n          <p className=\"mt-2 text-gray-600 dark:text-gray-400\">\r\n            Monitor and manage transaction security, fraud detection, and risk assessment\r\n          </p>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"mb-8\">\r\n          <nav className=\"flex space-x-8\">\r\n            {tabs.map((tab) => {\r\n              const Icon = tab.icon;\r\n              return (\r\n                <button\r\n                  key={tab.id}\r\n                  onClick={() => setActiveTab(tab.id as any)}\r\n                  className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                    activeTab === tab.id\r\n                      ? 'border-blue-500 text-blue-600'\r\n                      : 'border-transparent text-gray-500 hover:text-gray-700 hover:border-gray-300'\r\n                  }`}\r\n                >\r\n                  <Icon className=\"w-5 h-5\" />\r\n                  <span>{tab.name}</span>\r\n                  {tab.id === 'alerts' && stats.unresolvedAlerts > 0 && (\r\n                    <span className=\"bg-red-100 text-red-800 text-xs px-2 py-1 rounded-full\">\r\n                      {stats.unresolvedAlerts}\r\n                    </span>\r\n                  )}\r\n                </button>\r\n              );\r\n            })}\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Tab Content */}\r\n        <motion.div\r\n          key={activeTab}\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ duration: 0.2 }}\r\n        >\r\n          {activeTab === 'overview' && (\r\n            <div className=\"space-y-8\">\r\n              {/* Stats Cards */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n                      <ExclamationTriangleIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                    </div>\r\n                    <div className=\"ml-4\">\r\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n                        Total Alerts\r\n                      </p>\r\n                      <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                        {stats.totalAlerts}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ delay: 0.1 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"p-2 bg-red-100 dark:bg-red-900 rounded-lg\">\r\n                      <ExclamationTriangleIcon className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\r\n                    </div>\r\n                    <div className=\"ml-4\">\r\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n                        Unresolved\r\n                      </p>\r\n                      <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                        {stats.unresolvedAlerts}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ delay: 0.2 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"p-2 bg-orange-100 dark:bg-orange-900 rounded-lg\">\r\n                      <ShieldCheckIcon className=\"w-6 h-6 text-orange-600 dark:text-orange-400\" />\r\n                    </div>\r\n                    <div className=\"ml-4\">\r\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n                        Critical Events\r\n                      </p>\r\n                      <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                        {stats.criticalEvents}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n\r\n                <motion.div\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ delay: 0.3 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\"\r\n                >\r\n                  <div className=\"flex items-center\">\r\n                    <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n                      <DevicePhoneMobileIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                    </div>\r\n                    <div className=\"ml-4\">\r\n                      <p className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n                        Trusted Devices\r\n                      </p>\r\n                      <p className=\"text-2xl font-semibold text-gray-900 dark:text-white\">\r\n                        {stats.trustedDeviceCount}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              </div>\r\n\r\n              {/* Risk Assessment Test */}\r\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                  Risk Assessment Test\r\n                </h3>\r\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n                  <div>\r\n                    <h4 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n                      Test Transaction\r\n                    </h4>\r\n                    <div className=\"space-y-3\">\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                          Amount ($)\r\n                        </label>\r\n                        <input\r\n                          type=\"number\"\r\n                          value={testTransaction.amount}\r\n                          onChange={(e) => setTestTransaction(prev => ({\r\n                            ...prev,\r\n                            amount: Number(e.target.value)\r\n                          }))}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                        />\r\n                      </div>\r\n                      <div>\r\n                        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-1\">\r\n                          Recipient\r\n                        </label>\r\n                        <input\r\n                          type=\"text\"\r\n                          value={testTransaction.recipient}\r\n                          onChange={(e) => setTestTransaction(prev => ({\r\n                            ...prev,\r\n                            recipient: e.target.value\r\n                          }))}\r\n                          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-md shadow-sm focus:ring-blue-500 focus:border-blue-500 dark:bg-gray-700 dark:text-white\"\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div>\r\n                    <h4 className=\"text-md font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n                      Risk Assessment\r\n                    </h4>\r\n                    <TransactionRiskIndicator\r\n                      riskScore={null} // This would be calculated based on test transaction\r\n                      size=\"lg\"\r\n                      showDetails={true}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Recent Security Events */}\r\n              <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                  Recent Security Events\r\n                </h3>\r\n                <div className=\"space-y-3\">\r\n                  {securityEvents.slice(0, 5).map((event) => (\r\n                    <div\r\n                      key={event.id}\r\n                      className=\"flex items-center justify-between p-3 border border-gray-200 dark:border-gray-700 rounded-lg\"\r\n                    >\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className={`p-2 rounded-full ${\r\n                          event.severity === 'critical' ? 'bg-red-100 dark:bg-red-900' :\r\n                          event.severity === 'high' ? 'bg-orange-100 dark:bg-orange-900' :\r\n                          event.severity === 'medium' ? 'bg-yellow-100 dark:bg-yellow-900' :\r\n                          'bg-blue-100 dark:bg-blue-900'\r\n                        }`}>\r\n                          <ShieldCheckIcon className={`w-4 h-4 ${\r\n                            event.severity === 'critical' ? 'text-red-600 dark:text-red-400' :\r\n                            event.severity === 'high' ? 'text-orange-600 dark:text-orange-400' :\r\n                            event.severity === 'medium' ? 'text-yellow-600 dark:text-yellow-400' :\r\n                            'text-blue-600 dark:text-blue-400'\r\n                          }`} />\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                            {event.description}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                            {new Date(event.timestamp).toLocaleString()}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      <span className={`text-xs px-2 py-1 rounded-full ${\r\n                        event.severity === 'critical' ? 'bg-red-100 text-red-800' :\r\n                        event.severity === 'high' ? 'bg-orange-100 text-orange-800' :\r\n                        event.severity === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                        'bg-blue-100 text-blue-800'\r\n                      }`}>\r\n                        {event.severity.toUpperCase()}\r\n                      </span>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {activeTab === 'alerts' && (\r\n            <SecurityAlertsPanel\r\n              alerts={alerts}\r\n              onResolveAlert={resolveAlert}\r\n            />\r\n          )}\r\n\r\n          {activeTab === 'settings' && (\r\n            <TransactionSecuritySettings />\r\n          )}\r\n\r\n          {activeTab === 'devices' && (\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6 shadow-sm\">\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                Trusted Devices\r\n              </h3>\r\n              <div className=\"space-y-4\">\r\n                {trustedDevices.map((device) => (\r\n                  <div\r\n                    key={device.id}\r\n                    className=\"flex items-center justify-between p-4 border border-gray-200 dark:border-gray-700 rounded-lg\"\r\n                  >\r\n                    <div className=\"flex items-center space-x-4\">\r\n                      <div className=\"p-3 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n                        <DevicePhoneMobileIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                      </div>\r\n                      <div>\r\n                        <h4 className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {device.browser} on {device.os}\r\n                        </h4>\r\n                        <p className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          {device.location.city}, {device.location.country}\r\n                        </p>\r\n                        <p className=\"text-xs text-gray-400\">\r\n                          Last seen: {new Date(device.lastSeen).toLocaleString()}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      <span className=\"text-xs px-2 py-1 bg-green-100 text-green-800 rounded-full\">\r\n                        Trusted\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TransactionSecurity;\r\n","import * as React from \"react\";\nfunction ExclamationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;"],"names":["_ref","riskScore","size","showDetails","_jsxs","className","children","_jsx","motion","div","initial","opacity","scale","animate","concat","level","getRiskColor","getSizeClasses","CheckCircleIcon","ExclamationTriangleIcon","ExclamationCircleIcon","XCircleIcon","ShieldCheckIcon","getRiskIcon","toUpperCase","score","height","recommendation","getRecommendationText","factors","length","map","factor","index","description","style","width","impact","Math","round","alerts","onResolveAlert","selectedAlert","setSelectedAlert","useState","resolutionText","setResolutionText","getSeverityColor","severity","getSeverityIcon","getAlertTypeText","type","unresolvedAlerts","filter","alert","resolved","resolvedAlerts","AnimatePresence","y","exit","message","ClockIcon","timestamp","Intl","DateTimeFormat","month","day","hour","minute","format","Date","transactionId","onClick","EyeIcon","id","e","stopPropagation","XMarkIcon","value","onChange","target","placeholder","rows","handleResolveAlert","trim","disabled","settings","validationRules","updateSecuritySettings","loading","useTransactionSecurity","localSettings","setLocalSettings","activeTab","setActiveTab","isSaving","setIsSaving","saveStatus","setSaveStatus","useEffect","updateLocalSettings","updates","prev","_objectSpread","updateFraudDetection","fraudDetection","tabs","name","icon","BellIcon","CheckIcon","async","setTimeout","error","console","tab","Icon","x","transition","duration","enabled","maxDailyAmount","Number","maxSingleTransaction","twoFactorRequired","deviceVerification","locationVerification","rule","ruleId","updatedRules","rules","toggleRule","Object","entries","notificationSettings","_ref2","key","updateNotificationSettings","TransactionSecurity","securityEvents","trustedDevices","refreshAlerts","refreshSecurityEvents","resolveAlert","testTransaction","setTestTransaction","amount","recipient","ChartBarIcon","CogIcon","DevicePhoneMobileIcon","stats","totalAlerts","criticalEvents","event","trustedDeviceCount","Array","_","i","delay","TransactionRiskIndicator","slice","toLocaleString","SecurityAlertsPanel","TransactionSecuritySettings","device","browser","os","location","city","country","lastSeen","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}