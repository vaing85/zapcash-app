{"version":3,"file":"static/js/504.b391da0b.chunk.js","mappings":"iKACA,SAASA,EAAOC,EAIbC,GAAQ,IAJM,MACfC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,kNACYZ,EAAAA,cAAoB,OAAQ,CAC3CU,cAAe,QACfC,eAAgB,QAChBC,EAAG,wBAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBR,E,oFC3BlD,SAASqB,EAAapB,EAInBC,GAAQ,IAJY,MACrBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,2PAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBa,E,oFCvBlD,SAASC,EAAgBrB,EAItBC,GAAQ,IAJe,MACxBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,+RAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBc,E,mHCvBlD,SAASC,EAAqBtB,EAI3BC,GAAQ,IAJoB,MAC7BC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,kHAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBe,G,2CC8qB3C,MAAMC,EAAmB,IA5rBhC,MACUC,qBAAAA,CAAsBC,GAqH5B,MAnHwC,CACtC,CACET,GAAI,IACJS,SACAC,OAAQ,IACRC,SAAU,MACVC,KAAM,OACNC,UAAW,cACXC,KAAM,iBACNC,UAAW,uBACXC,SAAU,gBACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,KACRC,SAAU,MACVC,KAAM,OACNC,UAAW,cACXC,KAAM,OACNC,UAAW,uBACXC,SAAU,iBACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,OACRC,SAAU,MACVC,KAAM,OACNC,UAAW,eACXC,KAAM,cACNC,UAAW,uBACXC,SAAU,WACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,KACRC,SAAU,MACVC,KAAM,UACNQ,OAAQ,WACRN,KAAM,SACNC,UAAW,uBACXC,SAAU,SACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,MACRC,SAAU,MACVC,KAAM,OACNC,UAAW,oBACXC,KAAM,uBACNC,UAAW,uBACXC,SAAU,gBACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,GACRC,SAAU,MACVC,KAAM,OACNC,UAAW,gBACXC,KAAM,mBACNC,UAAW,uBACXC,SAAU,gBACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,IACRC,SAAU,MACVC,KAAM,OACNC,UAAW,kBACXC,KAAM,gBACNC,UAAW,uBACXC,SAAU,YACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAEb,CACEnB,GAAI,IACJS,SACAC,OAAQ,IACRC,SAAU,MACVC,KAAM,OACNC,UAAW,iBACXC,KAAM,qBACNC,UAAW,uBACXC,SAAU,mBACVC,OAAQ,YACRC,UAAW,uBACXC,UAAW,wBAKjB,CAEAE,qBAAAA,CAAsBZ,EAAgBa,EAAiBC,GACrD,MAAMC,EAAeC,KAAKjB,sBAAsBC,GAC7CiB,OAAOC,IACN,GAAe,SAAXA,EAAEf,KAAiB,OAAO,EAC9B,MAAMgB,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmBN,GAAaM,GAAmBL,IAGxDO,EAAc,IAAIC,IAExBP,EAAaQ,QAAQC,IACnB,MAAMjB,EAAWiB,EAAYjB,UAAY,QACnCkB,EAAWJ,EAAYK,IAAInB,IAAa,CAAEN,OAAQ,EAAG0B,MAAO,GAClEN,EAAYO,IAAIrB,EAAU,CACxBN,OAAQwB,EAASxB,OAASuB,EAAYvB,OACtC0B,MAAOF,EAASE,MAAQ,MAI5B,MAAME,EAAcC,MAAMC,KAAKV,EAAYW,UACxCC,OAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIlC,OAAQ,GAEpCmC,EAAS,CACb,UAAW,UAAW,UAAW,UACjC,UAAW,UAAW,UAAW,WAG7BC,EAAQ,CACZ,eAAM,eAAM,qBAAO,eAAM,eAAM,eAAM,eAAM,gBAG7C,OAAOP,MAAMC,KAAKV,EAAYiB,WAC3BC,IAAI,CAAAhE,EAAeiE,KAAK,IAAlBC,EAAMC,GAAKnE,EAAA,MAAa,CAC7BgB,GAAIkD,EAAKE,cAAcC,QAAQ,OAAQ,KACvCH,OACAxC,OAAQyC,EAAKzC,OACb4C,WAAYhB,EAAc,EAAKa,EAAKzC,OAAS4B,EAAe,IAAM,EAClEiB,MAAOV,EAAOI,EAAQJ,EAAOW,QAC7BC,KAAMX,EAAMG,EAAQH,EAAMU,WAE3BE,KAAK,CAACC,EAAGC,IAAMA,EAAElD,OAASiD,EAAEjD,OACjC,CAEAmD,iBAAAA,CAAkBpD,GAAsD,IAAtCqD,EAAcC,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,EACjD,MAAME,EAA0B,GAC1BC,EAAM,IAAIrC,KAEhB,IAAK,IAAIsC,EAAIL,EAAS,EAAGK,GAAK,EAAGA,IAAK,CAAC,IAADC,EACpC,MAAMC,EAAO,IAAIxC,KAAKqC,EAAII,cAAeJ,EAAIK,WAAaJ,EAAG,GACvDK,EAAY,IAAI3C,KAAKqC,EAAII,cAAeJ,EAAIK,WAAaJ,EAAI,EAAG,GAShEzD,EAPee,KAAKjB,sBAAsBC,GAC7CiB,OAAOC,IACN,GAAe,SAAXA,EAAEf,KAAiB,OAAO,EAC9B,MAAMgB,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmByC,GAAQzC,EAAkB4C,IAG5B9B,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GACzD+D,EAASJ,EAAKK,mBAAmB,QAAS,CAAEC,MAAO,QAASC,KAAM,YAElEC,EAAiBV,EAAI,IAA6B,QAAzBC,EAAAH,EAAOA,EAAOT,OAAS,UAAE,IAAAY,OAAA,EAAzBA,EAA2B1D,SAAc,EAClEoE,EAASpE,EAASmE,EAClBE,EAAmBF,EAAiB,EAAKC,EAASD,EAAkB,IAAM,EAEhFZ,EAAOe,KAAK,CACVP,SACA/D,SACAoE,SACAC,oBAEJ,CAEA,OAAOd,CACT,CAEAgB,gBAAAA,CAAiBxE,EAAgBmE,EAAcD,GAC7C,MAAMrD,EAAY,IAAIO,KAAK+C,EAAMD,EAAQ,EAAG,GACtCpD,EAAU,IAAIM,KAAK+C,EAAMD,EAAO,GAEhCnD,EAAeC,KAAKjB,sBAAsBC,GAC7CiB,OAAOC,IACN,MAAMC,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmBN,GAAaM,GAAmBL,IAGxD2D,EAAS1D,EACZE,OAAOC,GAAgB,YAAXA,EAAEf,MACd8B,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GAEhCyE,EAAW3D,EACdE,OAAOC,GAAgB,SAAXA,EAAEf,MACd8B,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GAEhC0E,EAAYF,EAASC,EACrBE,EAAcH,EAAS,EAAKE,EAAYF,EAAU,IAAM,EAExDI,EAAa7D,KAAKJ,sBAAsBZ,EAAQa,EAAWC,GAE3DgE,EAAkB/D,EACrBE,OAAOC,GAAgB,SAAXA,EAAEf,MACd8C,KAAK,CAACC,EAAGC,IAAMA,EAAElD,OAASiD,EAAEjD,QAC5B8E,MAAM,EAAG,GAEZ,MAAO,CACLb,MAAOrD,EAAUoD,mBAAmB,QAAS,CAAEC,MAAO,SACtDC,OACAa,YAAaP,EACbQ,cAAeP,EACfC,YACAE,aACAC,kBACAF,cAEJ,CAEAM,mBAAAA,CAAoBlF,GAClB,MAAMwD,EAASxC,KAAKoC,kBAAkBpD,EAAQ,GACxCmF,EAAc3B,EAAOuB,OAAO,GAC5BK,EAAcD,EAAYlD,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GAAKkF,EAAYpC,OAG9EsC,EAAa7B,EAAOT,OAAS,GAChCS,EAAOA,EAAOT,OAAS,GAAG9C,OAASuD,EAAO,GAAGvD,QAAUuD,EAAOT,OAAS,EAM1E,MAAO,CACLgB,UAAW,CACTuB,UANwBC,KAAKC,IAAI,EAAGJ,EAAcC,GAOlDI,WAAY,KAEdC,YAAa,CACXJ,UAT0BC,KAAKC,IAAI,EAAiB,EAAdJ,EAA+B,EAAbC,GAUxDI,WAAY,KAEdE,SAAU,CACRL,UAZuBC,KAAKC,IAAI,EAAiB,GAAdJ,EAAgC,GAAbC,GAatDI,WAAY,KAGlB,CAEAG,gBAAAA,CAAiB5F,GAEf,MAAO,CACL,CACET,GAAI,IACJkD,KAAM,sBACNoD,aAAc,IACdC,cAAe,MACfC,SAAU,IAAI3E,KAAK,cACnBb,SAAU,gBACVyF,SAAU,KACVxF,OAAQ,YAEV,CACEjB,GAAI,IACJkD,KAAM,iBACNoD,aAAc,IACdC,cAAe,KACfC,SAAU,IAAI3E,KAAK,cACnBb,SAAU,UACVyF,SAAU,GACVxF,OAAQ,SAEV,CACEjB,GAAI,IACJkD,KAAM,sBACNoD,aAAc,IACdC,cAAe,MACfC,SAAU,IAAI3E,KAAK,cACnBb,SAAU,gBACVyF,SAAU,GACVxF,OAAQ,YAGd,CAEAyF,iBAAAA,CAAkBjG,EAAgBG,GAChC,MAAMsD,EAAM,IAAIrC,KAEhB,GAAa,YAATjB,EAAoB,CACtB,MAAM+F,EAAe,IAAI9E,KAAKqC,EAAII,cAAeJ,EAAIK,WAAY,GAC3DC,EAAY,IAAI3C,KAAKqC,EAAII,cAAeJ,EAAIK,WAAa,EAAG,GAC5DqC,EAAgB,IAAI/E,KAAKqC,EAAII,cAAeJ,EAAIK,WAAa,EAAG,GAChEsC,EAAoB,IAAIhF,KAAKqC,EAAII,cAAeJ,EAAIK,WAAY,GAEhEuC,EAAsBrF,KAAKjB,sBAAsBC,GACpDiB,OAAOC,IACN,GAAe,SAAXA,EAAEf,KAAiB,OAAO,EAC9B,MAAMgB,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmB+E,GAAgB/E,EAAkB4C,IAG1DuC,EAAuBtF,KAAKjB,sBAAsBC,GACrDiB,OAAOC,IACN,GAAe,SAAXA,EAAEf,KAAiB,OAAO,EAC9B,MAAMgB,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmBgF,GAAiBhF,EAAkBiF,IAG3DN,EAAgBO,EAAoBpE,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GACvEmE,EAAiBkC,EAAqBrE,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GACzEoE,EAASyB,EAAgB1B,EACzBE,EAAmBF,EAAiB,EAAKC,EAASD,EAAkB,IAAM,EAEhF,MAAO,CACLmC,QAAS,CACPvC,OAAQkC,EAAajC,mBAAmB,QAAS,CAAEC,MAAO,OAAQC,KAAM,YACxElE,OAAQ6F,GAEVU,SAAU,CACRxC,OAAQmC,EAAclC,mBAAmB,QAAS,CAAEC,MAAO,OAAQC,KAAM,YACzElE,OAAQmE,GAEVC,SACAC,mBAEJ,CAAO,CACL,MAAMmC,EAAc,IAAIrF,KAAKqC,EAAII,cAAe,EAAG,GAC7C8B,EAAW,IAAIvE,KAAKqC,EAAII,cAAgB,EAAG,EAAG,GAC9C6C,EAAe,IAAItF,KAAKqC,EAAII,cAAgB,EAAG,EAAG,GAClD8C,EAAmB,IAAIvF,KAAKqC,EAAII,cAAe,EAAG,GAElDwC,EAAsBrF,KAAKjB,sBAAsBC,GACpDiB,OAAOC,IACN,GAAe,SAAXA,EAAEf,KAAiB,OAAO,EAC9B,MAAMgB,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmBsF,GAAetF,EAAkBwE,IAGzDW,EAAuBtF,KAAKjB,sBAAsBC,GACrDiB,OAAOC,IACN,GAAe,SAAXA,EAAEf,KAAiB,OAAO,EAC9B,MAAMgB,EAAkB,IAAIC,KAAKF,EAAEZ,WAAaY,EAAET,WAClD,OAAOU,GAAmBuF,GAAgBvF,EAAkBwF,IAG1Db,EAAgBO,EAAoBpE,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GACvEmE,EAAiBkC,EAAqBrE,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GACzEoE,EAASyB,EAAgB1B,EACzBE,EAAmBF,EAAiB,EAAKC,EAASD,EAAkB,IAAM,EAEhF,MAAO,CACLmC,QAAS,CACPvC,OAAQyC,EAAY5C,cAAc+C,WAClC3G,OAAQ6F,GAEVU,SAAU,CACRxC,OAAQ0C,EAAa7C,cAAc+C,WACnC3G,OAAQmE,GAEVC,SACAC,mBAEJ,CACF,CAEAuC,YAAAA,CAAa7G,GAAwD,IAAxC8G,EAAqBxD,UAAAP,OAAA,QAAAQ,IAAAD,UAAA,GAAAA,UAAA,GAAG,MACnD,MAAMyD,EAAS/F,KAAKwD,iBAAiBxE,GAAQ,IAAIoB,MAAOyC,eAAe,IAAIzC,MAAO0C,WAAa,GAE/F,GAAe,QAAXgD,EAAkB,CAQpB,MAAO,CAPS,CAAC,WAAY,SAAU,iBAC1BC,EAAOlC,WAAWtC,IAAIJ,GAAO,CACxCA,EAAIM,KACJN,EAAIlC,OAAO+G,QAAQ,GACnB7E,EAAIU,WAAWmE,QAAQ,GAAK,OAI3BzE,IAAI0E,GAAOA,EAAIC,KAAK,MACpBA,KAAK,KACV,CAGA,OAAOC,KAAKC,UAAUL,EAAQ,KAAM,EACtC,CAIA,yBAAMM,CAAoBrH,EAAgBsH,GACxC,IAAKA,EAAiB,sBACpB,MAAO,CACLC,SAAU,GACVC,gBAAiB,GACjBC,WAAW,EACXC,eAAgB,+FAKd,IAAIC,QAAQC,GAAWC,WAAWD,EAAS,MAE5B5G,KAAKjB,sBAAsBC,GACR+E,MAAM,EAAG,IAgEjD,MAAO,CACLwC,SA/De,CACf,CACEhI,GAAI,IACJY,KAAM,mBACN1B,MAAO,4BACPqJ,YAAa,sDACbC,OAAQ,OACRxH,SAAU,gBACVkF,WAAY,IACZuC,eAAgB,iEAElB,CACEzI,GAAI,IACJY,KAAM,sBACN1B,MAAO,4BACPqJ,YAAa,0EACbC,OAAQ,SACRxH,SAAU,gBACVkF,WAAY,IACZuC,eAAgB,4DAElB,CACEzI,GAAI,IACJY,KAAM,eACN1B,MAAO,eACPqJ,YAAa,qDACbC,OAAQ,OACRxH,SAAU,gBACVkF,WAAY,IACZuC,eAAgB,kDAmClBR,gBA/BsB,CACtB,CACEjI,GAAI,IACJY,KAAM,sBACN1B,MAAO,uBACPqJ,YAAa,+EACbG,SAAU,OACVC,iBAAkB,IAClBC,YAAa,CACX,wCACA,yCACA,8CAGJ,CACE5I,GAAI,IACJY,KAAM,yBACN1B,MAAO,yBACPqJ,YAAa,uEACbG,SAAU,SACVG,iBAAkB,KAClBD,YAAa,CACX,oCACA,kDACA,6CAQJV,WAAW,EACXY,aAAa,IAAIjH,MAAOkH,cAE5B,CAEA,4BAAMC,CAAuBvI,EAAgBsH,GAC3C,IAAKA,EAAiB,sBACpB,MAAO,CACLkB,YAAa,GACbf,WAAW,EACXC,eAAgB,uFAKd,IAAIC,QAAQC,GAAWC,WAAWD,EAAS,OAElC5G,KAAKoC,kBAAkBpD,EAAQ,IAA9C,MACMyI,EAAWzH,KAAKkE,oBAAoBlF,GA4C1C,MAAO,CACLwI,YA3CkB,CAClB,CACEjJ,GAAI,IACJY,KAAM,oBACN1B,MAAO,+BACPiK,gBAAiBD,EAAS1E,UAAUuB,UACpCG,WAAYgD,EAAS1E,UAAU0B,WAC/BkD,QAAS,CACP,+BACA,kBACA,gCAEFC,UAAWH,EAAS1E,UAAUuB,UAAY,IAAO,OAAS,UAE5D,CACE/F,GAAI,IACJY,KAAM,iBACN1B,MAAO,sBACPiK,gBAAiB,IACjBjD,WAAY,IACZkD,QAAS,CACP,8BACA,0BACA,2BAEFC,UAAW,OAEb,CACErJ,GAAI,IACJY,KAAM,mBACN1B,MAAO,oBACPiK,gBAAiB,IACjBjD,WAAY,IACZkD,QAAS,CACP,2BACA,iCACA,+BAEFC,UAAW,QAMbnB,WAAW,EACXY,aAAa,IAAIjH,MAAOkH,cACxBO,aAAc,OAElB,CAEA,sBAAMC,CAAiB9I,EAAgBsH,GACrC,IAAKA,EAAiB,mBACpB,MAAO,CACLyB,QAAS,GACTtB,WAAW,EACXC,eAAgB,4FAKd,IAAIC,QAAQC,GAAWC,WAAWD,EAAS,MA8DjD,MAAO,CACLmB,QA7DoB,CACpB,CACExJ,GAAI,IACJkD,KAAM,oBACNqF,YAAa,iDACb3H,KAAM,YACN6I,UAAW,UACXC,SAAU,CACR,wBACA,kBACA,eACA,mBAEFC,cAAe,CACbC,UAAU,EACVC,MAAM,EACNC,YAAa,SACbC,OAAQ,iBAGZ,CACE/J,GAAI,IACJkD,KAAM,yBACNqF,YAAa,oDACb3H,KAAM,eACN6I,UAAW,SACXC,SAAU,CACR,yBACA,oBACA,mBACA,uBAEFC,cAAe,CACbC,UAAU,EACVC,MAAM,EACNC,YAAa,YACbC,OAAQ,aAGZ,CACE/J,GAAI,IACJkD,KAAM,oBACNqF,YAAa,wCACb3H,KAAM,aACN6I,UAAW,YACXC,SAAU,CACR,0BACA,qBACA,kBACA,2BAEFC,cAAe,CACbC,UAAU,EACVC,MAAM,EACNC,YAAa,WACbC,OAAQ,YAOZ7B,WAAW,EACXY,aAAa,IAAIjH,MAAOkH,cAE5B,CAEA,uBAAMiB,CAAkBvJ,EAAgBsH,GACtC,IAAKA,EAAiB,2BACpB,MAAO,CACLkC,OAAQ,GACR/B,WAAW,EACXC,eAAgB,gFAKd,IAAIC,QAAQC,GAAWC,WAAWD,EAAS,MAgDjD,MAAO,CACL4B,OA/Ca,CACb,CACEjK,GAAI,IACJY,KAAM,eACNsJ,SAAU,UACVhL,MAAO,2BACPiL,QAAS,+CACTpJ,WAAW,IAAIc,MAAOkH,cACtB/H,SAAU,gBACVoJ,gBAAgB,EAChBC,QAAS,CACP,6BACA,0BACA,2BAGJ,CACErK,GAAI,IACJY,KAAM,mBACNsJ,SAAU,OACVhL,MAAO,2BACPiL,QAAS,gEACTpJ,UAAW,IAAIc,KAAKA,KAAKqC,MAAQ,MAAS6E,cAC1C/H,SAAU,gBACVoJ,gBAAgB,EAChBC,QAAS,CACP,sBACA,6BAGJ,CACErK,GAAI,IACJY,KAAM,oBACNsJ,SAAU,UACVhL,MAAO,6BACPiL,QAAS,2DACTpJ,UAAW,IAAIc,KAAKA,KAAKqC,MAAQ,MAAS6E,cAC1C/H,SAAU,UACVoJ,gBAAgB,EAChBC,QAAS,CACP,uBACA,iCAOJnC,WAAW,EACXY,aAAa,IAAIjH,MAAOkH,cAE5B,G,aC5rBF,MA8DA,EA9DoD/J,IAAqB,IAApB,WAAEsG,GAAYtG,EACjE,GAA0B,IAAtBsG,EAAW9B,OACb,OACE8G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEC,UACrFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,oCAMX,MAAMlI,EAAcgD,EAAW5C,OAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIlC,OAAQ,GAEtE,OACE+J,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,CACvBlF,EAAWtC,IAAI,CAAChC,EAAUiC,KACzBwH,EAAAA,EAAAA,MAAA,OAAuBF,UAAU,8BAA6BC,SAAA,EAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,KAAA,OACEC,UAAU,qCACVG,MAAO,CAAEC,gBAAiB3J,EAASuC,UAErC+G,EAAAA,EAAAA,KAAA,QAAMC,UAAU,WAAUC,SAAExJ,EAASyC,QACrCgH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,6DAA4DC,SACtExJ,EAASkC,QAEZuH,EAAAA,EAAAA,MAAA,KAAGF,UAAU,2CAA0CC,SAAA,CACpDxJ,EAASsC,WAAWmE,QAAQ,GAAG,aAAMzG,EAASN,OAAO+G,QAAQ,aAKpE6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kBAAiBC,UAC9BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACnEF,EAAAA,EAAAA,KAAA,OACEC,UAAU,+CACVG,MAAO,CACLE,MAAM,GAADC,OAAK7J,EAASsC,WAAU,KAC7BqH,gBAAiB3J,EAASuC,eAvB1BvC,EAAShB,MA+BrBsK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oDAAmDC,SAAC,WAGpEC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,kDAAiDC,SAAA,CAAC,IAC9DlI,EAAYmF,QAAQ,eCuDlC,EA7G8CzI,IAAiB,IAAhB,OAAEiF,GAAQjF,EACvD,GAAsB,IAAlBiF,EAAOT,OACT,OACE8G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yEAAwEC,UACrFC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,cAAaC,SAAA,EAC1BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,SAAC,kBAC/BF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iCAMX,MAAMM,EAAY9E,KAAKC,OAAOhC,EAAOjB,IAAIrB,GAAKA,EAAEjB,SAC1CqK,EAAY/E,KAAKgF,OAAO/G,EAAOjB,IAAIrB,GAAKA,EAAEjB,SAC1CuK,EAAQH,EAAYC,EAE1B,OACEN,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gBAAeC,UAC5BC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gBAAgB3K,QAAQ,cAAa4K,SAAA,CAEjD,CAAC,EAAG,IAAM,GAAK,IAAM,GAAGxH,IAAI,CAACkI,EAAOjI,KACnCqH,EAAAA,EAAAA,KAAA,QAEEa,GAAG,IACHC,GAAI,IAAMF,EACVG,GAAG,MACHC,GAAI,IAAMJ,EACVpL,OAAO,eACPD,YAAY,IACZ0K,UAAU,oCAPLtH,KAYTqH,EAAAA,EAAAA,KAAA,YACEiB,OAAQtH,EAAOjB,IAAI,CAACwI,EAAOvI,KACzB,MAAMwI,EAAKxI,GAASgB,EAAOT,OAAS,GAAM,IACpCkI,EAAIT,EAAQ,EAAI,KAAQO,EAAM9K,OAASqK,GAAaE,EAAS,IAAM,IACzE,MAAM,GAANJ,OAAUY,EAAC,KAAAZ,OAAIa,KACd/D,KAAK,KACRhI,KAAK,OACLG,OAAO,UACPD,YAAY,IACZI,cAAc,QACdC,eAAe,UAIhB+D,EAAOjB,IAAI,CAACwI,EAAOvI,KAClB,MAAMwI,EAAKxI,GAASgB,EAAOT,OAAS,GAAM,IACpCkI,EAAIT,EAAQ,EAAI,KAAQO,EAAM9K,OAASqK,GAAaE,EAAS,IAAM,IACzE,OACEX,EAAAA,EAAAA,KAAA,UAEEqB,GAAIF,EACJG,GAAIF,EACJG,EAAE,IACFlM,KAAK,UACL4K,UAAU,yCALLtH,WAafqH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gEAA+DC,SAC3EvG,EAAOjB,IAAI,CAACwI,EAAOvI,KAClBwH,EAAAA,EAAAA,MAAA,OAAiBF,UAAU,cAAaC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OAAAE,SAAMgB,EAAM/G,UACZgG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,CAAC,IACvDgB,EAAM9K,OAAO+G,QAAQ,MAEP,IAAjB+D,EAAM1G,SACL2F,EAAAA,EAAAA,MAAA,OAAKF,UAAS,WAAAM,OACZW,EAAM1G,OAAS,EACX,iCACA,sCACH0F,SAAA,CACAgB,EAAM1G,OAAS,EAAI,IAAM,GAAI0G,EAAMzG,iBAAiB0C,QAAQ,GAAG,SAX5DxE,OAmBdqH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,aAChDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8CAA6CC,SAAA,CAAC,IACvDM,EAAUrD,QAAQ,UAGxBgD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,YAChDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8CAA6CC,SAAA,CAAC,IACvDO,EAAUtD,QAAQ,kB,cCnGlC,MAwFA,EAxFkDzI,IAAmB,IAAlB,SAAEkK,GAAUlK,EAC7D,MAAM8M,EAAsB5F,GACtBA,GAAc,GAAY,qCAC1BA,GAAc,GAAY,uCACvB,iCAGH6F,EAAsB7F,GACtBA,GAAc,GAAY,OAC1BA,GAAc,GAAY,SACvB,MAGT,OACEuE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mCAAkCC,SAAA,EAC/CF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAmB,CAACzB,UAAU,8CAC/BD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,0BAKtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,CAAC1B,UAAU,8CACxBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oDAAmDC,SAAC,mBAItEC,EAAAA,EAAAA,MAAA,QAAMF,UAAS,uBAAAM,OAAyBiB,EAAmB5C,EAAS1E,UAAU0B,aAAcsE,SAAA,CACzFuB,EAAmB7C,EAAS1E,UAAU0B,YAAY,qBAGvDuE,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5DtB,EAAS1E,UAAUuB,UAAU0B,QAAQ,UAK3CgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,CAAC1B,UAAU,gDACxBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oDAAmDC,SAAC,qBAItEC,EAAAA,EAAAA,MAAA,QAAMF,UAAS,uBAAAM,OAAyBiB,EAAmB5C,EAAS/C,YAAYD,aAAcsE,SAAA,CAC3FuB,EAAmB7C,EAAS/C,YAAYD,YAAY,qBAGzDuE,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5DtB,EAAS/C,YAAYJ,UAAU0B,QAAQ,UAK7CgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oDAAmDC,SAAA,EAChEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAC2B,EAAAA,EAAY,CAAC1B,UAAU,kDACxBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oDAAmDC,SAAC,kBAItEC,EAAAA,EAAAA,MAAA,QAAMF,UAAS,uBAAAM,OAAyBiB,EAAmB5C,EAAS9C,SAASF,aAAcsE,SAAA,CACxFuB,EAAmB7C,EAAS9C,SAASF,YAAY,qBAGtDuE,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5DtB,EAAS9C,SAASL,UAAU0B,QAAQ,aAK5C6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,kDAAiDC,UAC9DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,+I,wBC/EhE,MA6IA,EA7I0CxL,IAAe,IAAd,KAAEkN,GAAMlN,EACjD,MA0DMmN,EAAkBD,EAAK5F,aAAe4F,EAAK3F,cAC3C6F,EAAgBpG,KAAKqG,MAAMH,EAAK1F,SAAS8F,WAAY,IAAIzK,MAAOyK,WAAS,OAE/E,OACE7B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+FAA8FC,SAAA,EAC3GC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,SAAQC,SAAA,EACrBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAC3D0B,EAAKhJ,QAERoH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SACpD0B,EAAKlL,eAGVyJ,EAAAA,EAAAA,MAAA,OAAKF,UAAS,+BAAAM,OAxEI5J,KACtB,OAAQA,GACN,IAAK,YACH,MAAO,qCACT,IAAK,QACH,MAAO,mCACT,IAAK,WACH,MAAO,uCACT,IAAK,SACH,MAAO,iCACT,QACE,MAAO,qCA6DwCsL,CAAeL,EAAKjL,SAAUuJ,SAAA,CAzD5DvJ,KACrB,OAAQA,GACN,IAAK,YACH,OAAOqJ,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAACjC,UAAU,YACpC,IAAK,QAIL,QACE,OAAOD,EAAAA,EAAAA,KAACvL,EAAAA,EAAO,CAACwL,UAAU,YAH5B,IAAK,SACH,OAAOD,EAAAA,EAAAA,KAACmC,EAAAA,EAAuB,CAAClC,UAAU,cAmDvCmC,CAAcR,EAAKjL,SACpBqJ,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sBAAqBC,SA9CrBvJ,KACtB,OAAQA,GACN,IAAK,YACH,MAAO,YACT,IAAK,QACH,MAAO,oBACT,IAAK,WACH,MAAO,WACT,IAAK,SACH,MAAO,kBACT,QACE,MAAO,YAoCF0L,CAAeT,EAAKjL,iBAM3BwJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qEAAoEC,SAAA,EACjFF,EAAAA,EAAAA,KAAA,QAAAE,SAAM,cACNC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAO0B,EAAKzF,SAASgB,QAAQ,GAAG,WAElC6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACnEF,EAAAA,EAAAA,KAAA,OACEC,UAAS,gDAAAM,OA7CO5J,KACxB,OAAQA,GACN,IAAK,YACH,MAAO,eACT,IAAK,QACH,MAAO,cACT,IAAK,WACH,MAAO,gBACT,IAAK,SACH,MAAO,aACT,QACE,MAAO,gBAkCwD2L,CAAiBV,EAAKjL,SACjFyJ,MAAO,CAAEE,MAAM,GAADC,OAAK7E,KAAKgF,IAAIkB,EAAKzF,SAAU,KAAI,cAMrDgE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iCAAgCC,SAAA,EAC7CC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,aAChDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8CAA6CC,SAAA,CAAC,IACvD0B,EAAK3F,cAAckB,QAAQ,UAGjCgD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,YAChDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,8CAA6CC,SAAA,CAAC,IACvD0B,EAAK5F,aAAamB,QAAQ,YAMjB,cAAhByE,EAAKjL,SACJwJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,0DAAyDC,SAAA,EACtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,SAAC,eACnDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,4CAA2CC,SAAA,CAAC,IACxD2B,EAAgB1E,QAAQ,UAG9BgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+BAA8BC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,SAAC,cACnDF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4CAA2CC,SACxD4B,EAAgB,EAAC,GAAAvB,OAAMuB,EAAa,SAAU,kBAOtC,cAAhBF,EAAKjL,SACJqJ,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACnEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yDAAwDC,SAAC,kD,sBC3IhF,SAASqC,EAAS7N,EAIfC,GAAQ,IAJQ,MACjBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,aAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBsN,GCwGlD,EAvHsD7N,IAAsB,IAArB,MAAEE,EAAK,KAAEiE,GAAMnE,EACpE,MAAM8N,EAAa3J,EAAK2B,OAAS,EAC3BiI,EAAa5J,EAAK2B,OAAS,EAC3BkI,EAA4B,IAAhB7J,EAAK2B,OAoBvB,OACE2F,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SACrEtL,KAGHuL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,oBACxDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sDAAqDC,SAC/DrH,EAAK6D,QAAQvC,aAGlB6F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5DrH,EAAK6D,QAAQtG,OAAO+G,QAAQ,cAOtC6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,UACzDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,qBACxDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,sDAAqDC,SAC/DrH,EAAK8D,SAASxC,aAGnB6F,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5DrH,EAAK8D,SAASvG,OAAO+G,QAAQ,cAOvCgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uFAAsFC,SAAA,EACnGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,CAvDhDsC,GAAmBxC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAmB,CAACzB,UAAU,YAClDwC,GAAmBzC,EAAAA,EAAAA,KAAChK,EAAqB,CAACiK,UAAU,aACjDD,EAAAA,EAAAA,KAACuC,EAAS,CAACtC,UAAU,aAuDlBD,EAAAA,EAAAA,KAAA,QAAMC,UAAU,oDAAmDC,SAnDzEsC,EAAmB,WACnBC,EAAmB,WAChB,kBAqDCtC,EAAAA,EAAAA,MAAA,OAAKF,UAAS,cAAAM,OAnElBiC,EAAmB,iCACnBC,EAAmB,qCAChB,oCAiEkDvC,SAAA,EAC/CC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,oBAAmBC,SAAA,CAC7BsC,EAAa,IAAM,GAAG,IAAE3J,EAAK2B,OAAO2C,QAAQ,OAE/CgD,EAAAA,EAAAA,MAAA,KAAGF,UAAU,UAASC,SAAA,CACnBsC,EAAa,IAAM,GAAI3J,EAAK4B,iBAAiB0C,QAAQ,GAAG,cAM/D6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,UACnEF,EAAAA,EAAAA,KAAA,OACEC,UAAS,gDAAAM,OACPiC,EACI,aACAC,EACE,eACA,eAERrC,MAAO,CACLE,MAAM,GAADC,OAAK7E,KAAKgF,IAAIhF,KAAKiH,IAAI9J,EAAK4B,kBAAmB,KAAI,cAOhEuF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,UACzDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,2CAA0CC,SAAA,CACpDsC,IACCrC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA1C,SAAA,CAAE,4CAAgCxE,KAAKiH,IAAI9J,EAAK2B,QAAQ2C,QAAQ,GAAG,KAAGtE,EAAK4B,iBAAiB0C,QAAQ,GAAG,yEAExGsF,IACCtC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA1C,SAAA,CAAE,uDAA2CxE,KAAKiH,IAAI9J,EAAK2B,QAAQ2C,QAAQ,GAAG,KAAGzB,KAAKiH,IAAI9J,EAAK4B,kBAAkB0C,QAAQ,GAAG,8DAE7HuF,IACCvC,EAAAA,EAAAA,MAAAyC,EAAAA,SAAA,CAAA1C,SAAA,CAAE,kDAAsCrH,EAAK6D,QAAQtG,OAAO+G,QAAQ,GAAG,gFCmNrF,EAxTqC0F,KACnC,MAAM,KAAEC,IAASC,EAAAA,EAAAA,MACVC,EAAgBC,IAAqBC,EAAAA,EAAAA,UAAuC,UAC5EC,IAAiBD,EAAAA,EAAAA,WAAS,IAAI3L,MAAO0C,WAAa,IAClDmJ,IAAgBF,EAAAA,EAAAA,WAAS,IAAI3L,MAAOyC,gBACpCqJ,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAEhClI,EAAYuI,IAAiBL,EAAAA,EAAAA,UAA6B,KAC1DvJ,EAAQ6J,IAAaN,EAAAA,EAAAA,UAA0B,KAC/CO,EAAeC,IAAoBR,EAAAA,EAAAA,UAA+B,OAClEtE,EAAU+E,IAAeT,EAAAA,EAAAA,UAAkC,OAC3DU,EAAOC,IAAYX,EAAAA,EAAAA,UAAyB,KAC5CY,EAAmBC,IAAwBb,EAAAA,EAAAA,UAAgC,OAC3Ec,EAAkBC,IAAuBf,EAAAA,EAAAA,UAAgC,MAE1EgB,GAAoBC,EAAAA,EAAAA,aAAYC,UACpC,GAAKtB,EAAL,CAEAQ,GAAW,GACX,IACE,MAAMtM,EAAY,IAAIO,KAAK6L,EAAcD,EAAgB,EAAG,GACtDlM,EAAU,IAAIM,KAAK6L,EAAcD,EAAe,IAIpDkB,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,SACQ7G,QAAQ8G,IAAI,CACpB3O,EAAiBc,sBAAsB+L,EAAKpN,GAAIsB,EAAWC,GAC3DhB,EAAiBsD,kBAAkBuJ,EAAKpN,GAAI,GAC5CO,EAAiB0E,iBAAiBmI,EAAKpN,GAAI0N,EAAcD,GACzDlN,EAAiBoF,oBAAoByH,EAAKpN,IAC1CO,EAAiB8F,iBAAiB+G,EAAKpN,IACvCO,EAAiBmG,kBAAkB0G,EAAKpN,GAAI,WAC5CO,EAAiBmG,kBAAkB0G,EAAKpN,GAAI,YAG9C6N,EAAcc,GACdb,EAAUc,GACVZ,EAAiBa,GACjBZ,EAAYa,GACZX,EAASY,GACTV,EAAqBW,GACrBT,EAAoBU,EACtB,CAAE,MAAOE,GACPC,QAAQD,MAAM,gCAAiCA,EACjD,CAAC,QACCvB,GAAW,EACb,CArCiB,GAsChB,CAACR,EAAMK,EAAeC,KAEzB2B,EAAAA,EAAAA,WAAU,KACJjC,GACFoB,KAED,CAACpB,EAAMoB,IAEV,MAAMc,EAAgB/H,IACpB,IAAK6F,EAAM,OAEX,MAAMjK,EAAO5C,EAAiB+G,aAAa8F,EAAKpN,GAAIuH,GAC9CgI,EAAO,IAAIC,KAAK,CAACrM,GAAO,CAAEvC,KAAiB,QAAX2G,EAAmB,WAAa,qBAChEkI,EAAMC,IAAIC,gBAAgBJ,GAC1B5L,EAAIiM,SAASC,cAAc,KACjClM,EAAEmM,KAAOL,EACT9L,EAAEoM,SAAQ,iBAAAlF,OAAoB6C,EAAY,KAAA7C,OAAI4C,EAAa,KAAA5C,OAAItD,GAC/DqI,SAASI,KAAKC,YAAYtM,GAC1BA,EAAEuM,QACFN,SAASI,KAAKG,YAAYxM,GAC1B+L,IAAIU,gBAAgBX,IAGhBY,GAAgBC,EAAAA,EAAAA,SAAQ,IAC5BhL,EAAW5C,OAAO,CAACC,EAAKC,IAAQD,EAAMC,EAAIlC,OAAQ,GAClD,CAAC4E,IAGGiL,GAAkBD,EAAAA,EAAAA,SAAQ,IAC9BrM,EAAOT,OAAS,EAAIS,EAAOvB,OAAO,CAACC,EAAKhB,IAAMgB,EAAMhB,EAAEjB,OAAQ,GAAKuD,EAAOT,OAAS,EACnF,CAACS,IAGH,OAAI0J,GAEArD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAMnBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,+DAA8DC,SAAA,EAC3EC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,sCAGjEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SAAC,kEAKvDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2CAA0CC,SAAA,EAEvDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,SAC7D,CAAC,QAAS,UAAW,QAAkBxH,IAAKyB,IAC5C6F,EAAAA,EAAAA,KAAA,UAEEkG,QAASA,IAAMjD,EAAkB9I,GACjC8F,UAAS,8DAAAM,OACPyC,IAAmB7I,EACf,oEACA,8EACH+F,SAEF/F,EAAOgM,OAAO,GAAGC,cAAgBjM,EAAOe,MAAM,IAR1Cf,OAcXgG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,iBAAgBC,SAAA,EAC7BC,EAAAA,EAAAA,MAAA,UACE+F,QAASA,IAAMlB,EAAa,OAC5B/E,UAAU,gHAA+GC,SAAA,EAEzHF,EAAAA,EAAAA,KAACqG,EAAAA,EAAiB,CAACpG,UAAU,aAC7BD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,YAERC,EAAAA,EAAAA,MAAA,UACE+F,QAASA,IAAMlB,EAAa,OAC5B/E,UAAU,4GAA2GC,SAAA,EAErHF,EAAAA,EAAAA,KAACqG,EAAAA,EAAiB,CAACpG,UAAU,aAC7BD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,qBAOdC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,oBACxDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5D6F,EAAc5I,QAAQ,UAG5B6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,UAC3DF,EAAAA,EAAAA,KAAChK,EAAqB,CAACiK,UAAU,mDAKvCD,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,qBACxDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5D+F,EAAgB9I,QAAQ,UAG9B6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAC7DF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAY,CAAC5G,UAAU,qDAK9BD,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,gBACxDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mDAAkDC,SAC5DlF,EAAW9B,aAGhB8G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAACvL,EAAAA,EAAO,CAACwL,UAAU,uDAKzBD,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,kBACxDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,EAC/C,OAAbuD,QAAa,IAAbA,OAAa,EAAbA,EAAe1I,YAAYoC,QAAQ,KAAM,EAAE,WAGhD6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,qDAAoDC,UACjEF,EAAAA,EAAAA,KAAC0B,EAAAA,EAAmB,CAACzB,UAAU,4DAOvCE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,SAAA,EAE9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,0BAGzEF,EAAAA,EAAAA,KAAC8G,EAAa,CAAC9L,WAAYA,QAG7BmF,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,SAAA,EAE9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,qBAGzEF,EAAAA,EAAAA,KAAC+G,EAAU,CAACpN,OAAQA,WAKxBwG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,CACnDtB,IACCoB,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IAAM1G,UAE3BF,EAAAA,EAAAA,KAACgH,EAAY,CAACpI,SAAUA,OAI5BuB,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,SAAA,EAE9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,oBAGzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB0D,EAAMlL,IAAKkJ,IACV5B,EAAAA,EAAAA,KAACiH,EAAQ,CAAerF,KAAMA,GAAfA,EAAKlM,cAO5ByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,CACnD4D,IACC9D,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IAAM1G,UAE3BF,EAAAA,EAAAA,KAACkH,EAAc,CACbtS,MAAM,qBACNiE,KAAMiL,MAKXE,IACChE,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IAAM1G,UAE3BF,EAAAA,EAAAA,KAACkH,EAAc,CACbtS,MAAM,oBACNiE,KAAMmL,a,uGC7SpB,MA6kBA,EA7kBmCmD,KACjC,MAAM,KAAErE,IAASC,EAAAA,EAAAA,MACX,oBAAEqE,IAAwBC,EAAAA,EAAAA,OACzBhE,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCoE,EAAWC,IAAgBrE,EAAAA,EAAAA,UAA4D,aAEvFxF,EAAU8J,IAAetE,EAAAA,EAAAA,UAAc,OACvCvE,EAAa8I,IAAkBvE,EAAAA,EAAAA,UAAc,OAC7ChE,EAASwI,IAAcxE,EAAAA,EAAAA,UAAc,OACrCvD,EAAQgI,IAAazE,EAAAA,EAAAA,UAAc,MAEpC0E,GAAkBzD,EAAAA,EAAAA,aAAYC,UAClC,GAAKtB,EAAL,CAEAQ,GAAW,GACX,IAEE,MAAMuE,EAAwBC,GAEW,UAAb,OAAnBV,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBW,UAAqB,EAGnD,OAAQT,GACN,IAAK,WACH,MAAMU,QAAqB/R,EAAiBuH,oBAAoBsF,EAAKpN,GAAImS,GACzEL,EAAYQ,GACZ,MACF,IAAK,cACH,MAAMC,QAAwBhS,EAAiByI,uBAAuBoE,EAAKpN,GAAImS,GAC/EJ,EAAeQ,GACf,MACF,IAAK,UACH,MAAMC,QAAoBjS,EAAiBgJ,iBAAiB6D,EAAKpN,GAAImS,GACrEH,EAAWQ,GACX,MACF,IAAK,SACH,MAAMC,QAAmBlS,EAAiByJ,kBAAkBoD,EAAKpN,GAAImS,GACrEF,EAAUQ,GAGhB,CAAE,MAAOtD,GACPC,QAAQD,MAAM,mCAAoCA,EACpD,CAAC,QACCvB,GAAW,EACb,CAhCiB,GAiChB,CAACR,EAAMwE,EAAWF,KAErBrC,EAAAA,EAAAA,WAAU,KACJjC,GACF8E,KAED,CAAC9E,EAAM8E,IAEV,MAAMQ,EAAmBxI,IACvB,OAAQA,GACN,IAAK,UACH,OAAOI,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAACjC,UAAU,2BACpC,IAAK,UACH,OAAOD,EAAAA,EAAAA,KAACmC,EAAAA,EAAuB,CAAClC,UAAU,4BAC5C,IAAK,QACH,OAAOD,EAAAA,EAAAA,KAACqI,EAAAA,EAAW,CAACpI,UAAU,yBAChC,QACE,OAAOD,EAAAA,EAAAA,KAACsI,EAAAA,EAAqB,CAACrI,UAAU,4BAIxCsI,EAAoB3I,IACxB,OAAQA,GACN,IAAK,UACH,MAAO,0EACT,IAAK,UACH,MAAO,8EACT,IAAK,QACH,MAAO,kEACT,QACE,MAAO,wEAIP4I,EAAkBtK,IACtB,OAAQA,GACN,IAAK,OACH,MAAO,iCACT,IAAK,SACH,MAAO,uCACT,IAAK,MACH,MAAO,qCACT,QACE,MAAO,qCAobb,OAAImF,GAEArD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wEAMnBE,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,mDAAkDC,SAAC,uBAGjEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,6DAIlDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uEAAsEC,SAAA,CApcvEuI,MAClB,IAAKrB,EAAqB,OAAOpH,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzI,UAAU,YAErD,OAAQmH,EAAoBW,QAC1B,IAAK,MAIL,IAAK,aAEL,QACE,OAAO/H,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzI,UAAU,YAL7B,IAAK,WACH,OAAOD,EAAAA,EAAAA,KAAC2I,EAAAA,EAAS,CAAC1I,UAAU,cA8bzBwI,IACDtI,EAAAA,EAAAA,MAAA,QAAAD,SAAA,EAA0B,OAAnBkH,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBW,SAAU,OAAO,kBAKjD/H,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SACnC,CACC,CAAExK,GAAI,WAAYkD,KAAM,cAAeO,KAAMyP,EAAAA,GAC7C,CAAElT,GAAI,cAAekD,KAAM,cAAeO,KAAM0N,EAAAA,GAChD,CAAEnR,GAAI,UAAWkD,KAAM,iBAAkBO,KAAMpD,EAAAA,GAC/C,CAAEL,GAAI,SAAUkD,KAAM,mBAAoBO,KAAM0P,EAAAA,IAChDnQ,IAAKoQ,IACL,MAAMC,EAAOD,EAAI3P,KACjB,OACEgH,EAAAA,EAAAA,MAAA,UAEE+F,QAASA,IAAMqB,EAAauB,EAAIpT,IAChCuK,UAAS,wEAAAM,OACP+G,IAAcwB,EAAIpT,GACd,yDACA,qJACHwK,SAAA,EAEHF,EAAAA,EAAAA,KAAC+I,EAAI,CAAC9I,UAAU,aAChBD,EAAAA,EAAAA,KAAA,QAAAE,SAAO4I,EAAIlQ,SATNkQ,EAAIpT,WAiBnByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,CACJ,aAAdoH,IAxdA5J,EAEAA,EAASE,WAsBZuC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,iBAGzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnDxC,EAASA,SAAShF,IAAKsQ,IACtB7I,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAS,yBAAAM,OAA2BgI,EAAiBS,EAAQ9K,SAAUgC,SAAA,EAEvEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SACtD8I,EAAQpU,SAEXoL,EAAAA,EAAAA,KAAA,QAAMC,UAAS,uBAAAM,OAAyBiI,EAAeQ,EAAQ9K,SAAUgC,SACtE8I,EAAQ9K,OAAOkI,oBAGpBpG,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAA+CC,SACzD8I,EAAQ/K,eAEXkC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6EAA4EC,SAAA,EACzFC,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,gBAAmC,IAArB8I,EAAQpN,YAAkBuB,QAAQ,GAAG,QACzD6C,EAAAA,EAAAA,KAAA,QAAAE,SAAO8I,EAAQtS,cAEhBsS,EAAQ7K,iBACP6B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0EAAyEC,UACtFC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,2CAA0CC,SAAA,CAAC,gBAClD8I,EAAQ7K,sBAvBb6K,EAAQtT,WAiCrByK,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,wBAGzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBxC,EAASC,gBAAgBjF,IAAKuQ,IAC7B9I,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,uFAAsFC,SAAA,EAEhGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxD+I,EAAIrU,SAEPoL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SACjD+I,EAAIhL,kBAGT+B,EAAAA,EAAAA,KAAA,OAAKC,UAAU,aAAYC,UACzBF,EAAAA,EAAAA,KAAA,QAAMC,UAAS,uEAAAM,OACI,SAAjB0I,EAAI7K,SAAsB,0BACT,WAAjB6K,EAAI7K,SAAwB,gCAC5B,+BACC8B,SACA+I,EAAI7K,SAASgI,sBAKpBjG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yDAAwDC,SAAC,uBAGtEC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,uDAAsDC,SAAA,CAAC,IAChE+I,EAAI5K,kBAAoB4K,EAAI1K,iBAAiB,gBAGnD4B,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,EAC5DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uDAAsDC,SAAC,kBAGpEC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,qDAAoDC,SAAA,CAC9D+I,EAAI3K,YAAYpF,OAAO,mBAK9BiH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAC,mBAG/DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtB+I,EAAI3K,YAAY5F,IAAI,CAACwQ,EAAcvQ,KAClCwH,EAAAA,EAAAA,MAAA,MAAgBF,UAAU,6DAA4DC,SAAA,EACpFF,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAACjC,UAAU,8CAC1BiJ,IAFMvQ,WAlDVsQ,EAAIvT,cArEjByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAC4I,EAAAA,EAAY,CAAC3I,UAAU,0CACxBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,yBAGzEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SACjDxC,EAASG,kBAEZsC,EAAAA,EAAAA,MAACgJ,EAAAA,GAAI,CACHC,GAAG,sBACHnJ,UAAU,+GAA8GC,SAAA,EAExHF,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzI,UAAU,iBAAiB,uBAhBvB,MAydH,gBAAdqH,IA9UA3I,EAEAA,EAAYf,WAsBfuC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,0BAGpEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6DAA4DC,SAAA,EACzEF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,OAAMC,SAAC,oBACvBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,yDAAwDC,SACrEvB,EAAYK,sBAKnBgB,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,SAClEvB,EAAYA,YAAYjG,IAAK2Q,IAC5BlJ,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,uFAAsFC,SAAA,EAEhGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxDmJ,EAAWzU,SAEdoL,EAAAA,EAAAA,KAAA,QAAMC,UAAS,8CAAAM,OACY,SAAzB8I,EAAWtK,UAAuB,0BACT,WAAzBsK,EAAWtK,UAAyB,gCACpC,+BACCmB,SACAmJ,EAAWtK,UAAUqH,oBAI1BjG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5DmJ,EAAWxK,gBAAgB1B,QAAQ,OAEvCgD,EAAAA,EAAAA,MAAA,KAAGF,UAAU,2CAA0CC,SAAA,CAAC,gBAChB,IAAxBmJ,EAAWzN,YAAkBuB,QAAQ,GAAG,WAI1DgD,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAC,kBAG/DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtBmJ,EAAWvK,QAAQpG,IAAI,CAAC4Q,EAAgB3Q,KACvCwH,EAAAA,EAAAA,MAAA,MAAgBF,UAAU,6DAA4DC,SAAA,EACpFF,EAAAA,EAAAA,KAACuJ,EAAAA,EAAW,CAACtJ,UAAU,6CACtBqJ,IAFM3Q,WAjCV0Q,EAAW3T,WApCtByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAY,CAAC5G,UAAU,0CACxBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,0BAGzEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SACjDvB,EAAYd,kBAEfsC,EAAAA,EAAAA,MAACgJ,EAAAA,GAAI,CACHC,GAAG,sBACHnJ,UAAU,+GAA8GC,SAAA,EAExHF,EAAAA,EAAAA,KAAC2I,EAAAA,EAAS,CAAC1I,UAAU,iBAAiB,4BAhBrB,MA+UN,YAAdqH,IAvPApI,EAEAA,EAAQtB,WAsBXuC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,oBAIpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uDAAsDC,SAClEhB,EAAQA,QAAQxG,IAAKwE,IACpBiD,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,uFAAsFC,SAAA,EAEhGC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxDhD,EAAOtE,QAEVoH,EAAAA,EAAAA,KAAA,QAAMC,UAAU,8GAA6GC,SAC1HhD,EAAO5G,KAAK8P,oBAIjBpG,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SACjDhD,EAAOe,eAGVkC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,OAAAE,UACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,iDAAgDC,SAAA,CAAC,cACjDhD,EAAOiC,gBAIvBgB,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAC,eAG/DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtBhD,EAAOkC,SAAS1G,IAAI,CAACwQ,EAAcvQ,KAClCwH,EAAAA,EAAAA,MAAA,MAAgBF,UAAU,6DAA4DC,SAAA,EACpFF,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAACjC,UAAU,8CAC1BiJ,IAFMvQ,UAQfwH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAC,oBAG/DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uBAAsBC,SAClChL,OAAOuD,QAAQyE,EAAOmC,eAAe3G,IAAIhE,IAAA,IAAE8U,EAAKC,GAAM/U,EAAA,OACrDyL,EAAAA,EAAAA,MAAA,QAEEF,UAAS,6BAAAM,OACPkJ,EAAQ,uEACR,iEACCvJ,SAAA,CAEFsJ,EAAI,KAAGC,EAAQ,MAAQ,OANnBD,cAafxJ,EAAAA,EAAAA,KAAA,UAAQC,UAAU,kGAAiGC,SAAC,sBA3D/GhD,EAAOxH,WA5BlByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACjK,EAAAA,EAAgB,CAACkK,UAAU,0CAC5BD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,oBAGzEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SACjDhB,EAAQrB,kBAEXsC,EAAAA,EAAAA,MAACgJ,EAAAA,GAAI,CACHC,GAAG,sBACHnJ,UAAU,+GAA8GC,SAAA,EAExHF,EAAAA,EAAAA,KAAC2I,EAAAA,EAAS,CAAC1I,UAAU,iBAAiB,4BAhBzB,MAwPF,WAAdqH,IAlJA3H,EAEAA,EAAO/B,WAsBVuC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,sBAIpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvBP,EAAOA,OAAOjH,IAAKgR,IAClBvJ,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAS,yBAAAM,OAA2BgI,EAAiBmB,EAAM9J,WAAYM,SAAA,EAEvEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,CACxCkI,EAAgBsB,EAAM9J,WACvBO,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,4CAA2CC,SACtDwJ,EAAM9U,SAEToL,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAA+CC,SACzDwJ,EAAM7J,iBAIbM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,2CAA0CC,SACvD,IAAI3I,KAAKmS,EAAMjT,WAAWkT,mBAE5BD,EAAM5J,iBACLE,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sHAAqHC,SAAC,6BAQ9IC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,2CAA0CC,SAAA,CAAC,aAC9CwJ,EAAMhT,YAElBgT,EAAM3J,SAAW2J,EAAM3J,QAAQ7G,OAAS,IACvC8G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iBAAgBC,SAC5BwJ,EAAM3J,QAAQ7E,MAAM,EAAG,GAAGxC,IAAI,CAACkR,EAAgBjR,KAC9CqH,EAAAA,EAAAA,KAAA,UAEEC,UAAU,iJAAgJC,SAEzJ0J,GAHIjR,WAvCV+Q,EAAMhU,WA5BjByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAAC6I,EAAAA,EAAQ,CAAC5I,UAAU,0CACpBD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,sBAGzEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SACjDP,EAAO9B,kBAEVsC,EAAAA,EAAAA,MAACgJ,EAAAA,GAAI,CACHC,GAAG,sBACHnJ,UAAU,+GAA8GC,SAAA,EAExHF,EAAAA,EAAAA,KAAC0I,EAAAA,EAAQ,CAACzI,UAAU,iBAAiB,uBAhBzB,a,sDCzbxB,MAucA,EAvc6C4J,KAC3C,MAAM,KAAE/G,IAASC,EAAAA,EAAAA,MACV+G,EAAUC,IAAe7G,EAAAA,EAAAA,UAAkC,OAC3DG,EAASC,IAAcJ,EAAAA,EAAAA,WAAS,IAChCoE,EAAWC,IAAgBrE,EAAAA,EAAAA,UAAiE,YAE7F8G,GAAe7F,EAAAA,EAAAA,aAAYC,UAC/B,GAAKtB,EAAL,CAEAQ,GAAW,GACX,IACE,MAAM2G,QAAyBC,EAAAA,EAAkBC,gBAAgBrH,EAAKpN,GAAI,SAC1EqU,EAAYE,EACd,CAAE,MAAOpF,GACPC,QAAQD,MAAM,oCAAqCA,EACrD,CAAC,QACCvB,GAAW,EACb,CAViB,GAWhB,CAACR,KAEJiC,EAAAA,EAAAA,WAAU,KACJjC,GACFkH,KAED,CAAClH,EAAMkH,IAEV,MAMMzB,EAAoB3I,IACxB,OAAQA,GACN,IAAK,WAAY,MAAO,0BACxB,IAAK,OAAQ,MAAO,gCACpB,IAAK,SAAU,MAAO,gCACtB,QAAS,MAAO,8BAIdwK,EAAoBhM,IACxB,OAAQA,GACN,IAAK,OAAQ,MAAO,0BACpB,IAAK,SAAU,MAAO,gCACtB,QAAS,MAAO,gCAIpB,OAAIiF,GAEArD,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4CAA2CC,UACxDF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,uEAKhB6J,GAeH3J,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,oCAAmCC,UAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,qEAAoEC,SAAA,EAChFF,EAAAA,EAAAA,KAAC4I,EAAAA,EAAY,CAAC3I,UAAU,iCAAiC,yBAG3DD,EAAAA,EAAAA,KAAA,KAAGC,UAAU,wCAAuCC,SAAC,+EAOzDC,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,qDAAoDC,SAAA,EAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,yCAAwCC,SAAA,EACrDC,EAAAA,EAAAA,MAAA,MAAIF,UAAU,wEAAuEC,SAAA,EACnFF,EAAAA,EAAAA,KAACqK,EAAAA,EAAe,CAACpK,UAAU,gCAAgC,6BAG7DE,EAAAA,EAAAA,MAAA,OAAKF,UAAS,8CAAAM,QAvEE+J,EAuE6DR,EAASS,gBAAgBC,QAtExGF,GAAS,GAAW,8BACpBA,GAAS,GAAW,gCACjB,4BAoEgHpK,SAAA,CAC9G4J,EAASS,gBAAgBC,QAAQ,cAItCxK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,6CAA4CC,SACxD,CACC,CAAEuK,MAAO,WAAYH,MAAOR,EAASS,gBAAgBG,UACrD,CAAED,MAAO,UAAWH,MAAOR,EAASS,gBAAgBI,SACpD,CAAEF,MAAO,OAAQH,MAAOR,EAASS,gBAAgBK,MACjD,CAAEH,MAAO,SAAUH,MAAOR,EAASS,gBAAgB3P,SACnDlC,IAAKwQ,IACL/I,EAAAA,EAAAA,MAAA,OAAsBF,UAAU,cAAaC,SAAA,EAC3CF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wDAAuDC,SACnEgJ,EAAKoB,SAERtK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CC,SACtDgJ,EAAKuB,SAERzK,EAAAA,EAAAA,KAAA,OAAKC,UAAU,4DAA2DC,UACxEF,EAAAA,EAAAA,KAAA,OACEC,UAAU,6DACVG,MAAO,CAAEE,MAAM,GAADC,OAAK2I,EAAKoB,MAAK,YAVzBpB,EAAKuB,UAiBlBX,EAASS,gBAAgB5M,gBAAgBzE,OAAS,IACjDiH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAC,sBAC/DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtB4J,EAASS,gBAAgB5M,gBAAgBjF,IAAI,CAACuQ,EAAKtQ,KAClDwH,EAAAA,EAAAA,MAAA,MAAgBF,UAAU,6DAA4DC,SAAA,EACpFF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAc,CAAC5K,UAAU,+CACzBgJ,IAFMtQ,aAWnBqH,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wBAAuBC,SACnC,CACC,CAAExK,GAAI,WAAYkD,KAAM,WAAYO,KAAM0N,EAAAA,GAC1C,CAAEnR,GAAI,WAAYkD,KAAM,oBAAqBO,KAAM2R,EAAAA,GACnD,CAAEpV,GAAI,YAAakD,KAAM,YAAaO,KAAMgJ,EAAAA,GAC5C,CAAEzM,GAAI,eAAgBkD,KAAM,sBAAuBO,KAAMrD,EAAAA,IACzD4C,IAAKoQ,IACL,MAAMC,EAAOD,EAAI3P,KACjB,OACEgH,EAAAA,EAAAA,MAAA,UAEE+F,QAASA,IAAMqB,EAAauB,EAAIpT,IAChCuK,UAAS,wEAAAM,OACP+G,IAAcwB,EAAIpT,GACd,yDACA,qJACHwK,SAAA,EAEHF,EAAAA,EAAAA,KAAC+I,EAAI,CAAC9I,UAAU,aAChBD,EAAAA,EAAAA,KAAA,QAAAE,SAAO4I,EAAIlQ,SATNkQ,EAAIpT,WAiBnByK,EAAAA,EAAAA,MAAA,OAAKF,UAAU,OAAMC,SAAA,CACJ,aAAdoH,IACCnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EAExBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDF,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,iBACxDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5D4J,EAASiB,WAAW5N,QAAQ,UAGlC6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,+CAA8CC,UAC3DF,EAAAA,EAAAA,KAAChK,EAAqB,CAACiK,UAAU,mDAKvCD,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,mBACxDC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,mDAAkDC,SAAA,CAAC,IAC5D4J,EAASkB,kBAAkB7N,QAAQ,UAGzC6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,iDAAgDC,UAC7DF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAY,CAAC5G,UAAU,qDAK9BD,EAAAA,EAAAA,KAACsG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,UAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oCAAmCC,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2CAA0CC,SAAC,gBACxDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mDAAkDC,SAC5D4J,EAASmB,cAAc/R,aAG5B8G,EAAAA,EAAAA,KAAA,OAAKC,UAAU,mDAAkDC,UAC/DF,EAAAA,EAAAA,KAACkC,EAAAA,EAAe,CAACjC,UAAU,0DAOnCE,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEC,MAAO,IACrB3G,UAAU,qDAAoDC,SAAA,EAE9DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,6BAGzEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB4J,EAASmB,cAAcvS,IAAI,CAAChC,EAAUiC,KACrCwH,EAAAA,EAAAA,MAAA,OAAuBF,UAAU,oCAAmCC,SAAA,EAClEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8BAA6BC,SAAA,EAC1CF,EAAAA,EAAAA,KAAA,OACEC,UAAU,uBACVG,MAAO,CAAEC,gBAAiB3J,EAASuC,UAErC+G,EAAAA,EAAAA,KAAA,QAAMC,UAAU,4CAA2CC,SACxDxJ,EAASkC,WAGduH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,8CAA6CC,SAAA,CAAC,IACzDxJ,EAASN,OAAO+G,QAAQ,OAE5BgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,2CAA0CC,SAAA,CACtDxJ,EAASsC,WAAWmE,QAAQ,GAAG,YAf5BzG,EAAShB,aAyBd,aAAd4R,IACCnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,gCAGpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,wCAAuCC,SACnD4J,EAASoB,iBAAiBxS,IAAKyS,IAC9BhL,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,qDAAoDC,SAAA,EAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxDiL,EAAQvS,QAEXoH,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAA+CC,SACzDiL,EAAQlN,kBAGbkC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,CAAC,IAC7DiL,EAAQ/U,OAAO+G,QAAQ,OAE3B6C,EAAAA,EAAAA,KAAA,OAAKC,UAAU,2CAA0CC,SACtDiL,EAAQhM,mBAKfgB,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,EACxDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,mCAAkCC,SAAA,CAAC,gBACd,IAArBiL,EAAQvP,YAAkBuB,QAAQ,GAAG,QAErD6C,EAAAA,EAAAA,KAAA,QAAMC,UAAU,mCAAkCC,SAC/CiL,EAAQzU,eAIXyU,EAAQC,WAAaD,EAAQE,aAC7BrL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0DAAyDC,UACtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uEAAsEC,SAAA,CAClFiL,EAAQC,YACPjL,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,qBAAmBiL,EAAQC,aAElCD,EAAQE,YACPlL,EAAAA,EAAAA,MAAA,QAAAD,SAAA,CAAM,oBAAkBiL,EAAQE,oBAxCnCF,EAAQzV,UAmDR,cAAd4R,IACCnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,uBAGpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB4J,EAASwB,iBAAiB5S,IAAK6S,IAC9BpL,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,qDAAoDC,SAAA,EAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6BAA4BC,SAAA,EACzCF,EAAAA,EAAAA,KAACmC,EAAAA,EAAuB,CAAClC,UAAU,kCACnCE,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxDqL,EAAQtN,eAEX+B,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAA+CC,SACzDqL,EAAQpN,wBAIfgC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBF,EAAAA,EAAAA,KAAA,QAAMC,UAAS,8CAAAM,OAAgDgI,EAAiBgD,EAAQ3L,WAAYM,SACjGqL,EAAQ3L,SAASwG,iBAEpBjG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,gDAA+CC,SAAA,CAAC,gBAC1B,IAArBqL,EAAQ3P,YAAkBuB,QAAQ,GAAG,aAKxDoO,EAAQC,eAAiBD,EAAQE,cAChCzL,EAAAA,EAAAA,KAAA,OAAKC,UAAU,0DAAyDC,UACtEC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,4CAA2CC,SAAA,EACxDC,EAAAA,EAAAA,MAAA,QAAMF,UAAU,mCAAkCC,SAAA,CAAC,cACrCqL,EAAQC,cAAcrO,QAAQ,OAE5CgD,EAAAA,EAAAA,MAAA,QAAMF,UAAU,mCAAkCC,SAAA,CAAC,YACvCqL,EAAQE,YAAYtO,QAAQ,aAlCzCoO,EAAQ7V,UA6CR,iBAAd4R,IACCnH,EAAAA,EAAAA,MAAA,OAAKF,UAAU,YAAWC,SAAA,EACxBF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,sDAAqDC,SAAC,yCAGpEF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,YAAWC,SACvB4J,EAAS4B,mBAAmBhT,IAAKiT,IAChCxL,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BnB,UAAU,qDAAoDC,SAAA,EAE9DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wCAAuCC,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,8CAA6CC,SACxDyL,EAAajV,YAEhBsJ,EAAAA,EAAAA,KAAA,KAAGC,UAAU,gDAA+CC,SACzDyL,EAAaC,gBAGlBzL,EAAAA,EAAAA,MAAA,OAAKF,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,uDAAsDC,SAAA,CAAC,SAC7DyL,EAAaE,iBAAiB1O,QAAQ,OAE/CgD,EAAAA,EAAAA,MAAA,QAAMF,UAAS,8CAAAM,OAAgD6J,EAAiBuB,EAAavN,WAAY8B,SAAA,CACtGyL,EAAavN,SAASgI,cAAc,sBAK3CjG,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EACzDC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,6CAA4CC,SAAA,EACzDF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,uDAAsDC,SAAC,sBAGpEC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,kDAAiDC,SAAA,CAAC,IAC3DyL,EAAaG,gBAAgB3O,QAAQ,UAG3CgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,kDAAiDC,SAAA,EAC9DF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,yDAAwDC,SAAC,wBAGtEC,EAAAA,EAAAA,MAAA,KAAGF,UAAU,uDAAsDC,SAAA,CAAC,IAChEyL,EAAaI,kBAAkB5O,QAAQ,aAK/CgD,EAAAA,EAAAA,MAAA,OAAKF,UAAU,qDAAoDC,SAAA,EACjEF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,iDAAgDC,SAAC,mBAG/DF,EAAAA,EAAAA,KAAA,MAAIC,UAAU,YAAWC,SACtByL,EAAarN,YAAY5F,IAAI,CAACwQ,EAAMvQ,KACnCwH,EAAAA,EAAAA,MAAA,MAAgBF,UAAU,6DAA4DC,SAAA,EACpFF,EAAAA,EAAAA,KAAC6K,EAAAA,EAAc,CAAC5K,UAAU,+CACzBiJ,IAFMvQ,WAjDVgT,EAAajV,uBA1U9ByJ,EAAAA,EAAAA,MAAA,OAAKF,UAAU,oBAAmBC,SAAA,EAChCF,EAAAA,EAAAA,KAACmC,EAAAA,EAAuB,CAAClC,UAAU,0CACnCD,EAAAA,EAAAA,KAAA,MAAIC,UAAU,2DAA0DC,SAAC,uBAGzEF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,mCAAkCC,SAAC,8DAtC9BoK,O,cClC1B,MAwEA,EAxE4B0B,KAC1B,MAAM,iBAAEvO,IAAqB4J,EAAAA,EAAAA,OACtBC,EAAWC,IAAgBrE,EAAAA,EAAAA,UAA2C,SAEvE+I,EAAsBxO,EAAiB,uBAClBA,EAAiB,uBACjBA,EAAiB,mBAE5C,OACE0C,EAAAA,EAAAA,MAACmG,EAAAA,EAAOC,IAAG,CACTC,QAAS,CAAEC,QAAS,EAAGrF,EAAG,IAC1BsF,QAAS,CAAED,QAAS,EAAGrF,EAAG,GAC1BuF,WAAY,CAAEuF,SAAU,IACxBjM,UAAU,oBAAmBC,SAAA,EAG7BF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,OAAMC,UACnBF,EAAAA,EAAAA,KAAA,OAAKC,UAAU,gDAA+CC,UAC5DC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,wBAAuBC,SAAA,EACpCC,EAAAA,EAAAA,MAAA,UACE+F,QAASA,IAAMqB,EAAa,SAC5BtH,UAAS,wEAAAM,OACO,UAAd+G,EACI,yDACA,qJACHpH,SAAA,EAEHF,EAAAA,EAAAA,KAAC6G,EAAAA,EAAY,CAAC5G,UAAU,aACxBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,wBAERC,EAAAA,EAAAA,MAAA,UACE+F,QAASA,IAAMqB,EAAa,WAC5BtH,UAAS,wEAAAM,OACO,YAAd+G,EACI,yDACA,qJACHpH,SAAA,EAEHF,EAAAA,EAAAA,KAAC4I,EAAAA,EAAY,CAAC3I,UAAU,aACxBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,uBACJ+L,IACAjM,EAAAA,EAAAA,KAAA,QAAMC,UAAU,sHAAqHC,SAAC,yBAK1IC,EAAAA,EAAAA,MAAA,UACE+F,QAASA,IAAMqB,EAAa,YAC5BtH,UAAS,wEAAAM,OACO,aAAd+G,EACI,yDACA,qJACHpH,SAAA,EAEHF,EAAAA,EAAAA,KAACmM,EAAAA,EAAW,CAAClM,UAAU,aACvBD,EAAAA,EAAAA,KAAA,QAAAE,SAAM,iBACNF,EAAAA,EAAAA,KAAA,QAAMC,UAAU,kHAAiHC,SAAC,kBAS3H,UAAdoH,IAAyBtH,EAAAA,EAAAA,KAAC6C,EAAkB,IAC9B,YAAdyE,IAA2BtH,EAAAA,EAAAA,KAACmH,EAAgB,IAC9B,aAAdG,IAA4BtH,EAAAA,EAAAA,KAAC6J,EAA0B,O,oFC1E9D,SAASnI,EAAmBhN,EAIzBC,GAAQ,IAJkB,MAC3BC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,6GAEP,CACA,MACA,EADiCZ,EAAAA,WAAiByM,E,oFCvBlD,SAASQ,EAAexN,EAIrBC,GAAQ,IAJc,MACvBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,mEAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBiN,E,oFCvBlD,SAAS2I,EAAcnW,EAIpBC,GAAQ,IAJa,MACtBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,wCAEP,CACA,MACA,EADiCZ,EAAAA,WAAiB4V,E,oFCvBlD,SAASC,EAASpW,EAIfC,GAAQ,IAJQ,MACjBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,qDAEP,CACA,MACA,EADiCZ,EAAAA,WAAiB6V,E,oFCvBlD,SAASzC,EAAW3T,EAIjBC,GAAQ,IAJU,MACnBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,0EAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBoT,E,oFCvBlD,SAAS1G,EAAYjN,EAIlBC,GAAQ,IAJW,MACpBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,sOAEP,CACA,MACA,EADiCZ,EAAAA,WAAiB0M,E,oFCvBlD,SAAS4H,EAAW7U,EAIjBC,GAAQ,IAJU,MACnBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DS,GAAIb,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDU,cAAe,QACfC,eAAgB,QAChBC,EAAG,uCAEP,CACA,MACA,EADiCZ,EAAAA,WAAiBsU,E","sources":["../node_modules/@heroicons/react/24/outline/esm/TagIcon.js","../node_modules/@heroicons/react/24/outline/esm/LightBulbIcon.js","../node_modules/@heroicons/react/24/outline/esm/DocumentTextIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingDownIcon.js","services/analyticsService.ts","components/charts/CategoryChart.tsx","components/charts/TrendChart.tsx","components/cards/ForecastCard.tsx","components/cards/GoalCard.tsx","../node_modules/@heroicons/react/24/outline/esm/MinusIcon.js","components/cards/ComparisonCard.tsx","components/AnalyticsDashboard.tsx","components/PremiumAnalytics.tsx","components/AdvancedAnalyticsDashboard.tsx","pages/Analytics.tsx","../node_modules/@heroicons/react/24/outline/esm/ArrowTrendingUpIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowRightIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CalendarIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowUpIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction TagIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.568 3H5.25A2.25 2.25 0 0 0 3 5.25v4.318c0 .597.237 1.17.659 1.591l9.581 9.581c.699.699 1.78.872 2.607.33a18.095 18.095 0 0 0 5.223-5.223c.542-.827.369-1.908-.33-2.607L11.16 3.66A2.25 2.25 0 0 0 9.568 3Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6 6h.008v.008H6V6Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(TagIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction LightBulbIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 18v-5.25m0 0a6.01 6.01 0 0 0 1.5-.189m-1.5.189a6.01 6.01 0 0 1-1.5-.189m3.75 7.478a12.06 12.06 0 0 1-4.5 0m3.75 2.383a14.406 14.406 0 0 1-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 1 0-7.517 0c.85.493 1.509 1.333 1.509 2.316V18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(LightBulbIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction DocumentTextIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(DocumentTextIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowTrendingDownIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 6 9 12.75l4.286-4.286a11.948 11.948 0 0 1 4.306 6.43l.776 2.898m0 0 3.182-5.511m-3.182 5.51-5.511-3.181\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingDownIcon);\nexport default ForwardRef;","import { Transaction } from '../types/User';\r\nimport { \r\n  SpendingCategory, \r\n  SpendingTrend, \r\n  MonthlyReport, \r\n  SpendingForecast, \r\n  SpendingGoal, \r\n  ComparisonData \r\n} from '../types/Analytics';\r\n\r\nclass AnalyticsService {\r\n  private getTransactionsByUser(userId: string): Transaction[] {\r\n    // Mock transaction data for analytics\r\n    const mockTransactions: Transaction[] = [\r\n      {\r\n        id: '1',\r\n        userId,\r\n        amount: 150.00,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Coffee Shop',\r\n        note: 'Morning coffee',\r\n        timestamp: '2024-01-15T08:30:00Z',\r\n        category: 'Food & Dining',\r\n        status: 'completed',\r\n        createdAt: '2024-01-15T08:30:00Z',\r\n        updatedAt: '2024-01-15T08:30:00Z'\r\n      },\r\n      {\r\n        id: '2',\r\n        userId,\r\n        amount: 75.50,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Gas Station',\r\n        note: 'Fuel',\r\n        timestamp: '2024-01-14T16:45:00Z',\r\n        category: 'Transportation',\r\n        status: 'completed',\r\n        createdAt: '2024-01-14T16:45:00Z',\r\n        updatedAt: '2024-01-14T16:45:00Z'\r\n      },\r\n      {\r\n        id: '3',\r\n        userId,\r\n        amount: 299.99,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Online Store',\r\n        note: 'Electronics',\r\n        timestamp: '2024-01-13T20:15:00Z',\r\n        category: 'Shopping',\r\n        status: 'completed',\r\n        createdAt: '2024-01-13T20:15:00Z',\r\n        updatedAt: '2024-01-13T20:15:00Z'\r\n      },\r\n      {\r\n        id: '4',\r\n        userId,\r\n        amount: 1200.00,\r\n        currency: 'USD',\r\n        type: 'receive',\r\n        sender: 'Employer',\r\n        note: 'Salary',\r\n        timestamp: '2024-01-01T09:00:00Z',\r\n        category: 'Income',\r\n        status: 'completed',\r\n        createdAt: '2024-01-01T09:00:00Z',\r\n        updatedAt: '2024-01-01T09:00:00Z'\r\n      },\r\n      {\r\n        id: '5',\r\n        userId,\r\n        amount: 89.99,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Streaming Service',\r\n        note: 'Monthly subscription',\r\n        timestamp: '2024-01-10T12:00:00Z',\r\n        category: 'Entertainment',\r\n        status: 'completed',\r\n        createdAt: '2024-01-10T12:00:00Z',\r\n        updatedAt: '2024-01-10T12:00:00Z'\r\n      },\r\n      {\r\n        id: '6',\r\n        userId,\r\n        amount: 45.00,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Grocery Store',\r\n        note: 'Weekly groceries',\r\n        timestamp: '2024-01-12T14:30:00Z',\r\n        category: 'Food & Dining',\r\n        status: 'completed',\r\n        createdAt: '2024-01-12T14:30:00Z',\r\n        updatedAt: '2024-01-12T14:30:00Z'\r\n      },\r\n      {\r\n        id: '7',\r\n        userId,\r\n        amount: 200.00,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Utility Company',\r\n        note: 'Electric bill',\r\n        timestamp: '2024-01-05T10:00:00Z',\r\n        category: 'Utilities',\r\n        status: 'completed',\r\n        createdAt: '2024-01-05T10:00:00Z',\r\n        updatedAt: '2024-01-05T10:00:00Z'\r\n      },\r\n      {\r\n        id: '8',\r\n        userId,\r\n        amount: 350.00,\r\n        currency: 'USD',\r\n        type: 'send',\r\n        recipient: 'Gym Membership',\r\n        note: 'Monthly membership',\r\n        timestamp: '2024-01-08T18:00:00Z',\r\n        category: 'Health & Fitness',\r\n        status: 'completed',\r\n        createdAt: '2024-01-08T18:00:00Z',\r\n        updatedAt: '2024-01-08T18:00:00Z'\r\n      }\r\n    ];\r\n\r\n    return mockTransactions;\r\n  }\r\n\r\n  getSpendingCategories(userId: string, startDate: Date, endDate: Date): SpendingCategory[] {\r\n    const transactions = this.getTransactionsByUser(userId)\r\n      .filter(t => {\r\n        if (t.type !== 'send') return false;\r\n        const transactionDate = new Date(t.timestamp || t.createdAt);\r\n        return transactionDate >= startDate && transactionDate <= endDate;\r\n      });\r\n\r\n    const categoryMap = new Map<string, { amount: number; count: number }>();\r\n    \r\n    transactions.forEach(transaction => {\r\n      const category = transaction.category || 'Other';\r\n      const existing = categoryMap.get(category) || { amount: 0, count: 0 };\r\n      categoryMap.set(category, {\r\n        amount: existing.amount + transaction.amount,\r\n        count: existing.count + 1\r\n      });\r\n    });\r\n\r\n    const totalAmount = Array.from(categoryMap.values())\r\n      .reduce((sum, cat) => sum + cat.amount, 0);\r\n\r\n    const colors = [\r\n      '#F59E0B', '#EF4444', '#10B981', '#3B82F6', \r\n      '#8B5CF6', '#F97316', '#06B6D4', '#84CC16'\r\n    ];\r\n\r\n    const icons = [\r\n      '🍔', '🚗', '🛍️', '💰', '🎬', '🏠', '💪', '📱'\r\n    ];\r\n\r\n    return Array.from(categoryMap.entries())\r\n      .map(([name, data], index) => ({\r\n        id: name.toLowerCase().replace(/\\s+/g, '-'),\r\n        name,\r\n        amount: data.amount,\r\n        percentage: totalAmount > 0 ? (data.amount / totalAmount) * 100 : 0,\r\n        color: colors[index % colors.length],\r\n        icon: icons[index % icons.length]\r\n      }))\r\n      .sort((a, b) => b.amount - a.amount);\r\n  }\r\n\r\n  getSpendingTrends(userId: string, months: number = 6): SpendingTrend[] {\r\n    const trends: SpendingTrend[] = [];\r\n    const now = new Date();\r\n    \r\n    for (let i = months - 1; i >= 0; i--) {\r\n      const date = new Date(now.getFullYear(), now.getMonth() - i, 1);\r\n      const nextMonth = new Date(now.getFullYear(), now.getMonth() - i + 1, 1);\r\n      \r\n      const transactions = this.getTransactionsByUser(userId)\r\n        .filter(t => {\r\n          if (t.type !== 'send') return false;\r\n          const transactionDate = new Date(t.timestamp || t.createdAt);\r\n          return transactionDate >= date && transactionDate < nextMonth;\r\n        });\r\n\r\n      const amount = transactions.reduce((sum, t) => sum + t.amount, 0);\r\n      const period = date.toLocaleDateString('en-US', { month: 'short', year: 'numeric' });\r\n      \r\n      const previousAmount = i > 0 ? trends[trends.length - 1]?.amount || 0 : 0;\r\n      const change = amount - previousAmount;\r\n      const changePercentage = previousAmount > 0 ? (change / previousAmount) * 100 : 0;\r\n\r\n      trends.push({\r\n        period,\r\n        amount,\r\n        change,\r\n        changePercentage\r\n      });\r\n    }\r\n\r\n    return trends;\r\n  }\r\n\r\n  getMonthlyReport(userId: string, year: number, month: number): MonthlyReport {\r\n    const startDate = new Date(year, month - 1, 1);\r\n    const endDate = new Date(year, month, 0);\r\n    \r\n    const transactions = this.getTransactionsByUser(userId)\r\n      .filter(t => {\r\n        const transactionDate = new Date(t.timestamp || t.createdAt);\r\n        return transactionDate >= startDate && transactionDate <= endDate;\r\n      });\r\n\r\n    const income = transactions\r\n      .filter(t => t.type === 'receive')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n    const expenses = transactions\r\n      .filter(t => t.type === 'send')\r\n      .reduce((sum, t) => sum + t.amount, 0);\r\n\r\n    const netIncome = income - expenses;\r\n    const savingsRate = income > 0 ? (netIncome / income) * 100 : 0;\r\n\r\n    const categories = this.getSpendingCategories(userId, startDate, endDate);\r\n    \r\n    const topTransactions = transactions\r\n      .filter(t => t.type === 'send')\r\n      .sort((a, b) => b.amount - a.amount)\r\n      .slice(0, 5);\r\n\r\n    return {\r\n      month: startDate.toLocaleDateString('en-US', { month: 'long' }),\r\n      year,\r\n      totalIncome: income,\r\n      totalExpenses: expenses,\r\n      netIncome,\r\n      categories,\r\n      topTransactions,\r\n      savingsRate\r\n    };\r\n  }\r\n\r\n  getSpendingForecast(userId: string): SpendingForecast {\r\n    const trends = this.getSpendingTrends(userId, 6);\r\n    const recentTrend = trends.slice(-3);\r\n    const avgSpending = recentTrend.reduce((sum, t) => sum + t.amount, 0) / recentTrend.length;\r\n    \r\n    // Simple trend analysis\r\n    const trendSlope = trends.length > 1 ? \r\n      (trends[trends.length - 1].amount - trends[0].amount) / trends.length : 0;\r\n    \r\n    const nextMonthPrediction = Math.max(0, avgSpending + trendSlope);\r\n    const nextQuarterPrediction = Math.max(0, avgSpending * 3 + trendSlope * 3);\r\n    const nextYearPrediction = Math.max(0, avgSpending * 12 + trendSlope * 12);\r\n\r\n    return {\r\n      nextMonth: {\r\n        predicted: nextMonthPrediction,\r\n        confidence: 0.75\r\n      },\r\n      nextQuarter: {\r\n        predicted: nextQuarterPrediction,\r\n        confidence: 0.65\r\n      },\r\n      nextYear: {\r\n        predicted: nextYearPrediction,\r\n        confidence: 0.45\r\n      }\r\n    };\r\n  }\r\n\r\n  getSpendingGoals(userId: string): SpendingGoal[] {\r\n    // Mock spending goals\r\n    return [\r\n      {\r\n        id: '1',\r\n        name: 'Monthly Food Budget',\r\n        targetAmount: 500,\r\n        currentAmount: 195.50,\r\n        deadline: new Date('2024-01-31'),\r\n        category: 'Food & Dining',\r\n        progress: 39.1,\r\n        status: 'on-track'\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Emergency Fund',\r\n        targetAmount: 5000,\r\n        currentAmount: 3200,\r\n        deadline: new Date('2024-12-31'),\r\n        category: 'Savings',\r\n        progress: 64,\r\n        status: 'ahead'\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Entertainment Limit',\r\n        targetAmount: 200,\r\n        currentAmount: 89.99,\r\n        deadline: new Date('2024-01-31'),\r\n        category: 'Entertainment',\r\n        progress: 45,\r\n        status: 'on-track'\r\n      }\r\n    ];\r\n  }\r\n\r\n  getComparisonData(userId: string, type: 'monthly' | 'yearly'): ComparisonData {\r\n    const now = new Date();\r\n    \r\n    if (type === 'monthly') {\r\n      const currentMonth = new Date(now.getFullYear(), now.getMonth(), 1);\r\n      const nextMonth = new Date(now.getFullYear(), now.getMonth() + 1, 1);\r\n      const previousMonth = new Date(now.getFullYear(), now.getMonth() - 1, 1);\r\n      const previousNextMonth = new Date(now.getFullYear(), now.getMonth(), 1);\r\n\r\n      const currentTransactions = this.getTransactionsByUser(userId)\r\n        .filter(t => {\r\n          if (t.type !== 'send') return false;\r\n          const transactionDate = new Date(t.timestamp || t.createdAt);\r\n          return transactionDate >= currentMonth && transactionDate < nextMonth;\r\n        });\r\n      \r\n      const previousTransactions = this.getTransactionsByUser(userId)\r\n        .filter(t => {\r\n          if (t.type !== 'send') return false;\r\n          const transactionDate = new Date(t.timestamp || t.createdAt);\r\n          return transactionDate >= previousMonth && transactionDate < previousNextMonth;\r\n        });\r\n\r\n      const currentAmount = currentTransactions.reduce((sum, t) => sum + t.amount, 0);\r\n      const previousAmount = previousTransactions.reduce((sum, t) => sum + t.amount, 0);\r\n      const change = currentAmount - previousAmount;\r\n      const changePercentage = previousAmount > 0 ? (change / previousAmount) * 100 : 0;\r\n\r\n      return {\r\n        current: {\r\n          period: currentMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' }),\r\n          amount: currentAmount\r\n        },\r\n        previous: {\r\n          period: previousMonth.toLocaleDateString('en-US', { month: 'long', year: 'numeric' }),\r\n          amount: previousAmount\r\n        },\r\n        change,\r\n        changePercentage\r\n      };\r\n    } else {\r\n      const currentYear = new Date(now.getFullYear(), 0, 1);\r\n      const nextYear = new Date(now.getFullYear() + 1, 0, 1);\r\n      const previousYear = new Date(now.getFullYear() - 1, 0, 1);\r\n      const previousNextYear = new Date(now.getFullYear(), 0, 1);\r\n\r\n      const currentTransactions = this.getTransactionsByUser(userId)\r\n        .filter(t => {\r\n          if (t.type !== 'send') return false;\r\n          const transactionDate = new Date(t.timestamp || t.createdAt);\r\n          return transactionDate >= currentYear && transactionDate < nextYear;\r\n        });\r\n      \r\n      const previousTransactions = this.getTransactionsByUser(userId)\r\n        .filter(t => {\r\n          if (t.type !== 'send') return false;\r\n          const transactionDate = new Date(t.timestamp || t.createdAt);\r\n          return transactionDate >= previousYear && transactionDate < previousNextYear;\r\n        });\r\n\r\n      const currentAmount = currentTransactions.reduce((sum, t) => sum + t.amount, 0);\r\n      const previousAmount = previousTransactions.reduce((sum, t) => sum + t.amount, 0);\r\n      const change = currentAmount - previousAmount;\r\n      const changePercentage = previousAmount > 0 ? (change / previousAmount) * 100 : 0;\r\n\r\n      return {\r\n        current: {\r\n          period: currentYear.getFullYear().toString(),\r\n          amount: currentAmount\r\n        },\r\n        previous: {\r\n          period: previousYear.getFullYear().toString(),\r\n          amount: previousAmount\r\n        },\r\n        change,\r\n        changePercentage\r\n      };\r\n    }\r\n  }\r\n\r\n  exportReport(userId: string, format: 'csv' | 'pdf' = 'csv'): string {\r\n    const report = this.getMonthlyReport(userId, new Date().getFullYear(), new Date().getMonth() + 1);\r\n    \r\n    if (format === 'csv') {\r\n      const headers = ['Category', 'Amount', 'Percentage'];\r\n      const rows = report.categories.map(cat => [\r\n        cat.name,\r\n        cat.amount.toFixed(2),\r\n        cat.percentage.toFixed(1) + '%'\r\n      ]);\r\n      \r\n      return [headers, ...rows]\r\n        .map(row => row.join(','))\r\n        .join('\\n');\r\n    }\r\n    \r\n    // PDF export would require a library like jsPDF\r\n    return JSON.stringify(report, null, 2);\r\n  }\r\n\r\n  // Premium Analytics Features (gated behind subscription tiers)\r\n  \r\n  async getAdvancedInsights(userId: string, hasFeatureAccess: (feature: string) => boolean): Promise<any> {\r\n    if (!hasFeatureAccess('AI Recommendations')) {\r\n      return {\r\n        insights: [],\r\n        recommendations: [],\r\n        isPremium: false,\r\n        upgradeMessage: 'Upgrade to Pro or higher to unlock AI-powered financial insights and recommendations.'\r\n      };\r\n    }\r\n\r\n    // Simulate AI-powered insights\r\n    await new Promise(resolve => setTimeout(resolve, 1000));\r\n    \r\n    const transactions = this.getTransactionsByUser(userId);\r\n    const recentTransactions = transactions.slice(0, 10);\r\n    \r\n    const insights = [\r\n      {\r\n        id: '1',\r\n        type: 'spending_pattern',\r\n        title: 'Spending Pattern Detected',\r\n        description: 'You spend 40% more on weekends compared to weekdays',\r\n        impact: 'high',\r\n        category: 'Food & Dining',\r\n        confidence: 0.85,\r\n        recommendation: 'Consider meal prepping on weekends to reduce impulse spending'\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'savings_opportunity',\r\n        title: 'Savings Opportunity Found',\r\n        description: 'You could save $150/month by switching to a different streaming service',\r\n        impact: 'medium',\r\n        category: 'Entertainment',\r\n        confidence: 0.92,\r\n        recommendation: 'Compare streaming services and consider bundling options'\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'budget_alert',\r\n        title: 'Budget Alert',\r\n        description: 'You\\'re approaching 80% of your monthly food budget',\r\n        impact: 'high',\r\n        category: 'Food & Dining',\r\n        confidence: 0.95,\r\n        recommendation: 'Consider cooking at home more often this week'\r\n      }\r\n    ];\r\n\r\n    const recommendations = [\r\n      {\r\n        id: '1',\r\n        type: 'budget_optimization',\r\n        title: 'Optimize Your Budget',\r\n        description: 'Based on your spending patterns, we recommend allocating 20% more to savings',\r\n        priority: 'high',\r\n        estimatedSavings: 200,\r\n        actionItems: [\r\n          'Set up automatic transfers to savings',\r\n          'Review and cancel unused subscriptions',\r\n          'Negotiate better rates on recurring bills'\r\n        ]\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'investment_opportunity',\r\n        title: 'Investment Opportunity',\r\n        description: 'With your current savings rate, you could start investing $100/month',\r\n        priority: 'medium',\r\n        estimatedReturns: 1200,\r\n        actionItems: [\r\n          'Open a high-yield savings account',\r\n          'Consider a robo-advisor for automated investing',\r\n          'Set up a 401(k) if not already enrolled'\r\n        ]\r\n      }\r\n    ];\r\n\r\n    return {\r\n      insights,\r\n      recommendations,\r\n      isPremium: true,\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  async getPredictiveAnalytics(userId: string, hasFeatureAccess: (feature: string) => boolean): Promise<any> {\r\n    if (!hasFeatureAccess('Advanced Analytics')) {\r\n      return {\r\n        predictions: [],\r\n        isPremium: false,\r\n        upgradeMessage: 'Upgrade to Business or higher to unlock predictive analytics and forecasting.'\r\n      };\r\n    }\r\n\r\n    // Simulate advanced predictive analytics\r\n    await new Promise(resolve => setTimeout(resolve, 1500));\r\n    \r\n    const trends = this.getSpendingTrends(userId, 12);\r\n    const forecast = this.getSpendingForecast(userId);\r\n    \r\n    const predictions = [\r\n      {\r\n        id: '1',\r\n        type: 'spending_forecast',\r\n        title: 'Next Month Spending Forecast',\r\n        predictedAmount: forecast.nextMonth.predicted,\r\n        confidence: forecast.nextMonth.confidence,\r\n        factors: [\r\n          'Historical spending patterns',\r\n          'Seasonal trends',\r\n          'Recent transaction frequency'\r\n        ],\r\n        riskLevel: forecast.nextMonth.predicted > 2000 ? 'high' : 'medium'\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'category_trend',\r\n        title: 'Food & Dining Trend',\r\n        predictedAmount: 450,\r\n        confidence: 0.78,\r\n        factors: [\r\n          'Increasing weekend spending',\r\n          'Rising restaurant costs',\r\n          'Recent dining frequency'\r\n        ],\r\n        riskLevel: 'low'\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'savings_forecast',\r\n        title: 'Savings Potential',\r\n        predictedAmount: 800,\r\n        confidence: 0.85,\r\n        factors: [\r\n          'Current income stability',\r\n          'Reduced entertainment spending',\r\n          'Optimized budget allocation'\r\n        ],\r\n        riskLevel: 'low'\r\n      }\r\n    ];\r\n\r\n    return {\r\n      predictions,\r\n      isPremium: true,\r\n      lastUpdated: new Date().toISOString(),\r\n      modelVersion: 'v2.1'\r\n    };\r\n  }\r\n\r\n  async getCustomReports(userId: string, hasFeatureAccess: (feature: string) => boolean): Promise<any> {\r\n    if (!hasFeatureAccess('Custom Branding')) {\r\n      return {\r\n        reports: [],\r\n        isPremium: false,\r\n        upgradeMessage: 'Upgrade to Business or higher to unlock custom reporting and white-label features.'\r\n      };\r\n    }\r\n\r\n    // Simulate custom reporting features\r\n    await new Promise(resolve => setTimeout(resolve, 800));\r\n    \r\n    const customReports = [\r\n      {\r\n        id: '1',\r\n        name: 'Executive Summary',\r\n        description: 'High-level financial overview for stakeholders',\r\n        type: 'executive',\r\n        frequency: 'monthly',\r\n        includes: [\r\n          'Key financial metrics',\r\n          'Spending trends',\r\n          'ROI analysis',\r\n          'Risk assessment'\r\n        ],\r\n        customization: {\r\n          branding: true,\r\n          logo: true,\r\n          colorScheme: 'custom',\r\n          layout: 'professional'\r\n        }\r\n      },\r\n      {\r\n        id: '2',\r\n        name: 'Departmental Breakdown',\r\n        description: 'Detailed spending analysis by department/category',\r\n        type: 'departmental',\r\n        frequency: 'weekly',\r\n        includes: [\r\n          'Category-wise spending',\r\n          'Variance analysis',\r\n          'Budget vs actual',\r\n          'Performance metrics'\r\n        ],\r\n        customization: {\r\n          branding: true,\r\n          logo: true,\r\n          colorScheme: 'corporate',\r\n          layout: 'detailed'\r\n        }\r\n      },\r\n      {\r\n        id: '3',\r\n        name: 'Compliance Report',\r\n        description: 'Regulatory compliance and audit trail',\r\n        type: 'compliance',\r\n        frequency: 'quarterly',\r\n        includes: [\r\n          'Transaction audit trail',\r\n          'Compliance metrics',\r\n          'Risk indicators',\r\n          'Regulatory requirements'\r\n        ],\r\n        customization: {\r\n          branding: false,\r\n          logo: false,\r\n          colorScheme: 'standard',\r\n          layout: 'formal'\r\n        }\r\n      }\r\n    ];\r\n\r\n    return {\r\n      reports: customReports,\r\n      isPremium: true,\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n  }\r\n\r\n  async getRealTimeAlerts(userId: string, hasFeatureAccess: (feature: string) => boolean): Promise<any> {\r\n    if (!hasFeatureAccess('Real-time Notifications')) {\r\n      return {\r\n        alerts: [],\r\n        isPremium: false,\r\n        upgradeMessage: 'Upgrade to Pro or higher to unlock real-time alerts and notifications.'\r\n      };\r\n    }\r\n\r\n    // Simulate real-time alert system\r\n    await new Promise(resolve => setTimeout(resolve, 500));\r\n    \r\n    const alerts = [\r\n      {\r\n        id: '1',\r\n        type: 'budget_alert',\r\n        severity: 'warning',\r\n        title: 'Budget Threshold Reached',\r\n        message: 'You\\'ve spent 75% of your monthly food budget',\r\n        timestamp: new Date().toISOString(),\r\n        category: 'Food & Dining',\r\n        actionRequired: true,\r\n        actions: [\r\n          'Review recent transactions',\r\n          'Adjust budget if needed',\r\n          'Set up spending alerts'\r\n        ]\r\n      },\r\n      {\r\n        id: '2',\r\n        type: 'unusual_activity',\r\n        severity: 'info',\r\n        title: 'Unusual Spending Pattern',\r\n        message: 'Higher than usual spending detected in Entertainment category',\r\n        timestamp: new Date(Date.now() - 3600000).toISOString(),\r\n        category: 'Entertainment',\r\n        actionRequired: false,\r\n        actions: [\r\n          'Verify transactions',\r\n          'Review budget allocation'\r\n        ]\r\n      },\r\n      {\r\n        id: '3',\r\n        type: 'savings_milestone',\r\n        severity: 'success',\r\n        title: 'Savings Milestone Achieved',\r\n        message: 'Congratulations! You\\'ve reached your emergency fund goal',\r\n        timestamp: new Date(Date.now() - 7200000).toISOString(),\r\n        category: 'Savings',\r\n        actionRequired: false,\r\n        actions: [\r\n          'Set new savings goal',\r\n          'Consider investment options'\r\n        ]\r\n      }\r\n    ];\r\n\r\n    return {\r\n      alerts,\r\n      isPremium: true,\r\n      lastUpdated: new Date().toISOString()\r\n    };\r\n  }\r\n}\r\n\r\nexport const analyticsService = new AnalyticsService();","import React from 'react';\r\nimport { SpendingCategory } from '../../types/Analytics';\r\n\r\ninterface CategoryChartProps {\r\n  categories: SpendingCategory[];\r\n}\r\n\r\nconst CategoryChart: React.FC<CategoryChartProps> = ({ categories }) => {\r\n  if (categories.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64 text-gray-500 dark:text-gray-400\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-4xl mb-2\">📊</div>\r\n          <p>No spending data available</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const totalAmount = categories.reduce((sum, cat) => sum + cat.amount, 0);\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {categories.map((category, index) => (\r\n        <div key={category.id} className=\"flex items-center space-x-4\">\r\n          <div className=\"flex items-center space-x-3 min-w-0 flex-1\">\r\n            <div \r\n              className=\"w-4 h-4 rounded-full flex-shrink-0\"\r\n              style={{ backgroundColor: category.color }}\r\n            />\r\n            <span className=\"text-2xl\">{category.icon}</span>\r\n            <div className=\"min-w-0 flex-1\">\r\n              <p className=\"text-sm font-medium text-gray-900 dark:text-white truncate\">\r\n                {category.name}\r\n              </p>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                {category.percentage.toFixed(1)}% • ${category.amount.toFixed(2)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"flex-1 max-w-32\">\r\n            <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n              <div\r\n                className=\"h-2 rounded-full transition-all duration-300\"\r\n                style={{ \r\n                  width: `${category.percentage}%`,\r\n                  backgroundColor: category.color\r\n                }}\r\n              />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ))}\r\n      \r\n      <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex justify-between items-center\">\r\n          <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n            Total\r\n          </span>\r\n          <span className=\"text-lg font-bold text-gray-900 dark:text-white\">\r\n            ${totalAmount.toFixed(2)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CategoryChart;\r\n","import React from 'react';\r\nimport { SpendingTrend } from '../../types/Analytics';\r\n\r\ninterface TrendChartProps {\r\n  trends: SpendingTrend[];\r\n}\r\n\r\nconst TrendChart: React.FC<TrendChartProps> = ({ trends }) => {\r\n  if (trends.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center h-64 text-gray-500 dark:text-gray-400\">\r\n        <div className=\"text-center\">\r\n          <div className=\"text-4xl mb-2\">📈</div>\r\n          <p>No trend data available</p>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const maxAmount = Math.max(...trends.map(t => t.amount));\r\n  const minAmount = Math.min(...trends.map(t => t.amount));\r\n  const range = maxAmount - minAmount;\r\n\r\n  return (\r\n    <div className=\"space-y-4\">\r\n      {/* Chart Area */}\r\n      <div className=\"relative h-48\">\r\n        <svg className=\"w-full h-full\" viewBox=\"0 0 400 200\">\r\n          {/* Grid lines */}\r\n          {[0, 0.25, 0.5, 0.75, 1].map((ratio, index) => (\r\n            <line\r\n              key={index}\r\n              x1=\"0\"\r\n              y1={200 * ratio}\r\n              x2=\"400\"\r\n              y2={200 * ratio}\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"1\"\r\n              className=\"text-gray-200 dark:text-gray-700\"\r\n            />\r\n          ))}\r\n          \r\n          {/* Trend line */}\r\n          <polyline\r\n            points={trends.map((trend, index) => {\r\n              const x = (index / (trends.length - 1)) * 400;\r\n              const y = range > 0 ? 200 - ((trend.amount - minAmount) / range) * 200 : 100;\r\n              return `${x},${y}`;\r\n            }).join(' ')}\r\n            fill=\"none\"\r\n            stroke=\"#F59E0B\"\r\n            strokeWidth=\"3\"\r\n            strokeLinecap=\"round\"\r\n            strokeLinejoin=\"round\"\r\n          />\r\n          \r\n          {/* Data points */}\r\n          {trends.map((trend, index) => {\r\n            const x = (index / (trends.length - 1)) * 400;\r\n            const y = range > 0 ? 200 - ((trend.amount - minAmount) / range) * 200 : 100;\r\n            return (\r\n              <circle\r\n                key={index}\r\n                cx={x}\r\n                cy={y}\r\n                r=\"4\"\r\n                fill=\"#F59E0B\"\r\n                className=\"hover:r-6 transition-all duration-200\"\r\n              />\r\n            );\r\n          })}\r\n        </svg>\r\n      </div>\r\n\r\n      {/* X-axis labels */}\r\n      <div className=\"flex justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n        {trends.map((trend, index) => (\r\n          <div key={index} className=\"text-center\">\r\n            <div>{trend.period}</div>\r\n            <div className=\"font-medium text-gray-900 dark:text-white\">\r\n              ${trend.amount.toFixed(0)}\r\n            </div>\r\n            {trend.change !== 0 && (\r\n              <div className={`text-xs ${\r\n                trend.change > 0 \r\n                  ? 'text-red-500 dark:text-red-400' \r\n                  : 'text-green-500 dark:text-green-400'\r\n              }`}>\r\n                {trend.change > 0 ? '+' : ''}{trend.changePercentage.toFixed(1)}%\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Summary */}\r\n      <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n        <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n          <div>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">Highest</p>\r\n            <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n              ${maxAmount.toFixed(2)}\r\n            </p>\r\n          </div>\r\n          <div>\r\n            <p className=\"text-gray-600 dark:text-gray-400\">Lowest</p>\r\n            <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n              ${minAmount.toFixed(2)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendChart;\r\n","import React from 'react';\r\nimport { SpendingForecast } from '../../types/Analytics';\r\nimport { ArrowTrendingUpIcon, CalendarIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface ForecastCardProps {\r\n  forecast: SpendingForecast;\r\n}\r\n\r\nconst ForecastCard: React.FC<ForecastCardProps> = ({ forecast }) => {\r\n  const getConfidenceColor = (confidence: number) => {\r\n    if (confidence >= 0.7) return 'text-green-500 dark:text-green-400';\r\n    if (confidence >= 0.5) return 'text-yellow-500 dark:text-yellow-400';\r\n    return 'text-red-500 dark:text-red-400';\r\n  };\r\n\r\n  const getConfidenceLabel = (confidence: number) => {\r\n    if (confidence >= 0.7) return 'High';\r\n    if (confidence >= 0.5) return 'Medium';\r\n    return 'Low';\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n      <div className=\"flex items-center space-x-2 mb-4\">\r\n        <ArrowTrendingUpIcon className=\"w-5 h-5 text-blue-600 dark:text-blue-400\" />\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          Spending Forecast\r\n        </h3>\r\n      </div>\r\n\r\n      <div className=\"space-y-4\">\r\n        {/* Next Month */}\r\n        <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <CalendarIcon className=\"w-4 h-4 text-blue-600 dark:text-blue-400\" />\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                Next Month\r\n              </span>\r\n            </div>\r\n            <span className={`text-xs font-medium ${getConfidenceColor(forecast.nextMonth.confidence)}`}>\r\n              {getConfidenceLabel(forecast.nextMonth.confidence)} Confidence\r\n            </span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            ${forecast.nextMonth.predicted.toFixed(2)}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Next Quarter */}\r\n        <div className=\"p-4 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <CalendarIcon className=\"w-4 h-4 text-green-600 dark:text-green-400\" />\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                Next Quarter\r\n              </span>\r\n            </div>\r\n            <span className={`text-xs font-medium ${getConfidenceColor(forecast.nextQuarter.confidence)}`}>\r\n              {getConfidenceLabel(forecast.nextQuarter.confidence)} Confidence\r\n            </span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            ${forecast.nextQuarter.predicted.toFixed(2)}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Next Year */}\r\n        <div className=\"p-4 bg-purple-50 dark:bg-purple-900/20 rounded-lg\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              <CalendarIcon className=\"w-4 h-4 text-purple-600 dark:text-purple-400\" />\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                Next Year\r\n              </span>\r\n            </div>\r\n            <span className={`text-xs font-medium ${getConfidenceColor(forecast.nextYear.confidence)}`}>\r\n              {getConfidenceLabel(forecast.nextYear.confidence)} Confidence\r\n            </span>\r\n          </div>\r\n          <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            ${forecast.nextYear.predicted.toFixed(2)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"mt-4 p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n        <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n          💡 Forecasts are based on your recent spending patterns and trends. \r\n          Higher confidence indicates more reliable predictions.\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ForecastCard;\r\n","import React from 'react';\r\nimport { SpendingGoal } from '../../types/Analytics';\r\nimport { TagIcon, CheckCircleIcon, ExclamationTriangleIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface GoalCardProps {\r\n  goal: SpendingGoal;\r\n}\r\n\r\nconst GoalCard: React.FC<GoalCardProps> = ({ goal }) => {\r\n  const getStatusColor = (status: SpendingGoal['status']) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'text-green-500 dark:text-green-400';\r\n      case 'ahead':\r\n        return 'text-blue-500 dark:text-blue-400';\r\n      case 'on-track':\r\n        return 'text-yellow-500 dark:text-yellow-400';\r\n      case 'behind':\r\n        return 'text-red-500 dark:text-red-400';\r\n      default:\r\n        return 'text-gray-500 dark:text-gray-400';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: SpendingGoal['status']) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircleIcon className=\"w-4 h-4\" />;\r\n      case 'ahead':\r\n        return <TagIcon className=\"w-4 h-4\" />;\r\n      case 'behind':\r\n        return <ExclamationTriangleIcon className=\"w-4 h-4\" />;\r\n      default:\r\n        return <TagIcon className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusLabel = (status: SpendingGoal['status']) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'Completed';\r\n      case 'ahead':\r\n        return 'Ahead of Schedule';\r\n      case 'on-track':\r\n        return 'On Track';\r\n      case 'behind':\r\n        return 'Behind Schedule';\r\n      default:\r\n        return 'Unknown';\r\n    }\r\n  };\r\n\r\n  const getProgressColor = (status: SpendingGoal['status']) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'bg-green-500';\r\n      case 'ahead':\r\n        return 'bg-blue-500';\r\n      case 'on-track':\r\n        return 'bg-yellow-500';\r\n      case 'behind':\r\n        return 'bg-red-500';\r\n      default:\r\n        return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  const remainingAmount = goal.targetAmount - goal.currentAmount;\r\n  const daysRemaining = Math.ceil((goal.deadline.getTime() - new Date().getTime()) / (1000 * 60 * 60 * 24));\r\n\r\n  return (\r\n    <div className=\"p-4 border border-gray-200 dark:border-gray-700 rounded-lg hover:shadow-md transition-shadow\">\r\n      <div className=\"flex items-start justify-between mb-3\">\r\n        <div className=\"flex-1\">\r\n          <h4 className=\"font-medium text-gray-900 dark:text-white mb-1\">\r\n            {goal.name}\r\n          </h4>\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {goal.category}\r\n          </p>\r\n        </div>\r\n        <div className={`flex items-center space-x-1 ${getStatusColor(goal.status)}`}>\r\n          {getStatusIcon(goal.status)}\r\n          <span className=\"text-xs font-medium\">\r\n            {getStatusLabel(goal.status)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Progress Bar */}\r\n      <div className=\"mb-3\">\r\n        <div className=\"flex justify-between text-sm text-gray-600 dark:text-gray-400 mb-1\">\r\n          <span>Progress</span>\r\n          <span>{goal.progress.toFixed(1)}%</span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n          <div\r\n            className={`h-2 rounded-full transition-all duration-300 ${getProgressColor(goal.status)}`}\r\n            style={{ width: `${Math.min(goal.progress, 100)}%` }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Amounts */}\r\n      <div className=\"grid grid-cols-2 gap-4 text-sm\">\r\n        <div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Current</p>\r\n          <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n            ${goal.currentAmount.toFixed(2)}\r\n          </p>\r\n        </div>\r\n        <div>\r\n          <p className=\"text-gray-600 dark:text-gray-400\">Target</p>\r\n          <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n            ${goal.targetAmount.toFixed(2)}\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Remaining Info */}\r\n      {goal.status !== 'completed' && (\r\n        <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"text-gray-600 dark:text-gray-400\">Remaining</span>\r\n            <span className=\"font-medium text-gray-900 dark:text-white\">\r\n              ${remainingAmount.toFixed(2)}\r\n            </span>\r\n          </div>\r\n          <div className=\"flex justify-between text-sm\">\r\n            <span className=\"text-gray-600 dark:text-gray-400\">Deadline</span>\r\n            <span className=\"font-medium text-gray-900 dark:text-white\">\r\n              {daysRemaining > 0 ? `${daysRemaining} days` : 'Overdue'}\r\n            </span>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Completion Message */}\r\n      {goal.status === 'completed' && (\r\n        <div className=\"mt-3 p-2 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n          <p className=\"text-xs text-green-700 dark:text-green-400 font-medium\">\r\n            🎉 Goal completed! Great job!\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GoalCard;\r\n","import * as React from \"react\";\nfunction MinusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M5 12h14\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(MinusIcon);\nexport default ForwardRef;","import React from 'react';\r\nimport { ComparisonData } from '../../types/Analytics';\r\nimport { ArrowTrendingUpIcon, ArrowTrendingDownIcon, MinusIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface ComparisonCardProps {\r\n  title: string;\r\n  data: ComparisonData;\r\n}\r\n\r\nconst ComparisonCard: React.FC<ComparisonCardProps> = ({ title, data }) => {\r\n  const isPositive = data.change > 0;\r\n  const isNegative = data.change < 0;\r\n  const isNeutral = data.change === 0;\r\n\r\n  const getChangeColor = () => {\r\n    if (isPositive) return 'text-red-500 dark:text-red-400';\r\n    if (isNegative) return 'text-green-500 dark:text-green-400';\r\n    return 'text-gray-500 dark:text-gray-400';\r\n  };\r\n\r\n  const getChangeIcon = () => {\r\n    if (isPositive) return <ArrowTrendingUpIcon className=\"w-4 h-4\" />;\r\n    if (isNegative) return <ArrowTrendingDownIcon className=\"w-4 h-4\" />;\r\n    return <MinusIcon className=\"w-4 h-4\" />;\r\n  };\r\n\r\n  const getChangeLabel = () => {\r\n    if (isPositive) return 'Increase';\r\n    if (isNegative) return 'Decrease';\r\n    return 'No Change';\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n        {title}\r\n      </h3>\r\n\r\n      <div className=\"space-y-4\">\r\n        {/* Current Period */}\r\n        <div className=\"p-4 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Current Period</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                {data.current.period}\r\n              </p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                ${data.current.amount.toFixed(2)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Previous Period */}\r\n        <div className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Previous Period</p>\r\n              <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                {data.previous.period}\r\n              </p>\r\n            </div>\r\n            <div className=\"text-right\">\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                ${data.previous.amount.toFixed(2)}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Change Summary */}\r\n        <div className=\"p-4 bg-white dark:bg-gray-600 rounded-lg border border-gray-200 dark:border-gray-600\">\r\n          <div className=\"flex items-center justify-between mb-2\">\r\n            <div className=\"flex items-center space-x-2\">\r\n              {getChangeIcon()}\r\n              <span className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                {getChangeLabel()}\r\n              </span>\r\n            </div>\r\n            <div className={`text-right ${getChangeColor()}`}>\r\n              <p className=\"text-lg font-bold\">\r\n                {isPositive ? '+' : ''}${data.change.toFixed(2)}\r\n              </p>\r\n              <p className=\"text-sm\">\r\n                {isPositive ? '+' : ''}{data.changePercentage.toFixed(1)}%\r\n              </p>\r\n            </div>\r\n          </div>\r\n          \r\n          {/* Change Bar */}\r\n          <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n            <div\r\n              className={`h-2 rounded-full transition-all duration-300 ${\r\n                isPositive \r\n                  ? 'bg-red-500' \r\n                  : isNegative \r\n                    ? 'bg-green-500' \r\n                    : 'bg-gray-500'\r\n              }`}\r\n              style={{ \r\n                width: `${Math.min(Math.abs(data.changePercentage), 100)}%` \r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n\r\n        {/* Insights */}\r\n        <div className=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n          <p className=\"text-xs text-gray-600 dark:text-gray-400\">\r\n            {isPositive && (\r\n              <>📈 Your spending increased by ${Math.abs(data.change).toFixed(2)} ({data.changePercentage.toFixed(1)}%) compared to the previous period. Consider reviewing your budget.</>\r\n            )}\r\n            {isNegative && (\r\n              <>📉 Great job! Your spending decreased by ${Math.abs(data.change).toFixed(2)} ({Math.abs(data.changePercentage).toFixed(1)}%) compared to the previous period. You're saving money!</>\r\n            )}\r\n            {isNeutral && (\r\n              <>➡️ Your spending remained the same (${data.current.amount.toFixed(2)}) compared to the previous period. Consistent spending habits!</>\r\n            )}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComparisonCard;\r\n","import React, { useState, useEffect, useMemo, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  ChartBarIcon, \r\n  ArrowTrendingUpIcon, \r\n  ArrowTrendingDownIcon,\r\n  ArrowDownTrayIcon,\r\n  TagIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { analyticsService } from '../services/analyticsService';\r\nimport { SpendingCategory, SpendingTrend, MonthlyReport, SpendingForecast, SpendingGoal, ComparisonData } from '../types/Analytics';\r\nimport CategoryChart from './charts/CategoryChart';\r\nimport TrendChart from './charts/TrendChart';\r\nimport ForecastCard from './cards/ForecastCard';\r\nimport GoalCard from './cards/GoalCard';\r\nimport ComparisonCard from './cards/ComparisonCard';\r\n\r\nconst AnalyticsDashboard: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [selectedPeriod, setSelectedPeriod] = useState<'month' | 'quarter' | 'year'>('month');\r\n  const [selectedMonth] = useState(new Date().getMonth() + 1);\r\n  const [selectedYear] = useState(new Date().getFullYear());\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [categories, setCategories] = useState<SpendingCategory[]>([]);\r\n  const [trends, setTrends] = useState<SpendingTrend[]>([]);\r\n  const [monthlyReport, setMonthlyReport] = useState<MonthlyReport | null>(null);\r\n  const [forecast, setForecast] = useState<SpendingForecast | null>(null);\r\n  const [goals, setGoals] = useState<SpendingGoal[]>([]);\r\n  const [monthlyComparison, setMonthlyComparison] = useState<ComparisonData | null>(null);\r\n  const [yearlyComparison, setYearlyComparison] = useState<ComparisonData | null>(null);\r\n\r\n  const loadAnalyticsData = useCallback(async () => {\r\n    if (!user) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const startDate = new Date(selectedYear, selectedMonth - 1, 1);\r\n      const endDate = new Date(selectedYear, selectedMonth, 0);\r\n\r\n      // Load all analytics data\r\n      const [\r\n        categoriesData,\r\n        trendsData,\r\n        monthlyReportData,\r\n        forecastData,\r\n        goalsData,\r\n        monthlyComparisonData,\r\n        yearlyComparisonData\r\n      ] = await Promise.all([\r\n        analyticsService.getSpendingCategories(user.id, startDate, endDate),\r\n        analyticsService.getSpendingTrends(user.id, 6),\r\n        analyticsService.getMonthlyReport(user.id, selectedYear, selectedMonth),\r\n        analyticsService.getSpendingForecast(user.id),\r\n        analyticsService.getSpendingGoals(user.id),\r\n        analyticsService.getComparisonData(user.id, 'monthly'),\r\n        analyticsService.getComparisonData(user.id, 'yearly')\r\n      ]);\r\n\r\n      setCategories(categoriesData);\r\n      setTrends(trendsData);\r\n      setMonthlyReport(monthlyReportData);\r\n      setForecast(forecastData);\r\n      setGoals(goalsData);\r\n      setMonthlyComparison(monthlyComparisonData);\r\n      setYearlyComparison(yearlyComparisonData);\r\n    } catch (error) {\r\n      console.error('Error loading analytics data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, selectedMonth, selectedYear]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadAnalyticsData();\r\n    }\r\n  }, [user, loadAnalyticsData]);\r\n\r\n  const handleExport = (format: 'csv' | 'pdf') => {\r\n    if (!user) return;\r\n    \r\n    const data = analyticsService.exportReport(user.id, format);\r\n    const blob = new Blob([data], { type: format === 'csv' ? 'text/csv' : 'application/json' });\r\n    const url = URL.createObjectURL(blob);\r\n    const a = document.createElement('a');\r\n    a.href = url;\r\n    a.download = `zappay-report-${selectedYear}-${selectedMonth}.${format}`;\r\n    document.body.appendChild(a);\r\n    a.click();\r\n    document.body.removeChild(a);\r\n    URL.revokeObjectURL(url);\r\n  };\r\n\r\n  const totalSpending = useMemo(() => \r\n    categories.reduce((sum, cat) => sum + cat.amount, 0), \r\n    [categories]\r\n  );\r\n\r\n  const averageSpending = useMemo(() => \r\n    trends.length > 0 ? trends.reduce((sum, t) => sum + t.amount, 0) / trends.length : 0,\r\n    [trends]\r\n  );\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-96\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-yellow-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n            📊 Analytics Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-300 mt-1\">\r\n            Insights into your spending patterns and financial trends\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-4 mt-4 sm:mt-0\">\r\n          {/* Period Selector */}\r\n          <div className=\"flex bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n            {(['month', 'quarter', 'year'] as const).map((period) => (\r\n              <button\r\n                key={period}\r\n                onClick={() => setSelectedPeriod(period)}\r\n                className={`px-3 py-1 rounded-md text-sm font-medium transition-colors ${\r\n                  selectedPeriod === period\r\n                    ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm'\r\n                    : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'\r\n                }`}\r\n              >\r\n                {period.charAt(0).toUpperCase() + period.slice(1)}\r\n              </button>\r\n            ))}\r\n          </div>\r\n\r\n          {/* Export Buttons */}\r\n          <div className=\"flex space-x-2\">\r\n            <button\r\n              onClick={() => handleExport('csv')}\r\n              className=\"flex items-center space-x-2 px-4 py-2 bg-green-500 text-white rounded-lg hover:bg-green-600 transition-colors\"\r\n            >\r\n              <ArrowDownTrayIcon className=\"w-4 h-4\" />\r\n              <span>CSV</span>\r\n            </button>\r\n            <button\r\n              onClick={() => handleExport('pdf')}\r\n              className=\"flex items-center space-x-2 px-4 py-2 bg-red-500 text-white rounded-lg hover:bg-red-600 transition-colors\"\r\n            >\r\n              <ArrowDownTrayIcon className=\"w-4 h-4\" />\r\n              <span>PDF</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-6\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Spending</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                ${totalSpending.toFixed(2)}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-red-100 dark:bg-red-900/20 rounded-lg\">\r\n              <ArrowTrendingDownIcon className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Average Monthly</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                ${averageSpending.toFixed(2)}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\r\n              <ChartBarIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Categories</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {categories.length}\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-green-100 dark:bg-green-900/20 rounded-lg\">\r\n              <TagIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between\">\r\n            <div>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">Savings Rate</p>\r\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                {monthlyReport?.savingsRate.toFixed(1) || 0}%\r\n              </p>\r\n            </div>\r\n            <div className=\"p-3 bg-yellow-100 dark:bg-yellow-900/20 rounded-lg\">\r\n              <ArrowTrendingUpIcon className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" />\r\n            </div>\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Charts Row */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Spending by Category\r\n          </h3>\r\n          <CategoryChart categories={categories} />\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.5 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Spending Trends\r\n          </h3>\r\n          <TrendChart trends={trends} />\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Forecast and Goals Row */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {forecast && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.6 }}\r\n          >\r\n            <ForecastCard forecast={forecast} />\r\n          </motion.div>\r\n        )}\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.7 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Spending Goals\r\n          </h3>\r\n          <div className=\"space-y-4\">\r\n            {goals.map((goal) => (\r\n              <GoalCard key={goal.id} goal={goal} />\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Comparison Row */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {monthlyComparison && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.8 }}\r\n          >\r\n            <ComparisonCard \r\n              title=\"Monthly Comparison\" \r\n              data={monthlyComparison} \r\n            />\r\n          </motion.div>\r\n        )}\r\n\r\n        {yearlyComparison && (\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.9 }}\r\n          >\r\n            <ComparisonCard \r\n              title=\"Yearly Comparison\" \r\n              data={yearlyComparison} \r\n            />\r\n          </motion.div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnalyticsDashboard;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  SparklesIcon,\r\n  ChartBarIcon,\r\n  BellIcon,\r\n  DocumentTextIcon,\r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon,\r\n  InformationCircleIcon,\r\n  XCircleIcon,\r\n  ArrowUpIcon,\r\n  StarIcon,\r\n  UsersIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useSubscription } from '../contexts/SubscriptionContext';\r\nimport { analyticsService } from '../services/analyticsService';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst PremiumAnalytics: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const { currentSubscription } = useSubscription();\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'insights' | 'predictions' | 'reports' | 'alerts'>('insights');\r\n  \r\n  const [insights, setInsights] = useState<any>(null);\r\n  const [predictions, setPredictions] = useState<any>(null);\r\n  const [reports, setReports] = useState<any>(null);\r\n  const [alerts, setAlerts] = useState<any>(null);\r\n\r\n  const loadPremiumData = useCallback(async () => {\r\n    if (!user) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      // Create a synchronous wrapper for hasFeatureAccess\r\n      const syncHasFeatureAccess = (feature: string): boolean => {\r\n        // For now, return true for all features - in a real app, this would check the current subscription\r\n        return currentSubscription?.planId !== 'free' || false;\r\n      };\r\n      \r\n      switch (activeTab) {\r\n        case 'insights':\r\n          const insightsData = await analyticsService.getAdvancedInsights(user.id, syncHasFeatureAccess);\r\n          setInsights(insightsData);\r\n          break;\r\n        case 'predictions':\r\n          const predictionsData = await analyticsService.getPredictiveAnalytics(user.id, syncHasFeatureAccess);\r\n          setPredictions(predictionsData);\r\n          break;\r\n        case 'reports':\r\n          const reportsData = await analyticsService.getCustomReports(user.id, syncHasFeatureAccess);\r\n          setReports(reportsData);\r\n          break;\r\n        case 'alerts':\r\n          const alertsData = await analyticsService.getRealTimeAlerts(user.id, syncHasFeatureAccess);\r\n          setAlerts(alertsData);\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading premium analytics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user, activeTab, currentSubscription]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadPremiumData();\r\n    }\r\n  }, [user, loadPremiumData]);\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case 'success':\r\n        return <CheckCircleIcon className=\"w-5 h-5 text-green-500\" />;\r\n      case 'warning':\r\n        return <ExclamationTriangleIcon className=\"w-5 h-5 text-yellow-500\" />;\r\n      case 'error':\r\n        return <XCircleIcon className=\"w-5 h-5 text-red-500\" />;\r\n      default:\r\n        return <InformationCircleIcon className=\"w-5 h-5 text-blue-500\" />;\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'success':\r\n        return 'bg-green-50 border-green-200 dark:bg-green-900/20 dark:border-green-800';\r\n      case 'warning':\r\n        return 'bg-yellow-50 border-yellow-200 dark:bg-yellow-900/20 dark:border-yellow-800';\r\n      case 'error':\r\n        return 'bg-red-50 border-red-200 dark:bg-red-900/20 dark:border-red-800';\r\n      default:\r\n        return 'bg-blue-50 border-blue-200 dark:bg-blue-900/20 dark:border-blue-800';\r\n    }\r\n  };\r\n\r\n  const getImpactColor = (impact: string) => {\r\n    switch (impact) {\r\n      case 'high':\r\n        return 'text-red-600 dark:text-red-400';\r\n      case 'medium':\r\n        return 'text-yellow-600 dark:text-yellow-400';\r\n      case 'low':\r\n        return 'text-green-600 dark:text-green-400';\r\n      default:\r\n        return 'text-gray-600 dark:text-gray-400';\r\n    }\r\n  };\r\n\r\n  const getPlanIcon = () => {\r\n    if (!currentSubscription) return <StarIcon className=\"w-6 h-6\" />;\r\n    \r\n    switch (currentSubscription.planId) {\r\n      case 'pro':\r\n        return <StarIcon className=\"w-6 h-6\" />;\r\n      case 'business':\r\n        return <UsersIcon className=\"w-6 h-6\" />;\r\n      case 'enterprise':\r\n        return <StarIcon className=\"w-6 h-6\" />;\r\n      default:\r\n        return <StarIcon className=\"w-6 h-6\" />;\r\n    }\r\n  };\r\n\r\n  const renderInsights = () => {\r\n    if (!insights) return null;\r\n\r\n    if (!insights.isPremium) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <SparklesIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            AI-Powered Insights\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n            {insights.upgradeMessage}\r\n          </p>\r\n          <Link\r\n            to=\"/subscription-plans\"\r\n            className=\"inline-flex items-center px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n          >\r\n            <StarIcon className=\"w-5 h-5 mr-2\" />\r\n            Upgrade to Pro\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        {/* AI Insights */}\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            AI Insights\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            {insights.insights.map((insight: any) => (\r\n              <motion.div\r\n                key={insight.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className={`p-4 rounded-lg border ${getSeverityColor(insight.impact)}`}\r\n              >\r\n                <div className=\"flex items-start justify-between mb-2\">\r\n                  <h4 className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {insight.title}\r\n                  </h4>\r\n                  <span className={`text-sm font-medium ${getImpactColor(insight.impact)}`}>\r\n                    {insight.impact.toUpperCase()}\r\n                  </span>\r\n                </div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-3\">\r\n                  {insight.description}\r\n                </p>\r\n                <div className=\"flex items-center justify-between text-xs text-gray-500 dark:text-gray-400\">\r\n                  <span>Confidence: {(insight.confidence * 100).toFixed(0)}%</span>\r\n                  <span>{insight.category}</span>\r\n                </div>\r\n                {insight.recommendation && (\r\n                  <div className=\"mt-3 p-2 bg-white dark:bg-gray-800 rounded border-l-4 border-orange-500\">\r\n                    <p className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                      💡 {insight.recommendation}\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* AI Recommendations */}\r\n        <div>\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            AI Recommendations\r\n          </h3>\r\n          <div className=\"space-y-4\">\r\n            {insights.recommendations.map((rec: any) => (\r\n              <motion.div\r\n                key={rec.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"p-6 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700\"\r\n              >\r\n                <div className=\"flex items-start justify-between mb-4\">\r\n                  <div>\r\n                    <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                      {rec.title}\r\n                    </h4>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mt-1\">\r\n                      {rec.description}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"text-right\">\r\n                    <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n                      rec.priority === 'high' ? 'bg-red-100 text-red-800' :\r\n                      rec.priority === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                      'bg-green-100 text-green-800'\r\n                    }`}>\r\n                      {rec.priority.toUpperCase()}\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                  <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n                    <p className=\"text-sm font-medium text-green-800 dark:text-green-200\">\r\n                      Estimated Savings\r\n                    </p>\r\n                    <p className=\"text-lg font-bold text-green-900 dark:text-green-100\">\r\n                      ${rec.estimatedSavings || rec.estimatedReturns}/month\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-blue-50 dark:bg-blue-900/20 rounded-lg\">\r\n                    <p className=\"text-sm font-medium text-blue-800 dark:text-blue-200\">\r\n                      Action Items\r\n                    </p>\r\n                    <p className=\"text-lg font-bold text-blue-900 dark:text-blue-100\">\r\n                      {rec.actionItems.length} steps\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                    Action Items:\r\n                  </h5>\r\n                  <ul className=\"space-y-1\">\r\n                    {rec.actionItems.map((item: string, index: number) => (\r\n                      <li key={index} className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\r\n                        <CheckCircleIcon className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\r\n                        {item}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderPredictions = () => {\r\n    if (!predictions) return null;\r\n\r\n    if (!predictions.isPremium) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <ChartBarIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            Predictive Analytics\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n            {predictions.upgradeMessage}\r\n          </p>\r\n          <Link\r\n            to=\"/subscription-plans\"\r\n            className=\"inline-flex items-center px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n          >\r\n            <UsersIcon className=\"w-5 h-5 mr-2\" />\r\n            Upgrade to Business\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n            Predictive Analytics\r\n          </h3>\r\n          <div className=\"flex items-center text-sm text-gray-500 dark:text-gray-400\">\r\n            <span className=\"mr-2\">Model Version:</span>\r\n            <span className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 rounded text-xs\">\r\n              {predictions.modelVersion}\r\n            </span>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {predictions.predictions.map((prediction: any) => (\r\n            <motion.div\r\n              key={prediction.id}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"p-6 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700\"\r\n            >\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                  {prediction.title}\r\n                </h4>\r\n                <span className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n                  prediction.riskLevel === 'high' ? 'bg-red-100 text-red-800' :\r\n                  prediction.riskLevel === 'medium' ? 'bg-yellow-100 text-yellow-800' :\r\n                  'bg-green-100 text-green-800'\r\n                }`}>\r\n                  {prediction.riskLevel.toUpperCase()}\r\n                </span>\r\n              </div>\r\n\r\n              <div className=\"mb-4\">\r\n                <p className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n                  ${prediction.predictedAmount.toFixed(2)}\r\n                </p>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                  Confidence: {(prediction.confidence * 100).toFixed(0)}%\r\n                </p>\r\n              </div>\r\n\r\n              <div>\r\n                <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                  Key Factors:\r\n                </h5>\r\n                <ul className=\"space-y-1\">\r\n                  {prediction.factors.map((factor: string, index: number) => (\r\n                    <li key={index} className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\r\n                      <ArrowUpIcon className=\"w-4 h-4 text-blue-500 mr-2 flex-shrink-0\" />\r\n                      {factor}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderReports = () => {\r\n    if (!reports) return null;\r\n\r\n    if (!reports.isPremium) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <DocumentTextIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            Custom Reports\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n            {reports.upgradeMessage}\r\n          </p>\r\n          <Link\r\n            to=\"/subscription-plans\"\r\n            className=\"inline-flex items-center px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n          >\r\n            <UsersIcon className=\"w-5 h-5 mr-2\" />\r\n            Upgrade to Business\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          Custom Reports\r\n        </h3>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {reports.reports.map((report: any) => (\r\n            <motion.div\r\n              key={report.id}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"p-6 bg-white dark:bg-gray-800 rounded-xl border border-gray-200 dark:border-gray-700\"\r\n            >\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                  {report.name}\r\n                </h4>\r\n                <span className=\"px-2 py-1 bg-blue-100 dark:bg-blue-900/20 text-blue-800 dark:text-blue-200 rounded-full text-xs font-medium\">\r\n                  {report.type.toUpperCase()}\r\n                </span>\r\n              </div>\r\n\r\n              <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n                {report.description}\r\n              </p>\r\n\r\n              <div className=\"space-y-3\">\r\n                <div>\r\n                  <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                    Frequency: {report.frequency}\r\n                  </h5>\r\n                </div>\r\n\r\n                <div>\r\n                  <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                    Includes:\r\n                  </h5>\r\n                  <ul className=\"space-y-1\">\r\n                    {report.includes.map((item: string, index: number) => (\r\n                      <li key={index} className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\r\n                        <CheckCircleIcon className=\"w-4 h-4 text-green-500 mr-2 flex-shrink-0\" />\r\n                        {item}\r\n                      </li>\r\n                    ))}\r\n                  </ul>\r\n                </div>\r\n\r\n                <div className=\"pt-4 border-t border-gray-200 dark:border-gray-700\">\r\n                  <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                    Customization:\r\n                  </h5>\r\n                  <div className=\"flex flex-wrap gap-2\">\r\n                    {Object.entries(report.customization).map(([key, value]) => (\r\n                      <span\r\n                        key={key}\r\n                        className={`px-2 py-1 rounded text-xs ${\r\n                          value ? 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200' :\r\n                          'bg-gray-100 text-gray-800 dark:bg-gray-700 dark:text-gray-200'\r\n                        }`}\r\n                      >\r\n                        {key}: {value ? 'Yes' : 'No'}\r\n                      </span>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <button className=\"w-full mt-4 px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\">\r\n                Generate Report\r\n              </button>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAlerts = () => {\r\n    if (!alerts) return null;\r\n\r\n    if (!alerts.isPremium) {\r\n      return (\r\n        <div className=\"text-center py-12\">\r\n          <BellIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n            Real-time Alerts\r\n          </h3>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n            {alerts.upgradeMessage}\r\n          </p>\r\n          <Link\r\n            to=\"/subscription-plans\"\r\n            className=\"inline-flex items-center px-6 py-3 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n          >\r\n            <StarIcon className=\"w-5 h-5 mr-2\" />\r\n            Upgrade to Pro\r\n          </Link>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          Real-time Alerts\r\n        </h3>\r\n\r\n        <div className=\"space-y-4\">\r\n          {alerts.alerts.map((alert: any) => (\r\n            <motion.div\r\n              key={alert.id}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className={`p-4 rounded-lg border ${getSeverityColor(alert.severity)}`}\r\n            >\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                <div className=\"flex items-start space-x-3\">\r\n                  {getSeverityIcon(alert.severity)}\r\n                  <div>\r\n                    <h4 className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {alert.title}\r\n                    </h4>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                      {alert.message}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                    {new Date(alert.timestamp).toLocaleString()}\r\n                  </span>\r\n                  {alert.actionRequired && (\r\n                    <div className=\"mt-1\">\r\n                      <span className=\"px-2 py-1 bg-orange-100 dark:bg-orange-900/20 text-orange-800 dark:text-orange-200 rounded-full text-xs font-medium\">\r\n                        Action Required\r\n                      </span>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex items-center justify-between\">\r\n                <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                  Category: {alert.category}\r\n                </span>\r\n                {alert.actions && alert.actions.length > 0 && (\r\n                  <div className=\"flex space-x-2\">\r\n                    {alert.actions.slice(0, 2).map((action: string, index: number) => (\r\n                      <button\r\n                        key={index}\r\n                        className=\"px-3 py-1 bg-white dark:bg-gray-800 text-gray-700 dark:text-gray-300 rounded text-xs hover:bg-gray-50 dark:hover:bg-gray-700 transition-colors\"\r\n                      >\r\n                        {action}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </motion.div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-96\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Premium Analytics\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            Advanced insights powered by AI and machine learning\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\r\n          {getPlanIcon()}\r\n          <span>{currentSubscription?.planId || 'Free'} Plan</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          {[\r\n            { id: 'insights', name: 'AI Insights', icon: SparklesIcon },\r\n            { id: 'predictions', name: 'Predictions', icon: ChartBarIcon },\r\n            { id: 'reports', name: 'Custom Reports', icon: DocumentTextIcon },\r\n            { id: 'alerts', name: 'Real-time Alerts', icon: BellIcon }\r\n          ].map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id as any)}\r\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                    : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-5 h-5\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"py-6\">\r\n        {activeTab === 'insights' && renderInsights()}\r\n        {activeTab === 'predictions' && renderPredictions()}\r\n        {activeTab === 'reports' && renderReports()}\r\n        {activeTab === 'alerts' && renderAlerts()}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PremiumAnalytics;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  ChartBarIcon, \r\n  ArrowTrendingDownIcon,\r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon,\r\n  LightBulbIcon,\r\n  ShieldCheckIcon,\r\n  ClockIcon,\r\n  SparklesIcon,\r\n  ArrowRightIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { aiInsightsService, SpendingAnalysis } from '../services/aiInsightsService';\r\n\r\nconst AdvancedAnalyticsDashboard: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const [analysis, setAnalysis] = useState<SpendingAnalysis | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'patterns' | 'anomalies' | 'optimization'>('overview');\r\n\r\n  const loadAnalysis = useCallback(async () => {\r\n    if (!user) return;\r\n    \r\n    setLoading(true);\r\n    try {\r\n      const spendingAnalysis = await aiInsightsService.analyzeSpending(user.id, 'month');\r\n      setAnalysis(spendingAnalysis);\r\n    } catch (error) {\r\n      console.error('Error loading advanced analytics:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadAnalysis();\r\n    }\r\n  }, [user, loadAnalysis]);\r\n\r\n  const getHealthColor = (score: number) => {\r\n    if (score >= 80) return 'text-green-600 bg-green-100';\r\n    if (score >= 60) return 'text-yellow-600 bg-yellow-100';\r\n    return 'text-red-600 bg-red-100';\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'critical': return 'text-red-600 bg-red-100';\r\n      case 'high': return 'text-orange-600 bg-orange-100';\r\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\r\n      default: return 'text-blue-600 bg-blue-100';\r\n    }\r\n  };\r\n\r\n  const getPriorityColor = (priority: string) => {\r\n    switch (priority) {\r\n      case 'high': return 'text-red-600 bg-red-100';\r\n      case 'medium': return 'text-yellow-600 bg-yellow-100';\r\n      default: return 'text-green-600 bg-green-100';\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-96\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analysis) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <ExclamationTriangleIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n        <h3 className=\"text-xl font-semibold text-gray-900 dark:text-white mb-2\">\r\n          No Data Available\r\n        </h3>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          Unable to load analytics data. Please try again later.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white flex items-center\">\r\n            <SparklesIcon className=\"w-8 h-8 text-orange-500 mr-3\" />\r\n            Advanced Analytics\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300 mt-1\">\r\n            AI-powered insights into your spending patterns and financial health\r\n          </p>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Financial Health Score */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n      >\r\n        <div className=\"flex items-center justify-between mb-6\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white flex items-center\">\r\n            <ShieldCheckIcon className=\"w-6 h-6 text-green-500 mr-2\" />\r\n            Financial Health Score\r\n          </h3>\r\n          <div className={`px-3 py-1 rounded-full text-sm font-medium ${getHealthColor(analysis.financialHealth.overall)}`}>\r\n            {analysis.financialHealth.overall}/100\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\r\n          {[\r\n            { label: 'Spending', score: analysis.financialHealth.spending },\r\n            { label: 'Savings', score: analysis.financialHealth.savings },\r\n            { label: 'Debt', score: analysis.financialHealth.debt },\r\n            { label: 'Income', score: analysis.financialHealth.income }\r\n          ].map((item) => (\r\n            <div key={item.label} className=\"text-center\">\r\n              <div className=\"text-2xl font-bold text-gray-900 dark:text-white mb-1\">\r\n                {item.score}\r\n              </div>\r\n              <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                {item.label}\r\n              </div>\r\n              <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2 mt-2\">\r\n                <div \r\n                  className=\"bg-orange-500 h-2 rounded-full transition-all duration-300\"\r\n                  style={{ width: `${item.score}%` }}\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {analysis.financialHealth.recommendations.length > 0 && (\r\n          <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\r\n            <h4 className=\"font-medium text-gray-900 dark:text-white mb-2\">Recommendations:</h4>\r\n            <ul className=\"space-y-1\">\r\n              {analysis.financialHealth.recommendations.map((rec, index) => (\r\n                <li key={index} className=\"text-sm text-gray-600 dark:text-gray-400 flex items-center\">\r\n                  <ArrowRightIcon className=\"w-4 h-4 text-orange-500 mr-2 flex-shrink-0\" />\r\n                  {rec}\r\n                </li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          {[\r\n            { id: 'overview', name: 'Overview', icon: ChartBarIcon },\r\n            { id: 'patterns', name: 'Spending Patterns', icon: ClockIcon },\r\n            { id: 'anomalies', name: 'Anomalies', icon: ExclamationTriangleIcon },\r\n            { id: 'optimization', name: 'Budget Optimization', icon: LightBulbIcon }\r\n          ].map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id as any)}\r\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                    : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-5 h-5\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Tab Content */}\r\n      <div className=\"py-6\">\r\n        {activeTab === 'overview' && (\r\n          <div className=\"space-y-6\">\r\n            {/* Key Metrics */}\r\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Spent</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      ${analysis.totalSpent.toFixed(2)}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-red-100 dark:bg-red-900/20 rounded-lg\">\r\n                    <ArrowTrendingDownIcon className=\"w-6 h-6 text-red-600 dark:text-red-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.1 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Daily Average</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      ${analysis.averageDailySpent.toFixed(2)}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\r\n                    <ChartBarIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n\r\n              <motion.div\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: 0.2 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n              >\r\n                <div className=\"flex items-center justify-between\">\r\n                  <div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">Categories</p>\r\n                    <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      {analysis.topCategories.length}\r\n                    </p>\r\n                  </div>\r\n                  <div className=\"p-3 bg-green-100 dark:bg-green-900/20 rounded-lg\">\r\n                    <CheckCircleIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            </div>\r\n\r\n            {/* Top Categories */}\r\n            <motion.div\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              transition={{ delay: 0.3 }}\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n            >\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                Top Spending Categories\r\n              </h3>\r\n              <div className=\"space-y-4\">\r\n                {analysis.topCategories.map((category, index) => (\r\n                  <div key={category.id} className=\"flex items-center justify-between\">\r\n                    <div className=\"flex items-center space-x-3\">\r\n                      <div \r\n                        className=\"w-4 h-4 rounded-full\"\r\n                        style={{ backgroundColor: category.color }}\r\n                      />\r\n                      <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                        {category.name}\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"font-semibold text-gray-900 dark:text-white\">\r\n                        ${category.amount.toFixed(2)}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {category.percentage.toFixed(1)}%\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                ))}\r\n              </div>\r\n            </motion.div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'patterns' && (\r\n          <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Detected Spending Patterns\r\n            </h3>\r\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n              {analysis.spendingPatterns.map((pattern) => (\r\n                <motion.div\r\n                  key={pattern.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div>\r\n                      <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                        {pattern.name}\r\n                      </h4>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                        {pattern.description}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-lg font-bold text-gray-900 dark:text-white\">\r\n                        ${pattern.amount.toFixed(2)}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {pattern.frequency}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"flex items-center justify-between text-sm\">\r\n                    <span className=\"text-gray-600 dark:text-gray-400\">\r\n                      Confidence: {(pattern.confidence * 100).toFixed(0)}%\r\n                    </span>\r\n                    <span className=\"text-gray-600 dark:text-gray-400\">\r\n                      {pattern.category}\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {(pattern.timeOfDay || pattern.dayOfWeek) && (\r\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\r\n                      <div className=\"flex items-center space-x-4 text-sm text-gray-600 dark:text-gray-400\">\r\n                        {pattern.timeOfDay && (\r\n                          <span>Most common time: {pattern.timeOfDay}</span>\r\n                        )}\r\n                        {pattern.dayOfWeek && (\r\n                          <span>Most common day: {pattern.dayOfWeek}</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'anomalies' && (\r\n          <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Anomaly Detection\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {analysis.anomalyDetection.map((anomaly) => (\r\n                <motion.div\r\n                  key={anomaly.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-3\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <ExclamationTriangleIcon className=\"w-6 h-6 text-orange-500 mt-1\" />\r\n                      <div>\r\n                        <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                          {anomaly.description}\r\n                        </h4>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                          {anomaly.recommendation}\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getSeverityColor(anomaly.severity)}`}>\r\n                        {anomaly.severity.toUpperCase()}\r\n                      </span>\r\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                        Confidence: {(anomaly.confidence * 100).toFixed(0)}%\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  {anomaly.expectedValue && anomaly.actualValue && (\r\n                    <div className=\"mt-3 pt-3 border-t border-gray-200 dark:border-gray-700\">\r\n                      <div className=\"flex items-center justify-between text-sm\">\r\n                        <span className=\"text-gray-600 dark:text-gray-400\">\r\n                          Expected: ${anomaly.expectedValue.toFixed(2)}\r\n                        </span>\r\n                        <span className=\"text-gray-600 dark:text-gray-400\">\r\n                          Actual: ${anomaly.actualValue.toFixed(2)}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {activeTab === 'optimization' && (\r\n          <div className=\"space-y-6\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Budget Optimization Recommendations\r\n            </h3>\r\n            <div className=\"space-y-4\">\r\n              {analysis.budgetOptimization.map((optimization) => (\r\n                <motion.div\r\n                  key={optimization.category}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n                >\r\n                  <div className=\"flex items-start justify-between mb-4\">\r\n                    <div>\r\n                      <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                        {optimization.category}\r\n                      </h4>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400 mt-1\">\r\n                        {optimization.reasoning}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"text-right\">\r\n                      <div className=\"text-lg font-bold text-green-600 dark:text-green-400\">\r\n                        Save ${optimization.potentialSavings.toFixed(2)}\r\n                      </div>\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getPriorityColor(optimization.priority)}`}>\r\n                        {optimization.priority.toUpperCase()} PRIORITY\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mb-4\">\r\n                    <div className=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                      <p className=\"text-sm font-medium text-gray-800 dark:text-gray-200\">\r\n                        Current Spending\r\n                      </p>\r\n                      <p className=\"text-lg font-bold text-gray-900 dark:text-white\">\r\n                        ${optimization.currentSpending.toFixed(2)}\r\n                      </p>\r\n                    </div>\r\n                    <div className=\"p-3 bg-green-50 dark:bg-green-900/20 rounded-lg\">\r\n                      <p className=\"text-sm font-medium text-green-800 dark:text-green-200\">\r\n                        Recommended Budget\r\n                      </p>\r\n                      <p className=\"text-lg font-bold text-green-900 dark:text-green-100\">\r\n                        ${optimization.recommendedBudget.toFixed(2)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\r\n                    <h5 className=\"font-medium text-gray-900 dark:text-white mb-2\">\r\n                      Action Items:\r\n                    </h5>\r\n                    <ul className=\"space-y-1\">\r\n                      {optimization.actionItems.map((item, index) => (\r\n                        <li key={index} className=\"flex items-center text-sm text-gray-600 dark:text-gray-400\">\r\n                          <ArrowRightIcon className=\"w-4 h-4 text-orange-500 mr-2 flex-shrink-0\" />\r\n                          {item}\r\n                        </li>\r\n                      ))}\r\n                    </ul>\r\n                  </div>\r\n                </motion.div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdvancedAnalyticsDashboard;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport AnalyticsDashboard from '../components/AnalyticsDashboard';\r\nimport PremiumAnalytics from '../components/PremiumAnalytics';\r\nimport AdvancedAnalyticsDashboard from '../components/AdvancedAnalyticsDashboard';\r\nimport { useSubscription } from '../contexts/SubscriptionContext';\r\nimport { ChartBarIcon, SparklesIcon, CpuChipIcon } from '@heroicons/react/24/outline';\r\n\r\nconst Analytics: React.FC = () => {\r\n  const { hasFeatureAccess } = useSubscription();\r\n  const [activeTab, setActiveTab] = useState<'basic' | 'premium' | 'advanced'>('basic');\r\n\r\n  const hasAdvancedFeatures = hasFeatureAccess('AI Recommendations') || \r\n                             hasFeatureAccess('Advanced Analytics') || \r\n                             hasFeatureAccess('Custom Branding');\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      transition={{ duration: 0.6 }}\r\n      className=\"max-w-7xl mx-auto\"\r\n    >\r\n      {/* Tab Navigation */}\r\n      <div className=\"mb-8\">\r\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n          <nav className=\"-mb-px flex space-x-8\">\r\n            <button\r\n              onClick={() => setActiveTab('basic')}\r\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === 'basic'\r\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                  : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <ChartBarIcon className=\"w-5 h-5\" />\r\n              <span>Basic Analytics</span>\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('premium')}\r\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === 'premium'\r\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                  : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <SparklesIcon className=\"w-5 h-5\" />\r\n              <span>Premium Analytics</span>\r\n              {!hasAdvancedFeatures && (\r\n                <span className=\"px-2 py-1 bg-orange-100 dark:bg-orange-900/20 text-orange-800 dark:text-orange-200 rounded-full text-xs font-medium\">\r\n                  Upgrade Required\r\n                </span>\r\n              )}\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('advanced')}\r\n              className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === 'advanced'\r\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                  : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              <CpuChipIcon className=\"w-5 h-5\" />\r\n              <span>AI Insights</span>\r\n              <span className=\"px-2 py-1 bg-green-100 dark:bg-green-900/20 text-green-800 dark:text-green-200 rounded-full text-xs font-medium\">\r\n                New\r\n              </span>\r\n            </button>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      {activeTab === 'basic' && <AnalyticsDashboard />}\r\n      {activeTab === 'premium' && <PremiumAnalytics />}\r\n      {activeTab === 'advanced' && <AdvancedAnalyticsDashboard />}\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default Analytics;","import * as React from \"react\";\nfunction ArrowTrendingUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M2.25 18 9 11.25l4.306 4.306a11.95 11.95 0 0 1 5.814-5.518l2.74-1.22m0 0-5.94-2.281m5.94 2.28-2.28 5.941\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowTrendingUpIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CalendarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CalendarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpIcon);\nexport default ForwardRef;"],"names":["TagIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","LightBulbIcon","DocumentTextIcon","ArrowTrendingDownIcon","analyticsService","getTransactionsByUser","userId","amount","currency","type","recipient","note","timestamp","category","status","createdAt","updatedAt","sender","getSpendingCategories","startDate","endDate","transactions","this","filter","t","transactionDate","Date","categoryMap","Map","forEach","transaction","existing","get","count","set","totalAmount","Array","from","values","reduce","sum","cat","colors","icons","entries","map","index","name","data","toLowerCase","replace","percentage","color","length","icon","sort","a","b","getSpendingTrends","months","arguments","undefined","trends","now","i","_trends","date","getFullYear","getMonth","nextMonth","period","toLocaleDateString","month","year","previousAmount","change","changePercentage","push","getMonthlyReport","income","expenses","netIncome","savingsRate","categories","topTransactions","slice","totalIncome","totalExpenses","getSpendingForecast","recentTrend","avgSpending","trendSlope","predicted","Math","max","confidence","nextQuarter","nextYear","getSpendingGoals","targetAmount","currentAmount","deadline","progress","getComparisonData","currentMonth","previousMonth","previousNextMonth","currentTransactions","previousTransactions","current","previous","currentYear","previousYear","previousNextYear","toString","exportReport","format","report","toFixed","row","join","JSON","stringify","getAdvancedInsights","hasFeatureAccess","insights","recommendations","isPremium","upgradeMessage","Promise","resolve","setTimeout","description","impact","recommendation","priority","estimatedSavings","actionItems","estimatedReturns","lastUpdated","toISOString","getPredictiveAnalytics","predictions","forecast","predictedAmount","factors","riskLevel","modelVersion","getCustomReports","reports","frequency","includes","customization","branding","logo","colorScheme","layout","getRealTimeAlerts","alerts","severity","message","actionRequired","actions","_jsx","className","children","_jsxs","style","backgroundColor","width","concat","maxAmount","minAmount","min","range","ratio","x1","y1","x2","y2","points","trend","x","y","cx","cy","r","getConfidenceColor","getConfidenceLabel","ArrowTrendingUpIcon","CalendarIcon","goal","remainingAmount","daysRemaining","ceil","getTime","getStatusColor","CheckCircleIcon","ExclamationTriangleIcon","getStatusIcon","getStatusLabel","getProgressColor","MinusIcon","isPositive","isNegative","isNeutral","abs","_Fragment","AnalyticsDashboard","user","useAuth","selectedPeriod","setSelectedPeriod","useState","selectedMonth","selectedYear","loading","setLoading","setCategories","setTrends","monthlyReport","setMonthlyReport","setForecast","goals","setGoals","monthlyComparison","setMonthlyComparison","yearlyComparison","setYearlyComparison","loadAnalyticsData","useCallback","async","categoriesData","trendsData","monthlyReportData","forecastData","goalsData","monthlyComparisonData","yearlyComparisonData","all","error","console","useEffect","handleExport","blob","Blob","url","URL","createObjectURL","document","createElement","href","download","body","appendChild","click","removeChild","revokeObjectURL","totalSpending","useMemo","averageSpending","onClick","charAt","toUpperCase","ArrowDownTrayIcon","motion","div","initial","opacity","animate","transition","delay","ChartBarIcon","CategoryChart","TrendChart","ForecastCard","GoalCard","ComparisonCard","PremiumAnalytics","currentSubscription","useSubscription","activeTab","setActiveTab","setInsights","setPredictions","setReports","setAlerts","loadPremiumData","syncHasFeatureAccess","feature","planId","insightsData","predictionsData","reportsData","alertsData","getSeverityIcon","XCircleIcon","InformationCircleIcon","getSeverityColor","getImpactColor","getPlanIcon","StarIcon","UsersIcon","SparklesIcon","BellIcon","tab","Icon","insight","rec","item","Link","to","prediction","factor","ArrowUpIcon","key","value","alert","toLocaleString","action","AdvancedAnalyticsDashboard","analysis","setAnalysis","loadAnalysis","spendingAnalysis","aiInsightsService","analyzeSpending","getPriorityColor","ShieldCheckIcon","score","financialHealth","overall","label","spending","savings","debt","ArrowRightIcon","ClockIcon","totalSpent","averageDailySpent","topCategories","spendingPatterns","pattern","timeOfDay","dayOfWeek","anomalyDetection","anomaly","expectedValue","actualValue","budgetOptimization","optimization","reasoning","potentialSavings","currentSpending","recommendedBudget","Analytics","hasAdvancedFeatures","duration","CpuChipIcon"],"sourceRoot":""}