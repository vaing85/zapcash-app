{"version":3,"file":"static/js/456.61b7ddf2.chunk.js","mappings":"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","sources":["../node_modules/@heroicons/react/24/outline/esm/ExclamationCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/Cog6ToothIcon.js","components/security/SecurityAlertCard.tsx","components/security/TwoFactorSetup.tsx","components/security/PasswordStrengthMeter.tsx","../node_modules/@heroicons/react/24/outline/esm/ShieldExclamationIcon.js","services/fraudDetectionService.ts","components/FraudDetectionDashboard.tsx","components/SecurityErrorBoundary.tsx","pages/Security.tsx","../node_modules/@heroicons/react/24/outline/esm/KeyIcon.js","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/PlusIcon.js"],"sourcesContent":["import * as React from \"react\";\nfunction ExclamationCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3.75m9-.75a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 3.75h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ExclamationCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9 12.75 11.25 15 15 9.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction Cog6ToothIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M9.594 3.94c.09-.542.56-.94 1.11-.94h2.593c.55 0 1.02.398 1.11.94l.213 1.281c.063.374.313.686.645.87.074.04.147.083.22.127.325.196.72.257 1.075.124l1.217-.456a1.125 1.125 0 0 1 1.37.49l1.296 2.247a1.125 1.125 0 0 1-.26 1.431l-1.003.827c-.293.241-.438.613-.43.992a7.723 7.723 0 0 1 0 .255c-.008.378.137.75.43.991l1.004.827c.424.35.534.955.26 1.43l-1.298 2.247a1.125 1.125 0 0 1-1.369.491l-1.217-.456c-.355-.133-.75-.072-1.076.124a6.47 6.47 0 0 1-.22.128c-.331.183-.581.495-.644.869l-.213 1.281c-.09.543-.56.94-1.11.94h-2.594c-.55 0-1.019-.398-1.11-.94l-.213-1.281c-.062-.374-.312-.686-.644-.87a6.52 6.52 0 0 1-.22-.127c-.325-.196-.72-.257-1.076-.124l-1.217.456a1.125 1.125 0 0 1-1.369-.49l-1.297-2.247a1.125 1.125 0 0 1 .26-1.431l1.004-.827c.292-.24.437-.613.43-.991a6.932 6.932 0 0 1 0-.255c.007-.38-.138-.751-.43-.992l-1.004-.827a1.125 1.125 0 0 1-.26-1.43l1.297-2.247a1.125 1.125 0 0 1 1.37-.491l1.216.456c.356.133.751.072 1.076-.124.072-.044.146-.086.22-.128.332-.183.582-.495.644-.869l.214-1.28Z\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15 12a3 3 0 1 1-6 0 3 3 0 0 1 6 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(Cog6ToothIcon);\nexport default ForwardRef;","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { SecurityAlert } from '../../types/Security';\r\nimport { \r\n  ExclamationTriangleIcon,\r\n  ExclamationCircleIcon,\r\n  InformationCircleIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\ninterface SecurityAlertCardProps {\r\n  alert: SecurityAlert;\r\n  onMarkAsRead?: (alertId: string) => void;\r\n  onResolve?: (alertId: string) => void;\r\n}\r\n\r\nconst SecurityAlertCard: React.FC<SecurityAlertCardProps> = ({ \r\n  alert, \r\n  onMarkAsRead, \r\n  onResolve \r\n}) => {\r\n  const getAlertIcon = () => {\r\n    switch (alert.severity) {\r\n      case 'critical':\r\n        return <XCircleIcon className=\"w-6 h-6 text-red-500\" />;\r\n      case 'high':\r\n        return <ExclamationCircleIcon className=\"w-6 h-6 text-red-500\" />;\r\n      case 'medium':\r\n        return <ExclamationTriangleIcon className=\"w-6 h-6 text-yellow-500\" />;\r\n      case 'low':\r\n        return <InformationCircleIcon className=\"w-6 h-6 text-blue-500\" />;\r\n      default:\r\n        return <InformationCircleIcon className=\"w-6 h-6 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getAlertColor = () => {\r\n    switch (alert.severity) {\r\n      case 'critical':\r\n        return 'border-red-200 dark:border-red-800 bg-red-50 dark:bg-red-900/20';\r\n      case 'high':\r\n        return 'border-red-200 dark:border-red-800 bg-red-50 dark:bg-red-900/20';\r\n      case 'medium':\r\n        return 'border-yellow-200 dark:border-yellow-800 bg-yellow-50 dark:bg-yellow-900/20';\r\n      case 'low':\r\n        return 'border-blue-200 dark:border-blue-800 bg-blue-50 dark:bg-blue-900/20';\r\n      default:\r\n        return 'border-gray-200 dark:border-gray-700 bg-white dark:bg-gray-800';\r\n    }\r\n  };\r\n\r\n  const getTextColor = () => {\r\n    switch (alert.severity) {\r\n      case 'critical':\r\n        return 'text-red-800 dark:text-red-200';\r\n      case 'high':\r\n        return 'text-red-800 dark:text-red-200';\r\n      case 'medium':\r\n        return 'text-yellow-800 dark:text-yellow-200';\r\n      case 'low':\r\n        return 'text-blue-800 dark:text-blue-200';\r\n      default:\r\n        return 'text-gray-900 dark:text-white';\r\n    }\r\n  };\r\n\r\n  const formatDate = (dateString: string) => {\r\n    const date = new Date(dateString);\r\n    const now = new Date();\r\n    const diffTime = now.getTime() - date.getTime();\r\n    const diffHours = Math.floor(diffTime / (1000 * 60 * 60));\r\n    const diffDays = Math.floor(diffTime / (1000 * 60 * 60 * 24));\r\n\r\n    if (diffHours < 1) return 'Just now';\r\n    if (diffHours < 24) return `${diffHours}h ago`;\r\n    if (diffDays < 7) return `${diffDays}d ago`;\r\n    return date.toLocaleDateString('en-US', { \r\n      month: 'short', \r\n      day: 'numeric' \r\n    });\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className={`rounded-lg p-4 border ${getAlertColor()} ${\r\n        alert.isRead ? 'opacity-60' : ''\r\n      }`}\r\n    >\r\n      <div className=\"flex items-start space-x-3\">\r\n        <div className=\"flex-shrink-0\">\r\n          {getAlertIcon()}\r\n        </div>\r\n        \r\n        <div className=\"flex-1 min-w-0\">\r\n          <div className=\"flex items-center justify-between\">\r\n            <h4 className={`text-sm font-medium ${getTextColor()}`}>\r\n              {alert.title}\r\n            </h4>\r\n            <span className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n              {formatDate(alert.createdAt)}\r\n            </span>\r\n          </div>\r\n          \r\n          <p className={`mt-1 text-sm ${getTextColor()}`}>\r\n            {alert.message}\r\n          </p>\r\n          \r\n          <div className=\"mt-2 flex items-center space-x-2\">\r\n            <span className={`inline-flex items-center px-2 py-1 rounded-full text-xs font-medium ${\r\n              alert.severity === 'critical' ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200' :\r\n              alert.severity === 'high' ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200' :\r\n              alert.severity === 'medium' ? 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200' :\r\n              'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200'\r\n            }`}>\r\n              {alert.severity.toUpperCase()}\r\n            </span>\r\n            \r\n            {alert.actionRequired && (\r\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 dark:bg-orange-900/30 text-orange-800 dark:text-orange-200\">\r\n                Action Required\r\n              </span>\r\n            )}\r\n            \r\n            {!alert.isRead && (\r\n              <span className=\"inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200\">\r\n                New\r\n              </span>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center space-x-1\">\r\n          {!alert.isRead && onMarkAsRead && (\r\n            <button\r\n              onClick={() => onMarkAsRead(alert.id)}\r\n              className=\"p-1 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n              title=\"Mark as read\"\r\n            >\r\n              <CheckCircleIcon className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n          {!alert.isResolved && onResolve && (\r\n            <button\r\n              onClick={() => onResolve(alert.id)}\r\n              className=\"p-1 text-gray-400 hover:text-green-600 dark:hover:text-green-400 transition-colors\"\r\n              title=\"Resolve alert\"\r\n            >\r\n              <CheckCircleIcon className=\"w-4 h-4\" />\r\n            </button>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default SecurityAlertCard;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { TwoFactorMethod } from '../../types/Security';\r\nimport { \r\n  DevicePhoneMobileIcon,\r\n  EnvelopeIcon,\r\n  KeyIcon,\r\n  QrCodeIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\ninterface TwoFactorSetupProps {\r\n  method: TwoFactorMethod;\r\n  onVerify: (code: string) => Promise<boolean>;\r\n  onCancel: () => void;\r\n}\r\n\r\nconst TwoFactorSetup: React.FC<TwoFactorSetupProps> = ({ method, onVerify, onCancel }) => {\r\n  const [code, setCode] = useState('');\r\n  const [isVerifying, setIsVerifying] = useState(false);\r\n  const [isVerified, setIsVerified] = useState(false);\r\n  const [error, setError] = useState('');\r\n\r\n  const getMethodIcon = () => {\r\n    switch (method.type) {\r\n      case 'sms':\r\n        return <DevicePhoneMobileIcon className=\"w-6 h-6 text-blue-500\" />;\r\n      case 'email':\r\n        return <EnvelopeIcon className=\"w-6 h-6 text-green-500\" />;\r\n      case 'authenticator':\r\n        return <KeyIcon className=\"w-6 h-6 text-purple-500\" />;\r\n      default:\r\n        return <KeyIcon className=\"w-6 h-6 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getMethodTitle = () => {\r\n    switch (method.type) {\r\n      case 'sms':\r\n        return 'SMS Verification';\r\n      case 'email':\r\n        return 'Email Verification';\r\n      case 'authenticator':\r\n        return 'Authenticator App';\r\n      default:\r\n        return 'Two-Factor Authentication';\r\n    }\r\n  };\r\n\r\n  const getMethodDescription = () => {\r\n    switch (method.type) {\r\n      case 'sms':\r\n        return `We'll send a verification code to ${method.value}`;\r\n      case 'email':\r\n        return `We'll send a verification code to ${method.value}`;\r\n      case 'authenticator':\r\n        return 'Use your authenticator app to scan the QR code and get a verification code';\r\n      default:\r\n        return 'Enter the verification code to complete setup';\r\n    }\r\n  };\r\n\r\n  const handleVerify = async () => {\r\n    if (!code.trim()) {\r\n      setError('Please enter a verification code');\r\n      return;\r\n    }\r\n\r\n    setIsVerifying(true);\r\n    setError('');\r\n\r\n    try {\r\n      const success = await onVerify(code);\r\n      if (success) {\r\n        setIsVerified(true);\r\n      } else {\r\n        setError('Invalid verification code. Please try again.');\r\n      }\r\n    } catch (err) {\r\n      setError('Verification failed. Please try again.');\r\n    } finally {\r\n      setIsVerifying(false);\r\n    }\r\n  };\r\n\r\n  if (isVerified) {\r\n    return (\r\n      <motion.div\r\n        initial={{ opacity: 0, scale: 0.95 }}\r\n        animate={{ opacity: 1, scale: 1 }}\r\n        className=\"text-center py-8\"\r\n      >\r\n        <CheckCircleIcon className=\"w-16 h-16 text-green-500 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n          Two-Factor Authentication Enabled\r\n        </h3>\r\n        <p className=\"text-gray-600 dark:text-gray-400 mb-6\">\r\n          Your {getMethodTitle().toLowerCase()} has been successfully set up and verified.\r\n        </p>\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"bg-green-500 hover:bg-green-600 text-white px-6 py-2 rounded-lg transition-colors\"\r\n        >\r\n          Continue\r\n        </button>\r\n      </motion.div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <motion.div\r\n      initial={{ opacity: 0, y: 20 }}\r\n      animate={{ opacity: 1, y: 0 }}\r\n      className=\"space-y-6\"\r\n    >\r\n      <div className=\"text-center\">\r\n        <div className=\"flex justify-center mb-4\">\r\n          {getMethodIcon()}\r\n        </div>\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n          {getMethodTitle()}\r\n        </h3>\r\n        <p className=\"text-gray-600 dark:text-gray-400\">\r\n          {getMethodDescription()}\r\n        </p>\r\n      </div>\r\n\r\n      {method.type === 'authenticator' && (\r\n        <div className=\"bg-gray-50 dark:bg-gray-800 rounded-lg p-4 text-center\">\r\n          <QrCodeIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-2\" />\r\n          <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n            Scan this QR code with your authenticator app\r\n          </p>\r\n          <div className=\"bg-white dark:bg-gray-700 p-4 rounded-lg inline-block\">\r\n            {/* In a real app, this would be a QR code */}\r\n            <div className=\"w-32 h-32 bg-gray-200 dark:bg-gray-600 rounded flex items-center justify-center\">\r\n              <QrCodeIcon className=\"w-16 h-16 text-gray-400\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <div>\r\n        <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n          Verification Code\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          value={code}\r\n          onChange={(e) => setCode(e.target.value)}\r\n          placeholder=\"Enter 6-digit code\"\r\n          className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n          maxLength={6}\r\n        />\r\n        {error && (\r\n          <p className=\"mt-2 text-sm text-red-600 dark:text-red-400 flex items-center\">\r\n            <XCircleIcon className=\"w-4 h-4 mr-1\" />\r\n            {error}\r\n          </p>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"flex space-x-3\">\r\n        <button\r\n          onClick={onCancel}\r\n          className=\"flex-1 px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-200 dark:bg-gray-600 rounded-lg hover:bg-gray-300 dark:hover:bg-gray-500 transition-colors\"\r\n        >\r\n          Cancel\r\n        </button>\r\n        <button\r\n          onClick={handleVerify}\r\n          disabled={isVerifying || !code.trim()}\r\n          className=\"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed text-white rounded-lg transition-colors\"\r\n        >\r\n          {isVerifying ? 'Verifying...' : 'Verify'}\r\n        </button>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default TwoFactorSetup;\r\n","import React from 'react';\r\nimport { motion } from 'framer-motion';\r\n\r\ninterface PasswordStrengthMeterProps {\r\n  password: string;\r\n  policy: {\r\n    minLength: number;\r\n    requireUppercase: boolean;\r\n    requireLowercase: boolean;\r\n    requireNumbers: boolean;\r\n    requireSpecialChars: boolean;\r\n  };\r\n}\r\n\r\nconst PasswordStrengthMeter: React.FC<PasswordStrengthMeterProps> = ({ password, policy }) => {\r\n  const getPasswordStrength = () => {\r\n    let score = 0;\r\n    const checks = [];\r\n\r\n    // Length check\r\n    if (password.length >= policy.minLength) {\r\n      score += 20;\r\n      checks.push({ text: `At least ${policy.minLength} characters`, passed: true });\r\n    } else {\r\n      checks.push({ text: `At least ${policy.minLength} characters`, passed: false });\r\n    }\r\n\r\n    // Uppercase check\r\n    if (policy.requireUppercase) {\r\n      if (/[A-Z]/.test(password)) {\r\n        score += 20;\r\n        checks.push({ text: 'Uppercase letter', passed: true });\r\n      } else {\r\n        checks.push({ text: 'Uppercase letter', passed: false });\r\n      }\r\n    }\r\n\r\n    // Lowercase check\r\n    if (policy.requireLowercase) {\r\n      if (/[a-z]/.test(password)) {\r\n        score += 20;\r\n        checks.push({ text: 'Lowercase letter', passed: true });\r\n      } else {\r\n        checks.push({ text: 'Lowercase letter', passed: false });\r\n      }\r\n    }\r\n\r\n    // Numbers check\r\n    if (policy.requireNumbers) {\r\n      if (/\\d/.test(password)) {\r\n        score += 20;\r\n        checks.push({ text: 'Number', passed: true });\r\n      } else {\r\n        checks.push({ text: 'Number', passed: false });\r\n      }\r\n    }\r\n\r\n    // Special characters check\r\n    if (policy.requireSpecialChars) {\r\n      if (/[!@#$%^&*(),.?\":{}|<>]/.test(password)) {\r\n        score += 20;\r\n        checks.push({ text: 'Special character', passed: true });\r\n      } else {\r\n        checks.push({ text: 'Special character', passed: false });\r\n      }\r\n    }\r\n\r\n    return { score, checks };\r\n  };\r\n\r\n  const { score, checks } = getPasswordStrength();\r\n\r\n  const getStrengthLevel = () => {\r\n    if (score < 40) return { level: 'Weak', color: 'bg-red-500' };\r\n    if (score < 70) return { level: 'Fair', color: 'bg-yellow-500' };\r\n    if (score < 90) return { level: 'Good', color: 'bg-blue-500' };\r\n    return { level: 'Strong', color: 'bg-green-500' };\r\n  };\r\n\r\n  const { level, color } = getStrengthLevel();\r\n\r\n  if (!password) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-3\">\r\n      {/* Strength Bar */}\r\n      <div>\r\n        <div className=\"flex items-center justify-between mb-2\">\r\n          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n            Password Strength\r\n          </span>\r\n          <span className={`text-sm font-medium ${\r\n            score < 40 ? 'text-red-600 dark:text-red-400' :\r\n            score < 70 ? 'text-yellow-600 dark:text-yellow-400' :\r\n            score < 90 ? 'text-blue-600 dark:text-blue-400' :\r\n            'text-green-600 dark:text-green-400'\r\n          }`}>\r\n            {level}\r\n          </span>\r\n        </div>\r\n        <div className=\"w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2\">\r\n          <motion.div\r\n            className={`h-2 rounded-full ${color}`}\r\n            initial={{ width: 0 }}\r\n            animate={{ width: `${score}%` }}\r\n            transition={{ duration: 0.3 }}\r\n          />\r\n        </div>\r\n      </div>\r\n\r\n      {/* Requirements Checklist */}\r\n      <div className=\"space-y-2\">\r\n        {checks.map((check, index) => (\r\n          <motion.div\r\n            key={index}\r\n            initial={{ opacity: 0, x: -10 }}\r\n            animate={{ opacity: 1, x: 0 }}\r\n            transition={{ delay: index * 0.1 }}\r\n            className=\"flex items-center space-x-2\"\r\n          >\r\n            <div className={`w-4 h-4 rounded-full flex items-center justify-center ${\r\n              check.passed \r\n                ? 'bg-green-100 dark:bg-green-900/30' \r\n                : 'bg-gray-100 dark:bg-gray-700'\r\n            }`}>\r\n              {check.passed ? (\r\n                <svg className=\"w-3 h-3 text-green-600 dark:text-green-400\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\r\n                  <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\r\n                </svg>\r\n              ) : (\r\n                <div className=\"w-2 h-2 bg-gray-400 dark:bg-gray-500 rounded-full\" />\r\n              )}\r\n            </div>\r\n            <span className={`text-sm ${\r\n              check.passed \r\n                ? 'text-green-700 dark:text-green-300' \r\n                : 'text-gray-600 dark:text-gray-400'\r\n            }`}>\r\n              {check.text}\r\n            </span>\r\n          </motion.div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PasswordStrengthMeter;\r\n","import * as React from \"react\";\nfunction ShieldExclamationIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 9v3.75m0-10.036A11.959 11.959 0 0 1 3.598 6 11.99 11.99 0 0 0 3 9.75c0 5.592 3.824 10.29 9 11.622 5.176-1.332 9-6.03 9-11.622 0-1.31-.21-2.57-.598-3.75h-.152c-3.196 0-6.1-1.25-8.25-3.286Zm0 13.036h.008v.008H12v-.008Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ShieldExclamationIcon);\nexport default ForwardRef;","// Fraud Detection Service\r\n// This service provides ML-powered fraud detection and risk assessment\r\n\r\nexport interface FraudRisk {\r\n  level: 'low' | 'medium' | 'high' | 'critical';\r\n  score: number; // 0-100\r\n  factors: string[];\r\n  confidence: number; // 0-1\r\n}\r\n\r\nexport interface FraudAlert {\r\n  id: string;\r\n  type: 'suspicious_transaction' | 'unusual_pattern' | 'location_anomaly' | 'device_anomaly' | 'velocity_anomaly';\r\n  severity: 'low' | 'medium' | 'high' | 'critical';\r\n  title: string;\r\n  description: string;\r\n  timestamp: Date;\r\n  transactionId?: string;\r\n  riskScore: number;\r\n  status: 'active' | 'investigating' | 'resolved' | 'false_positive';\r\n  recommendedAction: string;\r\n  autoResolved: boolean;\r\n}\r\n\r\nexport interface TransactionRisk {\r\n  transactionId: string;\r\n  riskScore: number;\r\n  riskLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  factors: string[];\r\n  confidence: number;\r\n  recommendedAction: 'approve' | 'review' | 'block' | 'require_verification';\r\n  verificationRequired: boolean;\r\n}\r\n\r\nexport interface FraudPattern {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  pattern: string;\r\n  riskLevel: 'low' | 'medium' | 'high' | 'critical';\r\n  frequency: number;\r\n  lastDetected: Date;\r\n  falsePositiveRate: number;\r\n}\r\n\r\nexport interface DeviceFingerprint {\r\n  id: string;\r\n  deviceId: string;\r\n  browser: string;\r\n  os: string;\r\n  location: string;\r\n  ipAddress: string;\r\n  userAgent: string;\r\n  screenResolution: string;\r\n  timezone: string;\r\n  language: string;\r\n  plugins: string[];\r\n  isTrusted: boolean;\r\n  lastSeen: Date;\r\n  riskScore: number;\r\n}\r\n\r\nexport interface LocationData {\r\n  country: string;\r\n  region: string;\r\n  city: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  timezone: string;\r\n  isp: string;\r\n  isVpn: boolean;\r\n  isProxy: boolean;\r\n  riskScore: number;\r\n}\r\n\r\nclass FraudDetectionService {\r\n  private alerts: FraudAlert[] = [];\r\n  private patterns: FraudPattern[] = [];\r\n  private deviceFingerprints: Map<string, DeviceFingerprint> = new Map();\r\n  private locationData: Map<string, LocationData> = new Map();\r\n\r\n  constructor() {\r\n    this.initializePatterns();\r\n  }\r\n\r\n  private initializePatterns() {\r\n    this.patterns = [\r\n      {\r\n        id: 'high-amount',\r\n        name: 'High Amount Transaction',\r\n        description: 'Transaction amount significantly higher than user average',\r\n        pattern: 'amount > user_average * 3',\r\n        riskLevel: 'medium',\r\n        frequency: 0,\r\n        lastDetected: new Date(),\r\n        falsePositiveRate: 0.15\r\n      },\r\n      {\r\n        id: 'unusual-time',\r\n        name: 'Unusual Time Transaction',\r\n        description: 'Transaction made at unusual hours (2-6 AM)',\r\n        pattern: 'hour < 6 OR hour > 22',\r\n        riskLevel: 'low',\r\n        frequency: 0,\r\n        lastDetected: new Date(),\r\n        falsePositiveRate: 0.25\r\n      },\r\n      {\r\n        id: 'rapid-transactions',\r\n        name: 'Rapid Successive Transactions',\r\n        description: 'Multiple transactions within short time period',\r\n        pattern: 'transactions_count > 5 AND time_window < 300',\r\n        riskLevel: 'high',\r\n        frequency: 0,\r\n        lastDetected: new Date(),\r\n        falsePositiveRate: 0.10\r\n      },\r\n      {\r\n        id: 'new-device',\r\n        name: 'New Device Transaction',\r\n        description: 'Transaction from previously unseen device',\r\n        pattern: 'device_id NOT IN known_devices',\r\n        riskLevel: 'medium',\r\n        frequency: 0,\r\n        lastDetected: new Date(),\r\n        falsePositiveRate: 0.20\r\n      },\r\n      {\r\n        id: 'location-anomaly',\r\n        name: 'Location Anomaly',\r\n        description: 'Transaction from unusual geographic location',\r\n        pattern: 'location_distance > 1000km AND time_since_last < 24h',\r\n        riskLevel: 'high',\r\n        frequency: 0,\r\n        lastDetected: new Date(),\r\n        falsePositiveRate: 0.05\r\n      },\r\n      {\r\n        id: 'velocity-anomaly',\r\n        name: 'Velocity Anomaly',\r\n        description: 'Transaction velocity exceeds normal patterns',\r\n        pattern: 'transaction_velocity > user_velocity * 2',\r\n        riskLevel: 'medium',\r\n        frequency: 0,\r\n        lastDetected: new Date(),\r\n        falsePositiveRate: 0.15\r\n      }\r\n    ];\r\n  }\r\n\r\n  // Analyze transaction for fraud risk\r\n  async analyzeTransaction(transaction: any, userProfile: any): Promise<TransactionRisk> {\r\n    const riskFactors: string[] = [];\r\n    let riskScore = 0;\r\n    let confidence = 0.8;\r\n\r\n    // Amount-based risk\r\n    if (transaction.amount > userProfile.averageTransaction * 3) {\r\n      riskFactors.push('High amount transaction');\r\n      riskScore += 30;\r\n    }\r\n\r\n    // Time-based risk\r\n    const hour = new Date(transaction.timestamp).getHours();\r\n    if (hour < 6 || hour > 22) {\r\n      riskFactors.push('Unusual time transaction');\r\n      riskScore += 15;\r\n    }\r\n\r\n    // Velocity-based risk\r\n    const recentTransactions = await this.getRecentTransactions(transaction.userId, 24);\r\n    if (recentTransactions.length > 5) {\r\n      riskFactors.push('High transaction velocity');\r\n      riskScore += 25;\r\n    }\r\n\r\n    // Device-based risk\r\n    const deviceRisk = await this.analyzeDeviceRisk(transaction.deviceId, transaction.userId);\r\n    if (deviceRisk.score > 50) {\r\n      riskFactors.push('Suspicious device');\r\n      riskScore += deviceRisk.score * 0.3;\r\n    }\r\n\r\n    // Location-based risk\r\n    const locationRisk = await this.analyzeLocationRisk(transaction.location, transaction.userId);\r\n    if (locationRisk.score > 50) {\r\n      riskFactors.push('Suspicious location');\r\n      riskScore += locationRisk.score * 0.2;\r\n    }\r\n\r\n    // Pattern-based risk\r\n    const patternRisk = await this.analyzePatterns(transaction, userProfile);\r\n    riskScore += patternRisk.score;\r\n    riskFactors.push(...patternRisk.factors);\r\n\r\n    // Normalize risk score\r\n    riskScore = Math.min(100, Math.max(0, riskScore));\r\n\r\n    // Determine risk level\r\n    let riskLevel: 'low' | 'medium' | 'high' | 'critical';\r\n    if (riskScore < 25) riskLevel = 'low';\r\n    else if (riskScore < 50) riskLevel = 'medium';\r\n    else if (riskScore < 75) riskLevel = 'high';\r\n    else riskLevel = 'critical';\r\n\r\n    // Determine recommended action\r\n    let recommendedAction: 'approve' | 'review' | 'block' | 'require_verification';\r\n    if (riskLevel === 'low') recommendedAction = 'approve';\r\n    else if (riskLevel === 'medium') recommendedAction = 'review';\r\n    else if (riskLevel === 'high') recommendedAction = 'require_verification';\r\n    else recommendedAction = 'block';\r\n\r\n    return {\r\n      transactionId: transaction.id,\r\n      riskScore,\r\n      riskLevel,\r\n      factors: riskFactors,\r\n      confidence,\r\n      recommendedAction,\r\n      verificationRequired: riskLevel === 'high' || riskLevel === 'critical'\r\n    };\r\n  }\r\n\r\n  // Analyze device risk\r\n  private async analyzeDeviceRisk(deviceId: string, userId: string): Promise<{ score: number; factors: string[] }> {\r\n    const factors: string[] = [];\r\n    let score = 0;\r\n\r\n    // Check if device is known\r\n    const device = this.deviceFingerprints.get(deviceId);\r\n    if (!device) {\r\n      factors.push('Unknown device');\r\n      score += 40;\r\n    } else {\r\n      // Check device trust level\r\n      if (!device.isTrusted) {\r\n        factors.push('Untrusted device');\r\n        score += 20;\r\n      }\r\n\r\n      // Check if device is new\r\n      const daysSinceLastSeen = (Date.now() - device.lastSeen.getTime()) / (1000 * 60 * 60 * 24);\r\n      if (daysSinceLastSeen > 30) {\r\n        factors.push('Device not seen recently');\r\n        score += 15;\r\n      }\r\n\r\n      // Check device risk score\r\n      if (device.riskScore > 50) {\r\n        factors.push('High-risk device');\r\n        score += device.riskScore * 0.3;\r\n      }\r\n    }\r\n\r\n    return { score, factors };\r\n  }\r\n\r\n  // Analyze location risk\r\n  private async analyzeLocationRisk(location: any, userId: string): Promise<{ score: number; factors: string[] }> {\r\n    const factors: string[] = [];\r\n    let score = 0;\r\n\r\n    // Check if location is known\r\n    const locationData = this.locationData.get(location.id);\r\n    if (!locationData) {\r\n      factors.push('Unknown location');\r\n      score += 30;\r\n    } else {\r\n      // Check for VPN/Proxy\r\n      if (locationData.isVpn || locationData.isProxy) {\r\n        factors.push('VPN/Proxy detected');\r\n        score += 25;\r\n      }\r\n\r\n      // Check location risk score\r\n      if (locationData.riskScore > 50) {\r\n        factors.push('High-risk location');\r\n        score += locationData.riskScore * 0.2;\r\n      }\r\n    }\r\n\r\n    // Check for location anomalies\r\n    const recentLocations = await this.getRecentLocations(userId, 7);\r\n    if (recentLocations.length > 0) {\r\n      const lastLocation = recentLocations[0];\r\n      const distance = this.calculateDistance(location, lastLocation);\r\n      const timeDiff = Date.now() - new Date(lastLocation.timestamp).getTime();\r\n      \r\n      // If location changed significantly in short time\r\n      if (distance > 1000 && timeDiff < 24 * 60 * 60 * 1000) {\r\n        factors.push('Rapid location change');\r\n        score += 35;\r\n      }\r\n    }\r\n\r\n    return { score, factors };\r\n  }\r\n\r\n  // Analyze patterns\r\n  private async analyzePatterns(transaction: any, userProfile: any): Promise<{ score: number; factors: string[] }> {\r\n    const factors: string[] = [];\r\n    let score = 0;\r\n\r\n    // Check against known fraud patterns\r\n    for (const pattern of this.patterns) {\r\n      if (this.matchesPattern(transaction, pattern)) {\r\n        factors.push(pattern.name);\r\n        score += this.getPatternRiskScore(pattern);\r\n        pattern.frequency++;\r\n        pattern.lastDetected = new Date();\r\n      }\r\n    }\r\n\r\n    return { score, factors };\r\n  }\r\n\r\n  // Check if transaction matches a pattern\r\n  private matchesPattern(transaction: any, pattern: FraudPattern): boolean {\r\n    switch (pattern.id) {\r\n      case 'high-amount':\r\n        return transaction.amount > transaction.userAverage * 3;\r\n      case 'unusual-time':\r\n        const hour = new Date(transaction.timestamp).getHours();\r\n        return hour < 6 || hour > 22;\r\n      case 'rapid-transactions':\r\n        return transaction.recentCount > 5;\r\n      case 'new-device':\r\n        return !transaction.deviceKnown;\r\n      case 'location-anomaly':\r\n        return transaction.locationDistance > 1000 && transaction.timeSinceLast < 24;\r\n      case 'velocity-anomaly':\r\n        return transaction.velocity > transaction.userVelocity * 2;\r\n      default:\r\n        return false;\r\n    }\r\n  }\r\n\r\n  // Get pattern risk score\r\n  private getPatternRiskScore(pattern: FraudPattern): number {\r\n    const baseScores = { low: 10, medium: 25, high: 50, critical: 75 };\r\n    return baseScores[pattern.riskLevel] * (1 - pattern.falsePositiveRate);\r\n  }\r\n\r\n  // Generate fraud alert\r\n  async generateAlert(transaction: any, risk: TransactionRisk): Promise<FraudAlert> {\r\n    const alert: FraudAlert = {\r\n      id: `alert_${Date.now()}_${Math.random().toString(36).substr(2, 9)}`,\r\n      type: this.getAlertType(risk.factors),\r\n      severity: risk.riskLevel,\r\n      title: this.getAlertTitle(risk.riskLevel, risk.factors),\r\n      description: this.getAlertDescription(risk.factors, transaction),\r\n      timestamp: new Date(),\r\n      transactionId: transaction.id,\r\n      riskScore: risk.riskScore,\r\n      status: 'active',\r\n      recommendedAction: this.getRecommendedAction(risk.riskLevel),\r\n      autoResolved: false\r\n    };\r\n\r\n    this.alerts.push(alert);\r\n    return alert;\r\n  }\r\n\r\n  // Get alert type based on risk factors\r\n  private getAlertType(factors: string[]): FraudAlert['type'] {\r\n    if (factors.some(f => f.includes('amount'))) return 'suspicious_transaction';\r\n    if (factors.some(f => f.includes('location'))) return 'location_anomaly';\r\n    if (factors.some(f => f.includes('device'))) return 'device_anomaly';\r\n    if (factors.some(f => f.includes('velocity'))) return 'velocity_anomaly';\r\n    return 'unusual_pattern';\r\n  }\r\n\r\n  // Get alert title\r\n  private getAlertTitle(riskLevel: string, factors: string[]): string {\r\n    const titles = {\r\n      low: 'Low Risk Transaction',\r\n      medium: 'Medium Risk Transaction',\r\n      high: 'High Risk Transaction',\r\n      critical: 'Critical Risk Transaction'\r\n    };\r\n    return titles[riskLevel as keyof typeof titles] || 'Transaction Alert';\r\n  }\r\n\r\n  // Get alert description\r\n  private getAlertDescription(factors: string[], transaction: any): string {\r\n    return `Transaction of $${transaction.amount} flagged due to: ${factors.join(', ')}`;\r\n  }\r\n\r\n  // Get recommended action\r\n  private getRecommendedAction(riskLevel: string): string {\r\n    const actions = {\r\n      low: 'Monitor transaction',\r\n      medium: 'Review transaction details',\r\n      high: 'Require additional verification',\r\n      critical: 'Block transaction immediately'\r\n    };\r\n    return actions[riskLevel as keyof typeof actions] || 'Review transaction';\r\n  }\r\n\r\n  // Get recent transactions\r\n  private async getRecentTransactions(userId: string, hours: number): Promise<any[]> {\r\n    // Simulate getting recent transactions\r\n    return [];\r\n  }\r\n\r\n  // Get recent locations\r\n  private async getRecentLocations(userId: string, days: number): Promise<any[]> {\r\n    // Simulate getting recent locations\r\n    return [];\r\n  }\r\n\r\n  // Calculate distance between two locations\r\n  private calculateDistance(loc1: any, loc2: any): number {\r\n    // Simplified distance calculation\r\n    return Math.random() * 2000; // Mock distance\r\n  }\r\n\r\n  // Get all fraud alerts\r\n  getAlerts(): FraudAlert[] {\r\n    return this.alerts;\r\n  }\r\n\r\n  // Get fraud patterns\r\n  getPatterns(): FraudPattern[] {\r\n    return this.patterns;\r\n  }\r\n\r\n  // Update alert status\r\n  updateAlertStatus(alertId: string, status: FraudAlert['status']): boolean {\r\n    const alert = this.alerts.find(a => a.id === alertId);\r\n    if (alert) {\r\n      alert.status = status;\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  // Clear resolved alerts\r\n  clearResolvedAlerts(): void {\r\n    this.alerts = this.alerts.filter(alert => alert.status !== 'resolved');\r\n  }\r\n}\r\n\r\n// Export singleton instance\r\nexport const fraudDetectionService = new FraudDetectionService();\r\nexport default fraudDetectionService;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  ShieldExclamationIcon, \r\n  ExclamationTriangleIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ClockIcon,\r\n  ChartBarIcon,\r\n  BellIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { fraudDetectionService, FraudAlert, FraudPattern } from '../services/fraudDetectionService';\r\n\r\ninterface FraudDetectionDashboardProps {\r\n  className?: string;\r\n}\r\n\r\nconst FraudDetectionDashboard: React.FC<FraudDetectionDashboardProps> = ({ className = '' }) => {\r\n  const [alerts, setAlerts] = useState<FraudAlert[]>([]);\r\n  const [patterns, setPatterns] = useState<FraudPattern[]>([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [selectedTab, setSelectedTab] = useState<'alerts' | 'patterns' | 'analytics'>('alerts');\r\n\r\n  useEffect(() => {\r\n    loadFraudData();\r\n  }, []);\r\n\r\n  const loadFraudData = () => {\r\n    try {\r\n      setIsLoading(true);\r\n      const fraudAlerts = fraudDetectionService.getAlerts();\r\n      const fraudPatterns = fraudDetectionService.getPatterns();\r\n      \r\n      setAlerts(fraudAlerts);\r\n      setPatterns(fraudPatterns);\r\n    } catch (error) {\r\n      console.error('Failed to load fraud data:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const getSeverityColor = (severity: string) => {\r\n    switch (severity) {\r\n      case 'critical':\r\n        return 'text-red-600 dark:text-red-400 bg-red-50 dark:bg-red-900/20 border-red-200 dark:border-red-800';\r\n      case 'high':\r\n        return 'text-orange-600 dark:text-orange-400 bg-orange-50 dark:bg-orange-900/20 border-orange-200 dark:border-orange-800';\r\n      case 'medium':\r\n        return 'text-yellow-600 dark:text-yellow-400 bg-yellow-50 dark:bg-yellow-900/20 border-yellow-200 dark:border-yellow-800';\r\n      case 'low':\r\n        return 'text-blue-600 dark:text-blue-400 bg-blue-50 dark:bg-blue-900/20 border-blue-200 dark:border-blue-800';\r\n      default:\r\n        return 'text-gray-600 dark:text-gray-400 bg-gray-50 dark:bg-gray-900/20 border-gray-200 dark:border-gray-800';\r\n    }\r\n  };\r\n\r\n  const getSeverityIcon = (severity: string) => {\r\n    switch (severity) {\r\n      case 'critical':\r\n        return <XCircleIcon className=\"w-5 h-5\" />;\r\n      case 'high':\r\n        return <ExclamationTriangleIcon className=\"w-5 h-5\" />;\r\n      case 'medium':\r\n        return <ShieldExclamationIcon className=\"w-5 h-5\" />;\r\n      case 'low':\r\n        return <CheckCircleIcon className=\"w-5 h-5\" />;\r\n      default:\r\n        return <BellIcon className=\"w-5 h-5\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'active':\r\n        return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200';\r\n      case 'investigating':\r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200';\r\n      case 'resolved':\r\n        return 'bg-green-100 text-green-800 dark:bg-green-900 dark:text-green-200';\r\n      case 'false_positive':\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  const getRiskLevelColor = (level: string) => {\r\n    switch (level) {\r\n      case 'critical':\r\n        return 'text-red-600 dark:text-red-400';\r\n      case 'high':\r\n        return 'text-orange-600 dark:text-orange-400';\r\n      case 'medium':\r\n        return 'text-yellow-600 dark:text-yellow-400';\r\n      case 'low':\r\n        return 'text-blue-600 dark:text-blue-400';\r\n      default:\r\n        return 'text-gray-600 dark:text-gray-400';\r\n    }\r\n  };\r\n\r\n  const updateAlertStatus = (alertId: string, status: FraudAlert['status']) => {\r\n    const success = fraudDetectionService.updateAlertStatus(alertId, status);\r\n    if (success) {\r\n      setAlerts(prev => prev.map(alert => \r\n        alert.id === alertId ? { ...alert, status } : alert\r\n      ));\r\n    }\r\n  };\r\n\r\n  const clearResolvedAlerts = () => {\r\n    fraudDetectionService.clearResolvedAlerts();\r\n    setAlerts(fraudDetectionService.getAlerts());\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className={`p-6 bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 ${className}`}>\r\n        <div className=\"flex items-center justify-center space-x-2\">\r\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-yellow-500\"></div>\r\n          <span className=\"text-gray-600 dark:text-gray-400\">Loading fraud detection data...</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`bg-white dark:bg-gray-800 rounded-lg border border-gray-200 dark:border-gray-700 ${className}`}>\r\n      {/* Header */}\r\n      <div className=\"p-6 border-b border-gray-200 dark:border-gray-700\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <div className=\"flex items-center space-x-2\">\r\n            <ShieldExclamationIcon className=\"w-6 h-6 text-red-500\" />\r\n            <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n              Fraud Detection Dashboard\r\n            </h2>\r\n          </div>\r\n          <div className=\"flex items-center space-x-2\">\r\n            <button\r\n              onClick={loadFraudData}\r\n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n              title=\"Refresh Data\"\r\n            >\r\n              <ClockIcon className=\"w-4 h-4\" />\r\n            </button>\r\n            <button\r\n              onClick={clearResolvedAlerts}\r\n              className=\"text-gray-400 hover:text-gray-600 dark:hover:text-gray-300\"\r\n              title=\"Clear Resolved Alerts\"\r\n            >\r\n              <XCircleIcon className=\"w-4 h-4\" />\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Summary Stats */}\r\n        <div className=\"grid grid-cols-4 gap-4 mt-4\">\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Alerts</p>\r\n            <p className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              {alerts.length}\r\n            </p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Active</p>\r\n            <p className=\"text-lg font-semibold text-red-600 dark:text-red-400\">\r\n              {alerts.filter(a => a.status === 'active').length}\r\n            </p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Investigating</p>\r\n            <p className=\"text-lg font-semibold text-yellow-600 dark:text-yellow-400\">\r\n              {alerts.filter(a => a.status === 'investigating').length}\r\n            </p>\r\n          </div>\r\n          <div className=\"text-center\">\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Resolved</p>\r\n            <p className=\"text-lg font-semibold text-green-600 dark:text-green-400\">\r\n              {alerts.filter(a => a.status === 'resolved').length}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"flex border-b border-gray-200 dark:border-gray-700\">\r\n        {[\r\n          { id: 'alerts', label: 'Alerts', count: alerts.length },\r\n          { id: 'patterns', label: 'Patterns', count: patterns.length },\r\n          { id: 'analytics', label: 'Analytics', count: 0 }\r\n        ].map((tab) => (\r\n          <button\r\n            key={tab.id}\r\n            onClick={() => setSelectedTab(tab.id as any)}\r\n            className={`flex-1 px-4 py-3 text-sm font-medium border-b-2 transition-colors ${\r\n              selectedTab === tab.id\r\n                ? 'border-red-500 text-red-600 dark:text-red-400'\r\n                : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'\r\n            }`}\r\n          >\r\n            {tab.label}\r\n            {tab.count > 0 && (\r\n              <span className=\"ml-2 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-400 px-2 py-1 rounded-full text-xs\">\r\n                {tab.count}\r\n              </span>\r\n            )}\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"p-6\">\r\n        {selectedTab === 'alerts' && (\r\n          <div className=\"space-y-4\">\r\n            {alerts.length === 0 ? (\r\n              <div className=\"text-center py-8\">\r\n                <CheckCircleIcon className=\"w-12 h-12 text-green-500 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                  No Fraud Alerts\r\n                </h3>\r\n                <p className=\"text-gray-600 dark:text-gray-400\">\r\n                  No suspicious activity detected. Your account is secure.\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              alerts.map((alert, index) => (\r\n                <motion.div\r\n                  key={alert.id}\r\n                  initial={{ opacity: 0, y: 20 }}\r\n                  animate={{ opacity: 1, y: 0 }}\r\n                  transition={{ delay: index * 0.1 }}\r\n                  className={`p-4 rounded-lg border ${getSeverityColor(alert.severity)}`}\r\n                >\r\n                  <div className=\"flex items-start justify-between\">\r\n                    <div className=\"flex items-start space-x-3\">\r\n                      <div className=\"flex-shrink-0\">\r\n                        {getSeverityIcon(alert.severity)}\r\n                      </div>\r\n                      <div className=\"flex-1\">\r\n                        <div className=\"flex items-center space-x-2 mb-2\">\r\n                          <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                            {alert.title}\r\n                          </h4>\r\n                          <span className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(alert.status)}`}>\r\n                            {alert.status}\r\n                          </span>\r\n                        </div>\r\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                          {alert.description}\r\n                        </p>\r\n                        <div className=\"flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400\">\r\n                          <span>Risk Score: {alert.riskScore}</span>\r\n                          <span>•</span>\r\n                          <span>{alert.timestamp.toLocaleString()}</span>\r\n                          {alert.transactionId && (\r\n                            <>\r\n                              <span>•</span>\r\n                              <span>Transaction: {alert.transactionId}</span>\r\n                            </>\r\n                          )}\r\n                        </div>\r\n                        <div className=\"mt-3\">\r\n                          <p className=\"text-sm font-medium text-gray-900 dark:text-white mb-1\">\r\n                            Recommended Action:\r\n                          </p>\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            {alert.recommendedAction}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex items-center space-x-2\">\r\n                      {alert.status === 'active' && (\r\n                        <button\r\n                          onClick={() => updateAlertStatus(alert.id, 'investigating')}\r\n                          className=\"text-xs bg-yellow-100 hover:bg-yellow-200 text-yellow-800 px-2 py-1 rounded transition-colors\"\r\n                        >\r\n                          Investigate\r\n                        </button>\r\n                      )}\r\n                      {alert.status === 'investigating' && (\r\n                        <button\r\n                          onClick={() => updateAlertStatus(alert.id, 'resolved')}\r\n                          className=\"text-xs bg-green-100 hover:bg-green-200 text-green-800 px-2 py-1 rounded transition-colors\"\r\n                        >\r\n                          Resolve\r\n                        </button>\r\n                      )}\r\n                      {alert.status === 'active' && (\r\n                        <button\r\n                          onClick={() => updateAlertStatus(alert.id, 'false_positive')}\r\n                          className=\"text-xs bg-gray-100 hover:bg-gray-200 text-gray-800 px-2 py-1 rounded transition-colors\"\r\n                        >\r\n                          False Positive\r\n                        </button>\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                </motion.div>\r\n              ))\r\n            )}\r\n          </div>\r\n        )}\r\n\r\n        {selectedTab === 'patterns' && (\r\n          <div className=\"space-y-4\">\r\n            {patterns.map((pattern, index) => (\r\n              <motion.div\r\n                key={pattern.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ delay: index * 0.1 }}\r\n                className=\"p-4 bg-gray-50 dark:bg-gray-700 rounded-lg\"\r\n              >\r\n                <div className=\"flex items-start justify-between\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-2 mb-2\">\r\n                      <h4 className=\"font-semibold text-gray-900 dark:text-white\">\r\n                        {pattern.name}\r\n                      </h4>\r\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${getRiskLevelColor(pattern.riskLevel)}`}>\r\n                        {pattern.riskLevel}\r\n                      </span>\r\n                    </div>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-2\">\r\n                      {pattern.description}\r\n                    </p>\r\n                    <div className=\"flex items-center space-x-4 text-xs text-gray-500 dark:text-gray-400\">\r\n                      <span>Pattern: {pattern.pattern}</span>\r\n                      <span>•</span>\r\n                      <span>Frequency: {pattern.frequency}</span>\r\n                      <span>•</span>\r\n                      <span>False Positive Rate: {(pattern.falsePositiveRate * 100).toFixed(1)}%</span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </motion.div>\r\n            ))}\r\n          </div>\r\n        )}\r\n\r\n        {selectedTab === 'analytics' && (\r\n          <div className=\"space-y-6\">\r\n            <div className=\"text-center py-8\">\r\n              <ChartBarIcon className=\"w-12 h-12 text-gray-400 mx-auto mb-4\" />\r\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                Analytics Coming Soon\r\n              </h3>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                Advanced fraud detection analytics will be available soon.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FraudDetectionDashboard;\r\n","import React, { Component, ErrorInfo, ReactNode } from 'react';\r\nimport { ExclamationTriangleIcon, ArrowPathIcon } from '@heroicons/react/24/outline';\r\n\r\ninterface Props {\r\n  children?: ReactNode;\r\n}\r\n\r\ninterface State {\r\n  hasError: boolean;\r\n  error: Error | null;\r\n  errorInfo: ErrorInfo | null;\r\n}\r\n\r\nclass SecurityErrorBoundary extends Component<Props, State> {\r\n  public state: State = {\r\n    hasError: false,\r\n    error: null,\r\n    errorInfo: null,\r\n  };\r\n\r\n  public static getDerivedStateFromError(_: Error): State {\r\n    // Update state so the next render will show the fallback UI.\r\n    return { hasError: true, error: _, errorInfo: null };\r\n  }\r\n\r\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\r\n    console.error(\"Security Error Boundary caught an error:\", error, errorInfo);\r\n    this.setState({ error, errorInfo });\r\n  }\r\n\r\n  public render() {\r\n    if (this.state.hasError) {\r\n      return (\r\n        <div className=\"flex flex-col items-center justify-center min-h-[60vh] bg-red-50 dark:bg-red-900 text-red-800 dark:text-red-200 p-6 rounded-lg shadow-lg\">\r\n          <ExclamationTriangleIcon className=\"w-20 h-20 mb-6 text-red-600 dark:text-red-400\" />\r\n          <h1 className=\"text-3xl font-bold mb-4\">Security Module Error</h1>\r\n          <p className=\"text-lg text-center mb-6\">\r\n            There was an error loading the security features. This might be due to a configuration issue.\r\n          </p>\r\n          <button\r\n            onClick={() => window.location.reload()}\r\n            className=\"flex items-center px-6 py-3 bg-red-600 hover:bg-red-700 text-white font-semibold rounded-lg shadow-md transition-colors duration-200\"\r\n          >\r\n            <ArrowPathIcon className=\"w-5 h-5 mr-2\" />\r\n            Refresh Page\r\n          </button>\r\n          {process.env.NODE_ENV === 'development' && this.state.error && (\r\n            <details className=\"mt-8 p-4 bg-red-100 dark:bg-red-800 rounded-md text-sm text-left w-full max-w-md\">\r\n              <summary className=\"font-semibold cursor-pointer\">Error Details</summary>\r\n              <pre className=\"mt-2 whitespace-pre-wrap break-words\">\r\n                {this.state.error.toString()}\r\n                <br />\r\n                {this.state.errorInfo?.componentStack}\r\n              </pre>\r\n            </details>\r\n          )}\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default SecurityErrorBoundary;\r\n","import React, { useState } from 'react';\nimport { motion } from 'framer-motion';\nimport { useAuth } from '../contexts/AuthContext';\nimport { useSecurity } from '../contexts/SecurityContext';\nimport {\n  ShieldCheckIcon,\n  KeyIcon,\n  DevicePhoneMobileIcon,\n  ComputerDesktopIcon,\n  ExclamationTriangleIcon,\n  ChartBarIcon,\n  Cog6ToothIcon,\n  PlusIcon\n} from '@heroicons/react/24/outline';\nimport SecurityAlertCard from '../components/security/SecurityAlertCard';\nimport TwoFactorSetup from '../components/security/TwoFactorSetup';\nimport PasswordStrengthMeter from '../components/security/PasswordStrengthMeter';\nimport FraudDetectionDashboard from '../components/FraudDetectionDashboard';\nimport SecurityErrorBoundary from '../components/SecurityErrorBoundary';\nimport { TwoFactorMethod } from '../types/Security';\n\nconst Security: React.FC = () => {\n  const { user } = useAuth();\n  \n  // Call hooks unconditionally at the top level\n  const [activeTab, setActiveTab] = useState<'overview' | '2fa' | 'devices' | 'alerts' | 'events' | 'settings'>('overview');\n  const [showTwoFactorSetup, setShowTwoFactorSetup] = useState(false);\n  const [selectedMethod, setSelectedMethod] = useState<TwoFactorMethod | null>(null);\n  const [newPassword, setNewPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  \n  // Call useSecurity hook unconditionally\n  const securityContext = useSecurity();\n\n  const {\n    securitySettings = null,\n    twoFactorMethods = [],\n    securityEvents = [],\n    trustedDevices = [],\n    securityAlerts = [],\n    passwordPolicy = null,\n    loading = false,\n    updateSettings,\n    addTwoFactorMethod,\n    verifyTwoFactorCode,\n    markAlertAsRead,\n    resolveAlert\n  } = securityContext;\n\n  if (!user) {\n    return <div className=\"text-gray-900 dark:text-white\">Please log in to view security settings.</div>;\n  }\n\n  if (loading) {\n    return (\n      <div className=\"flex items-center justify-center min-h-96\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-yellow-500 mx-auto mb-4\"></div>\n          <p className=\"text-gray-600 dark:text-gray-400\">Loading security settings...</p>\n        </div>\n      </div>\n    );\n  }\n\n  const unreadAlerts = securityAlerts.filter(alert => !alert.isRead).length;\n\n  return (\n    <SecurityErrorBoundary>\n      <div className=\"max-w-6xl mx-auto w-full px-4\">\n      {/* Header */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        className=\"mb-8\"\n      >\n        <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\n          🛡️ Security Center\n        </h1>\n        <p className=\"text-gray-600 dark:text-gray-300\">\n          Manage your account security and privacy settings\n        </p>\n      </motion.div>\n\n      {/* Quick Stats */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.1 }}\n        className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-4 mb-8\"\n      >\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Security Score</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {securitySettings ? (securitySettings.twoFactorEnabled ? 85 : 60) : 0}\n              </p>\n            </div>\n            <ShieldCheckIcon className=\"w-8 h-8 text-green-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">2FA Methods</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {twoFactorMethods.length}\n              </p>\n            </div>\n            <KeyIcon className=\"w-8 h-8 text-blue-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Trusted Devices</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {trustedDevices.length}\n              </p>\n            </div>\n            <ComputerDesktopIcon className=\"w-8 h-8 text-purple-500\" />\n          </div>\n        </div>\n\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <p className=\"text-sm text-gray-500 dark:text-gray-400\">Active Alerts</p>\n              <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\n                {unreadAlerts}\n              </p>\n            </div>\n            <ExclamationTriangleIcon className=\"w-8 h-8 text-yellow-500\" />\n          </div>\n        </div>\n      </motion.div>\n\n      {/* Tabs */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.2 }}\n        className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg mb-8\"\n      >\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\n          <nav className=\"flex space-x-8 px-6\">\n            {[\n              { id: 'overview', label: 'Overview', icon: ShieldCheckIcon },\n              { id: '2fa', label: '2FA', icon: KeyIcon },\n              { id: 'devices', label: 'Devices', icon: ComputerDesktopIcon },\n              { id: 'alerts', label: 'Alerts', icon: ExclamationTriangleIcon },\n              { id: 'events', label: 'Events', icon: ChartBarIcon },\n              { id: 'settings', label: 'Settings', icon: Cog6ToothIcon }\n            ].map((tab) => (\n              <button\n                key={tab.id}\n                onClick={() => setActiveTab(tab.id as any)}\n                className={`flex items-center space-x-2 py-4 px-1 border-b-2 font-medium text-sm transition-colors ${\n                  activeTab === tab.id\n                    ? 'border-yellow-500 text-yellow-600 dark:text-yellow-400'\n                    : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300'\n                }`}\n              >\n                <tab.icon className=\"w-4 h-4\" />\n                <span>{tab.label}</span>\n                {tab.id === 'alerts' && unreadAlerts > 0 && (\n                  <span className=\"bg-red-500 text-white text-xs rounded-full px-2 py-1\">\n                    {unreadAlerts}\n                  </span>\n                )}\n              </button>\n            ))}\n          </nav>\n        </div>\n\n        <div className=\"p-6\">\n          {/* Overview Tab */}\n          {activeTab === 'overview' && (\n            <div className=\"space-y-6\">\n              {/* Security Status */}\n              <div>\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                  Security Status\n                </h3>\n                <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                        Two-Factor Authentication\n                      </span>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        securitySettings?.twoFactorEnabled \n                          ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200'\n                          : 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200'\n                      }`}>\n                        {securitySettings?.twoFactorEnabled ? 'Enabled' : 'Disabled'}\n                      </span>\n                    </div>\n                  </div>\n                  \n                  <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\n                        Biometric Authentication\n                      </span>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        securitySettings?.biometricEnabled \n                          ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200'\n                          : 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200'\n                      }`}>\n                        {securitySettings?.biometricEnabled ? 'Enabled' : 'Disabled'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              </div>\n\n              {/* Recent Alerts */}\n              {securityAlerts.length > 0 && (\n                <div>\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\n                    Recent Security Alerts\n                  </h3>\n                  <div className=\"space-y-3\">\n                    {securityAlerts.slice(0, 3).map((alert) => (\n                      <SecurityAlertCard key={alert.id} alert={alert} />\n                    ))}\n                  </div>\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* 2FA Tab */}\n          {activeTab === '2fa' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Two-Factor Authentication\n                </h3>\n                <button\n                  onClick={() => {\n                    const newMethod: Omit<TwoFactorMethod, 'id' | 'createdAt'> = {\n                      userId: user.id,\n                      type: 'sms',\n                      value: user.email,\n                      isPrimary: false,\n                      isVerified: false\n                    };\n                    addTwoFactorMethod(newMethod);\n                    setSelectedMethod(newMethod as TwoFactorMethod);\n                    setShowTwoFactorSetup(true);\n                  }}\n                  className=\"flex items-center space-x-2 bg-yellow-500 hover:bg-yellow-600 text-white px-4 py-2 rounded-lg transition-colors\"\n                >\n                  <PlusIcon className=\"w-4 h-4\" />\n                  <span>Add Method</span>\n                </button>\n              </div>\n\n              {showTwoFactorSetup && selectedMethod ? (\n                <TwoFactorSetup\n                  method={selectedMethod}\n                  onVerify={async (code) => {\n                    const success = await verifyTwoFactorCode(selectedMethod.id, code);\n                    if (success) {\n                      setShowTwoFactorSetup(false);\n                      setSelectedMethod(null);\n                    }\n                    return success;\n                  }}\n                  onCancel={() => {\n                    setShowTwoFactorSetup(false);\n                    setSelectedMethod(null);\n                  }}\n                />\n              ) : (\n                <div className=\"space-y-4\">\n                  {twoFactorMethods.map((method) => (\n                    <div key={method.id} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                      <div className=\"flex items-center justify-between\">\n                        <div className=\"flex items-center space-x-3\">\n                          {method.type === 'sms' && <DevicePhoneMobileIcon className=\"w-5 h-5 text-blue-500\" />}\n                          {method.type === 'email' && <KeyIcon className=\"w-5 h-5 text-green-500\" />}\n                          {method.type === 'authenticator' && <KeyIcon className=\"w-5 h-5 text-purple-500\" />}\n                          <div>\n                            <p className=\"font-medium text-gray-900 dark:text-white\">\n                              {method.type === 'sms' ? 'SMS' : method.type === 'email' ? 'Email' : 'Authenticator App'}\n                            </p>\n                            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                              {method.value}\n                            </p>\n                          </div>\n                        </div>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          method.isVerified \n                            ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200'\n                            : 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200'\n                        }`}>\n                          {method.isVerified ? 'Verified' : 'Pending'}\n                        </span>\n                      </div>\n                    </div>\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Devices Tab */}\n          {activeTab === 'devices' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Trusted Devices\n              </h3>\n              <div className=\"space-y-4\">\n                {trustedDevices.map((device) => (\n                  <div key={device.id} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex items-center space-x-3\">\n                        <ComputerDesktopIcon className=\"w-5 h-5 text-gray-500\" />\n                        <div>\n                          <p className=\"font-medium text-gray-900 dark:text-white\">\n                            {device.deviceName}\n                          </p>\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                            {device.os} • {device.browser}\n                          </p>\n                          <p className=\"text-sm text-gray-500 dark:text-gray-500\">\n                            {device.location.city}, {device.location.country}\n                          </p>\n                        </div>\n                      </div>\n                      <div className=\"text-right\">\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                          Last seen: {new Date(device.lastSeen).toLocaleDateString()}\n                        </p>\n                        <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                          device.isActive \n                            ? 'bg-green-100 dark:bg-green-900/30 text-green-800 dark:text-green-200'\n                            : 'bg-gray-100 dark:bg-gray-600 text-gray-800 dark:text-gray-200'\n                        }`}>\n                          {device.isActive ? 'Active' : 'Inactive'}\n                        </span>\n                      </div>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Alerts Tab */}\n          {activeTab === 'alerts' && (\n            <div className=\"space-y-6\">\n              <div className=\"flex items-center justify-between\">\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                  Security Alerts\n                </h3>\n                {unreadAlerts > 0 && (\n                  <span className=\"bg-red-500 text-white text-sm px-3 py-1 rounded-full\">\n                    {unreadAlerts} unread\n                  </span>\n                )}\n              </div>\n\n              {securityAlerts.length === 0 ? (\n                <div className=\"text-center py-12\">\n                  <ExclamationTriangleIcon className=\"w-12 h-12 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\n                  <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\n                    No security alerts\n                  </h3>\n                  <p className=\"text-gray-500 dark:text-gray-400\">\n                    You're all caught up! No security alerts at the moment.\n                  </p>\n                </div>\n              ) : (\n                <div className=\"space-y-3\">\n                  {securityAlerts.map((alert) => (\n                    <SecurityAlertCard \n                      key={alert.id} \n                      alert={alert}\n                      onMarkAsRead={markAlertAsRead}\n                      onResolve={resolveAlert}\n                    />\n                  ))}\n                </div>\n              )}\n            </div>\n          )}\n\n          {/* Events Tab */}\n          {activeTab === 'events' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Security Events\n              </h3>\n              <div className=\"space-y-4\">\n                {securityEvents.map((event) => (\n                  <div key={event.id} className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-4\">\n                    <div className=\"flex items-center justify-between\">\n                      <div>\n                        <p className=\"font-medium text-gray-900 dark:text-white\">\n                          {event.description}\n                        </p>\n                        <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                          {event.ipAddress} • {new Date(event.createdAt).toLocaleString()}\n                        </p>\n                      </div>\n                      <span className={`px-2 py-1 rounded-full text-xs font-medium ${\n                        event.severity === 'critical' ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200' :\n                        event.severity === 'high' ? 'bg-red-100 dark:bg-red-900/30 text-red-800 dark:text-red-200' :\n                        event.severity === 'medium' ? 'bg-yellow-100 dark:bg-yellow-900/30 text-yellow-800 dark:text-yellow-200' :\n                        'bg-blue-100 dark:bg-blue-900/30 text-blue-800 dark:text-blue-200'\n                      }`}>\n                        {event.severity.toUpperCase()}\n                      </span>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n\n          {/* Settings Tab */}\n          {activeTab === 'settings' && (\n            <div className=\"space-y-6\">\n              <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\n                Security Settings\n              </h3>\n              \n              {/* Password Change */}\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6\">\n                <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Change Password\n                </h4>\n                <div className=\"space-y-4\">\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      New Password\n                    </label>\n                    <input\n                      type=\"password\"\n                      value={newPassword}\n                      onChange={(e) => setNewPassword(e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-600 dark:text-white\"\n                    />\n                    {passwordPolicy && newPassword && (\n                      <PasswordStrengthMeter password={newPassword} policy={passwordPolicy} />\n                    )}\n                  </div>\n                  <div>\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\n                      Confirm Password\n                    </label>\n                    <input\n                      type=\"password\"\n                      value={confirmPassword}\n                      onChange={(e) => setConfirmPassword(e.target.value)}\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-600 dark:text-white\"\n                    />\n                  </div>\n                  <button\n                    disabled={!newPassword || newPassword !== confirmPassword}\n                    className=\"bg-blue-500 hover:bg-blue-600 disabled:bg-gray-400 disabled:cursor-not-allowed text-white px-4 py-2 rounded-lg transition-colors\"\n                  >\n                    Update Password\n                  </button>\n                </div>\n              </div>\n\n              {/* Security Preferences */}\n              <div className=\"bg-gray-50 dark:bg-gray-700 rounded-lg p-6\">\n                <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-4\">\n                  Security Preferences\n                </h4>\n                <div className=\"space-y-4\">\n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\n                        Auto-logout after inactivity\n                      </p>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Automatically log out after {securitySettings?.sessionTimeout || 30} minutes of inactivity\n                      </p>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      checked={securitySettings?.autoLogout || false}\n                      onChange={(e) => updateSettings({ autoLogout: e.target.checked })}\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                    />\n                  </div>\n                  \n                  <div className=\"flex items-center justify-between\">\n                    <div>\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\n                        Security alerts\n                      </p>\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\n                        Receive notifications for security events\n                      </p>\n                    </div>\n                    <input\n                      type=\"checkbox\"\n                      checked={securitySettings?.securityAlerts || false}\n                      onChange={(e) => updateSettings({ securityAlerts: e.target.checked })}\n                      className=\"h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded\"\n                    />\n                  </div>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      </motion.div>\n\n      {/* Fraud Detection Dashboard */}\n      <motion.div\n        initial={{ opacity: 0, y: 20 }}\n        animate={{ opacity: 1, y: 0 }}\n        transition={{ duration: 0.6, delay: 0.4 }}\n        className=\"mt-8\"\n      >\n        <FraudDetectionDashboard />\n      </motion.div>\n      </div>\n    </SecurityErrorBoundary>\n  );\n};\n\nexport default Security;\n","import * as React from \"react\";\nfunction KeyIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M15.75 5.25a3 3 0 0 1 3 3m3 0a6 6 0 0 1-7.029 5.912c-.563-.097-1.159.026-1.563.43L10.5 17.25H8.25v2.25H6v2.25H2.25v-2.818c0-.597.237-1.17.659-1.591l6.499-6.499c.404-.404.527-1 .43-1.563A6 6 0 1 1 21.75 8.25Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(KeyIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;"],"names":["ExclamationCircleIcon","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","id","strokeLinecap","strokeLinejoin","d","CheckCircleIcon","Cog6ToothIcon","alert","onMarkAsRead","onResolve","getTextColor","severity","_jsx","motion","div","initial","opacity","y","animate","className","concat","getAlertColor","isRead","children","_jsxs","getAlertIcon","XCircleIcon","ExclamationTriangleIcon","InformationCircleIcon","dateString","date","Date","diffTime","getTime","diffHours","Math","floor","diffDays","toLocaleDateString","month","day","formatDate","createdAt","message","toUpperCase","actionRequired","onClick","isResolved","method","onVerify","onCancel","code","setCode","useState","isVerifying","setIsVerifying","isVerified","setIsVerified","error","setError","getMethodTitle","type","scale","toLowerCase","getMethodIcon","DevicePhoneMobileIcon","EnvelopeIcon","KeyIcon","getMethodDescription","value","QrCodeIcon","onChange","e","target","placeholder","maxLength","async","trim","err","disabled","password","policy","score","checks","getPasswordStrength","length","minLength","push","text","passed","requireUppercase","test","requireLowercase","requireNumbers","requireSpecialChars","level","color","width","transition","duration","map","check","index","x","delay","fillRule","clipRule","ShieldExclamationIcon","fraudDetectionService","constructor","alerts","patterns","deviceFingerprints","Map","locationData","this","initializePatterns","name","description","pattern","riskLevel","frequency","lastDetected","falsePositiveRate","analyzeTransaction","transaction","userProfile","riskFactors","riskScore","amount","averageTransaction","hour","timestamp","getHours","getRecentTransactions","userId","deviceRisk","analyzeDeviceRisk","deviceId","locationRisk","analyzeLocationRisk","location","patternRisk","analyzePatterns","recommendedAction","factors","min","max","transactionId","confidence","verificationRequired","device","get","isTrusted","now","lastSeen","isVpn","isProxy","recentLocations","getRecentLocations","lastLocation","distance","calculateDistance","timeDiff","matchesPattern","getPatternRiskScore","userAverage","recentCount","deviceKnown","locationDistance","timeSinceLast","velocity","userVelocity","low","medium","high","critical","generateAlert","risk","random","toString","substr","getAlertType","getAlertTitle","getAlertDescription","status","getRecommendedAction","autoResolved","some","f","includes","join","hours","days","loc1","loc2","getAlerts","getPatterns","updateAlertStatus","alertId","find","a","clearResolvedAlerts","filter","setAlerts","setPatterns","isLoading","setIsLoading","selectedTab","setSelectedTab","useEffect","loadFraudData","fraudAlerts","fraudPatterns","console","getSeverityColor","getSeverityIcon","BellIcon","getStatusColor","getRiskLevelColor","prev","_objectSpread","ClockIcon","label","count","tab","toLocaleString","_Fragment","toFixed","ChartBarIcon","SecurityErrorBoundary","Component","arguments","state","hasError","errorInfo","getDerivedStateFromError","_","componentDidCatch","setState","render","window","reload","ArrowPathIcon","process","Security","user","useAuth","activeTab","setActiveTab","showTwoFactorSetup","setShowTwoFactorSetup","selectedMethod","setSelectedMethod","newPassword","setNewPassword","confirmPassword","setConfirmPassword","securityContext","useSecurity","securitySettings","twoFactorMethods","securityEvents","trustedDevices","securityAlerts","passwordPolicy","loading","updateSettings","addTwoFactorMethod","verifyTwoFactorCode","markAlertAsRead","resolveAlert","unreadAlerts","twoFactorEnabled","ShieldCheckIcon","ComputerDesktopIcon","icon","biometricEnabled","slice","SecurityAlertCard","newMethod","email","isPrimary","PlusIcon","TwoFactorSetup","success","deviceName","os","browser","city","country","isActive","event","ipAddress","PasswordStrengthMeter","sessionTimeout","checked","autoLogout","FraudDetectionDashboard"],"sourceRoot":""}