{"version":3,"file":"static/js/613.35ac2ac2.chunk.js","mappings":"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","sources":["pages/SendMoney.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { usePayment } from '../contexts/PaymentContext';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SendMoney: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const { paymentMethods, createPaymentIntent, isLoading } = usePayment();\r\n  const [recipient, setRecipient] = useState('');\r\n  const [amount, setAmount] = useState('');\r\n  const [note, setNote] = useState('');\r\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // Set default payment method when available\r\n  useEffect(() => {\r\n    if (paymentMethods.length > 0 && !selectedPaymentMethod) {\r\n      const defaultMethod = paymentMethods[0]; // Use first payment method as default\r\n      if (defaultMethod) {\r\n        setSelectedPaymentMethod(defaultMethod.id);\r\n      } else {\r\n        setSelectedPaymentMethod(paymentMethods[0].id);\r\n      }\r\n    }\r\n  }, [paymentMethods, selectedPaymentMethod]);\r\n\r\n  const handleSend = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    \r\n    if (!recipient || !amount || !selectedPaymentMethod) {\r\n      toast.error('Please fill in all required fields');\r\n      return;\r\n    }\r\n\r\n    const sendAmount = parseFloat(amount);\r\n    if (sendAmount <= 0) {\r\n      toast.error('Amount must be greater than 0');\r\n      return;\r\n    }\r\n\r\n    if (sendAmount > user!.balance) {\r\n      toast.error('Insufficient funds');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    \r\n    try {\r\n      const result = await createPaymentIntent(\r\n        sendAmount,\r\n        'USD',\r\n        note || `Payment to ${recipient}`\r\n      );\r\n\r\n      if (result.success) {\r\n        toast.success(`⚡ $${sendAmount} zapped to ${recipient}`);\r\n        setRecipient('');\r\n        setAmount('');\r\n        setNote('');\r\n      } else {\r\n        toast.error(result.error || 'Payment failed');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Payment processing failed');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6 }}\r\n        className=\"bg-white rounded-2xl p-8 shadow-lg\"\r\n      >\r\n        <h1 className=\"text-2xl font-bold text-gray-900 mb-6 text-center\">\r\n          ⚡ Zap Money\r\n        </h1>\r\n        \r\n        <form onSubmit={handleSend} className=\"space-y-6\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Recipient Email or Phone\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={recipient}\r\n              onChange={(e) => setRecipient(e.target.value)}\r\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent\"\r\n              placeholder=\"Enter email or phone number\"\r\n              required\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Amount\r\n            </label>\r\n            <div className=\"relative\">\r\n              <span className=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-500\">$</span>\r\n              <input\r\n                type=\"number\"\r\n                step=\"0.01\"\r\n                value={amount}\r\n                onChange={(e) => setAmount(e.target.value)}\r\n                className=\"w-full pl-8 pr-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent\"\r\n                placeholder=\"0.00\"\r\n                required\r\n              />\r\n            </div>\r\n            <p className=\"text-sm text-gray-500 mt-1\">\r\n              Available: ${user?.balance.toFixed(2)}\r\n            </p>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Payment Method\r\n            </label>\r\n            {paymentMethods.length === 0 ? (\r\n              <div className=\"p-4 bg-yellow-50 border border-yellow-200 rounded-lg\">\r\n                <p className=\"text-sm text-yellow-800\">\r\n                  No payment methods available. Please add a payment method first.\r\n                </p>\r\n              </div>\r\n            ) : (\r\n              <select\r\n                value={selectedPaymentMethod}\r\n                onChange={(e) => setSelectedPaymentMethod(e.target.value)}\r\n                className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent\"\r\n                required\r\n              >\r\n                {paymentMethods.map((method) => (\r\n                  <option key={method.id} value={method.id}>\r\n                    {method.billing_details.name || 'Card'} {method.card?.last4 ? `(****${method.card.last4})` : ''}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            )}\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n              Note (Optional)\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={note}\r\n              onChange={(e) => setNote(e.target.value)}\r\n              className=\"w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent\"\r\n              placeholder=\"What's this for?\"\r\n            />\r\n          </div>\r\n\r\n          <button\r\n            type=\"submit\"\r\n            disabled={loading}\r\n            className=\"w-full bg-gradient-to-r from-yellow-500 to-orange-500 text-white py-3 rounded-lg font-semibold hover:from-yellow-600 hover:to-orange-600 disabled:opacity-50 disabled:cursor-not-allowed transition-all transform hover:scale-105\"\r\n          >\r\n            {loading ? (\r\n              <div className=\"flex items-center justify-center\">\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white mr-2\"></div>\r\n                Zapping...\r\n              </div>\r\n            ) : (\r\n              '⚡ Zap Money'\r\n            )}\r\n          </button>\r\n        </form>\r\n      </motion.div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendMoney;\r\n"],"names":["SendMoney","user","useAuth","paymentMethods","createPaymentIntent","isLoading","usePayment","recipient","setRecipient","useState","amount","setAmount","note","setNote","selectedPaymentMethod","setSelectedPaymentMethod","loading","setLoading","useEffect","length","defaultMethod","id","_jsx","className","children","_jsxs","motion","div","initial","opacity","y","animate","transition","duration","onSubmit","async","e","preventDefault","toast","error","sendAmount","parseFloat","balance","result","concat","success","type","value","onChange","target","placeholder","required","step","toFixed","map","method","_method$card","billing_details","name","card","last4","disabled"],"sourceRoot":""}