{"version":3,"file":"static/js/354.d0b049ef.chunk.js","mappings":"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","sources":["components/groups/GroupCard.tsx","components/groups/CreateGroupModal.tsx","components/groups/GroupAnalytics.tsx","components/groups/CreateExpenseModal.tsx","components/groups/GroupExpenses.tsx","components/groups/CreatePaymentRequestModal.tsx","components/groups/PaymentRequests.tsx","pages/Groups.tsx"],"sourcesContent":["import React from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  UserGroupIcon, \r\n  CurrencyDollarIcon, \r\n  ChartBarIcon,\r\n  UsersIcon,\r\n  ClockIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { Group } from '../../types/Social';\r\n\r\ninterface GroupCardProps {\r\n  group: Group;\r\n  onClick: () => void;\r\n}\r\n\r\nconst GroupCard: React.FC<GroupCardProps> = ({ group, onClick }) => {\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (isActive: boolean) => {\r\n    return isActive ? 'text-green-600 bg-green-100' : 'text-gray-600 bg-gray-100';\r\n  };\r\n\r\n  return (\r\n    <motion.div\r\n      whileHover={{ y: -4, scale: 1.02 }}\r\n      whileTap={{ scale: 0.98 }}\r\n      onClick={onClick}\r\n      className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg hover:shadow-xl transition-all duration-200 cursor-pointer border border-gray-200 dark:border-gray-700\"\r\n    >\r\n      {/* Group Header */}\r\n      <div className=\"flex items-start justify-between mb-4\">\r\n        <div className=\"flex items-center space-x-3\">\r\n          <div \r\n            className=\"w-12 h-12 rounded-full flex items-center justify-center text-white font-bold text-lg shadow-md\"\r\n            style={{ backgroundColor: group.color }}\r\n          >\r\n            {group.name.charAt(0)}\r\n          </div>\r\n          <div>\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              {group.name}\r\n            </h3>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n              {group.description || 'No description'}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className={`px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(group.isActive)}`}>\r\n          {group.isActive ? 'Active' : 'Inactive'}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Group Stats */}\r\n      <div className=\"grid grid-cols-2 gap-4 mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <CurrencyDollarIcon className=\"w-4 h-4 text-green-500\" />\r\n          <div>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total</p>\r\n            <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n              ${group.totalExpenses.toFixed(2)}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <ChartBarIcon className=\"w-4 h-4 text-blue-500\" />\r\n          <div>\r\n            <p className=\"text-sm text-gray-600 dark:text-gray-400\">Transactions</p>\r\n            <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n              {group.totalTransactions}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Members */}\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <UsersIcon className=\"w-4 h-4 text-gray-500\" />\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {group.members.length} members\r\n          </span>\r\n        </div>\r\n        \r\n        <div className=\"flex items-center space-x-2\">\r\n          <ClockIcon className=\"w-4 h-4 text-gray-500\" />\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            {formatDate(group.updatedAt)}\r\n          </span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Member Avatars */}\r\n      <div className=\"flex items-center space-x-2\">\r\n        <div className=\"flex -space-x-2\">\r\n          {group.members.slice(0, 3).map((member, index) => (\r\n            <div\r\n              key={member.id}\r\n              className=\"w-8 h-8 rounded-full border-2 border-white dark:border-gray-800 bg-gray-300 dark:bg-gray-600 flex items-center justify-center text-xs font-medium text-gray-700 dark:text-gray-300\"\r\n              style={{ zIndex: 3 - index }}\r\n            >\r\n              {member.firstName.charAt(0)}\r\n            </div>\r\n          ))}\r\n        </div>\r\n        \r\n        {group.members.length > 3 && (\r\n          <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n            +{group.members.length - 3} more\r\n          </span>\r\n        )}\r\n      </div>\r\n\r\n      {/* Privacy Badge */}\r\n      <div className=\"mt-4 flex items-center justify-between\">\r\n        <div className={`px-2 py-1 rounded-full text-xs font-medium ${\r\n          group.settings.privacy === 'public' \r\n            ? 'text-blue-600 bg-blue-100 dark:bg-blue-900 dark:text-blue-300'\r\n            : group.settings.privacy === 'private'\r\n            ? 'text-gray-600 bg-gray-100 dark:bg-gray-700 dark:text-gray-300'\r\n            : 'text-purple-600 bg-purple-100 dark:bg-purple-900 dark:text-purple-300'\r\n        }`}>\r\n          {group.settings.privacy === 'public' ? 'Public' : \r\n           group.settings.privacy === 'private' ? 'Private' : 'Invite Only'}\r\n        </div>\r\n        \r\n        <div className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n          {group.settings.currency}\r\n        </div>\r\n      </div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default GroupCard;\r\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGroup } from '../../contexts/GroupContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { \r\n  XMarkIcon, \r\n  UserGroupIcon, \r\n  EyeIcon, \r\n  EyeSlashIcon,\r\n  UserPlusIcon,\r\n  Cog6ToothIcon\r\n} from '@heroicons/react/24/outline';\r\n\r\ninterface CreateGroupModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onGroupCreated: () => void;\r\n}\r\n\r\nconst CreateGroupModal: React.FC<CreateGroupModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onGroupCreated \r\n}) => {\r\n  const { user } = useAuth();\r\n  const { createGroup, isLoading } = useGroup();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    name: '',\r\n    description: '',\r\n    privacy: 'private' as 'public' | 'private' | 'invite-only',\r\n    allowMemberInvites: true,\r\n    requireApprovalForExpenses: false,\r\n    defaultSplitMethod: 'equal' as 'equal' | 'percentage' | 'custom',\r\n    currency: 'USD',\r\n    color: '#3B82F6'\r\n  });\r\n\r\n  const [showAdvanced, setShowAdvanced] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const colors = [\r\n    '#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6',\r\n    '#06B6D4', '#84CC16', '#F97316', '#EC4899', '#6B7280'\r\n  ];\r\n\r\n  const currencies = [\r\n    { code: 'USD', symbol: '$', name: 'US Dollar' },\r\n    { code: 'EUR', symbol: '€', name: 'Euro' },\r\n    { code: 'GBP', symbol: '£', name: 'British Pound' },\r\n    { code: 'CAD', symbol: 'C$', name: 'Canadian Dollar' },\r\n    { code: 'AUD', symbol: 'A$', name: 'Australian Dollar' }\r\n  ];\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!user) return;\r\n\r\n    setError(null);\r\n\r\n    try {\r\n      const groupData = {\r\n        name: formData.name,\r\n        description: formData.description,\r\n        createdBy: user.id,\r\n        members: [{\r\n          id: '1',\r\n          userId: user.id,\r\n          email: user.email,\r\n          firstName: user.firstName,\r\n          lastName: user.lastName,\r\n          profilePicture: user.profilePicture,\r\n          role: 'admin' as const,\r\n          joinedAt: new Date().toISOString(),\r\n          isActive: true,\r\n          totalContributed: 0,\r\n          totalOwed: 0,\r\n          balance: 0\r\n        }],\r\n        settings: {\r\n          allowMemberInvites: formData.allowMemberInvites,\r\n          requireApprovalForExpenses: formData.requireApprovalForExpenses,\r\n          defaultSplitMethod: formData.defaultSplitMethod,\r\n          currency: formData.currency,\r\n          notifications: {\r\n            newExpenses: true,\r\n            paymentsReceived: true,\r\n            groupUpdates: true,\r\n            reminders: true\r\n          },\r\n          privacy: formData.privacy\r\n        },\r\n        isActive: true,\r\n        color: formData.color\r\n      };\r\n\r\n      await createGroup(groupData);\r\n      onGroupCreated();\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to create group');\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      name: '',\r\n      description: '',\r\n      privacy: 'private',\r\n      allowMemberInvites: true,\r\n      requireApprovalForExpenses: false,\r\n      defaultSplitMethod: 'equal',\r\n      currency: 'USD',\r\n      color: '#3B82F6'\r\n    });\r\n    setError(null);\r\n    setShowAdvanced(false);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n        <div className=\"flex min-h-screen items-center justify-center p-4\">\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50\"\r\n            onClick={handleClose}\r\n          />\r\n          \r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.95, y: 20 }}\r\n            animate={{ opacity: 1, scale: 1, y: 0 }}\r\n            exit={{ opacity: 0, scale: 0.95, y: 20 }}\r\n            className=\"relative bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-md w-full max-h-[90vh] overflow-y-auto\"\r\n          >\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-yellow-100 dark:bg-yellow-900 rounded-lg flex items-center justify-center\">\r\n                  <UserGroupIcon className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" />\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                    Create Group\r\n                  </h2>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Start sharing expenses with friends\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <button\r\n                onClick={handleClose}\r\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n              {error && (\r\n                <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n\r\n              {/* Basic Information */}\r\n              <div className=\"space-y-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Group Name *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={formData.name}\r\n                    onChange={(e) => setFormData({ ...formData, name: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                    placeholder=\"e.g., Roommates, Vacation Fund\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Description\r\n                  </label>\r\n                  <textarea\r\n                    value={formData.description}\r\n                    onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                    rows={3}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                    placeholder=\"Describe what this group is for...\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Group Color\r\n                  </label>\r\n                  <div className=\"flex space-x-2\">\r\n                    {colors.map((color) => (\r\n                      <button\r\n                        key={color}\r\n                        type=\"button\"\r\n                        onClick={() => setFormData({ ...formData, color })}\r\n                        className={`w-8 h-8 rounded-full border-2 ${\r\n                          formData.color === color \r\n                            ? 'border-gray-900 dark:border-white' \r\n                            : 'border-gray-300 dark:border-gray-600'\r\n                        }`}\r\n                        style={{ backgroundColor: color }}\r\n                      />\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Advanced Settings Toggle */}\r\n              <button\r\n                type=\"button\"\r\n                onClick={() => setShowAdvanced(!showAdvanced)}\r\n                className=\"flex items-center space-x-2 text-sm font-medium text-gray-700 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white transition-colors\"\r\n              >\r\n                <Cog6ToothIcon className=\"w-4 h-4\" />\r\n                <span>Advanced Settings</span>\r\n                {showAdvanced ? (\r\n                  <EyeSlashIcon className=\"w-4 h-4\" />\r\n                ) : (\r\n                  <EyeIcon className=\"w-4 h-4\" />\r\n                )}\r\n              </button>\r\n\r\n              {/* Advanced Settings */}\r\n              {showAdvanced && (\r\n                <motion.div\r\n                  initial={{ opacity: 0, height: 0 }}\r\n                  animate={{ opacity: 1, height: 'auto' }}\r\n                  exit={{ opacity: 0, height: 0 }}\r\n                  className=\"space-y-4 border-t border-gray-200 dark:border-gray-700 pt-4\"\r\n                >\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      Privacy\r\n                    </label>\r\n                    <select\r\n                      value={formData.privacy}\r\n                      onChange={(e) => setFormData({ ...formData, privacy: e.target.value as any })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                    >\r\n                      <option value=\"private\">Private</option>\r\n                      <option value=\"invite-only\">Invite Only</option>\r\n                      <option value=\"public\">Public</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      Currency\r\n                    </label>\r\n                    <select\r\n                      value={formData.currency}\r\n                      onChange={(e) => setFormData({ ...formData, currency: e.target.value })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                    >\r\n                      {currencies.map((currency) => (\r\n                        <option key={currency.code} value={currency.code}>\r\n                          {currency.symbol} {currency.name} ({currency.code})\r\n                        </option>\r\n                      ))}\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div>\r\n                    <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                      Default Split Method\r\n                    </label>\r\n                    <select\r\n                      value={formData.defaultSplitMethod}\r\n                      onChange={(e) => setFormData({ ...formData, defaultSplitMethod: e.target.value as any })}\r\n                      className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-yellow-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                    >\r\n                      <option value=\"equal\">Equal Split</option>\r\n                      <option value=\"percentage\">Percentage</option>\r\n                      <option value=\"custom\">Custom Amounts</option>\r\n                    </select>\r\n                  </div>\r\n\r\n                  <div className=\"space-y-3\">\r\n                    <label className=\"flex items-center space-x-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={formData.allowMemberInvites}\r\n                        onChange={(e) => setFormData({ ...formData, allowMemberInvites: e.target.checked })}\r\n                        className=\"w-4 h-4 text-yellow-600 border-gray-300 rounded focus:ring-yellow-500\"\r\n                      />\r\n                      <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                        Allow members to invite others\r\n                      </span>\r\n                    </label>\r\n\r\n                    <label className=\"flex items-center space-x-3\">\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={formData.requireApprovalForExpenses}\r\n                        onChange={(e) => setFormData({ ...formData, requireApprovalForExpenses: e.target.checked })}\r\n                        className=\"w-4 h-4 text-yellow-600 border-gray-300 rounded focus:ring-yellow-500\"\r\n                      />\r\n                      <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                        Require approval for new expenses\r\n                      </span>\r\n                    </label>\r\n                  </div>\r\n                </motion.div>\r\n              )}\r\n\r\n              {/* Actions */}\r\n              <div className=\"flex space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"flex-1 px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading || !formData.name.trim()}\r\n                  className=\"flex-1 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-colors\"\r\n                >\r\n                  {isLoading ? 'Creating...' : 'Create Group'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default CreateGroupModal;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGroup } from '../../contexts/GroupContext';\r\nimport { \r\n  ChartBarIcon, \r\n  CurrencyDollarIcon, \r\n  UsersIcon, \r\n  ArrowTrendingUpIcon,\r\n  ArrowTrendingDownIcon,\r\n  CalendarIcon,\r\n  ArrowUpIcon,\r\n  ArrowDownIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { Group, GroupAnalytics as GroupAnalyticsType } from '../../types/Social';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer, PieChart, Pie, Cell, BarChart, Bar } from 'recharts';\r\n\r\ninterface GroupAnalyticsProps {\r\n  group: Group;\r\n}\r\n\r\nconst GroupAnalytics: React.FC<GroupAnalyticsProps> = ({ group }) => {\r\n  const { getGroupAnalytics, isLoading } = useGroup();\r\n  const [analytics, setAnalytics] = useState<GroupAnalyticsType | null>(null);\r\n  const [selectedPeriod, setSelectedPeriod] = useState<'week' | 'month' | 'quarter' | 'year'>('month');\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const periods = [\r\n    { id: 'week', label: 'This Week' },\r\n    { id: 'month', label: 'This Month' },\r\n    { id: 'quarter', label: 'This Quarter' },\r\n    { id: 'year', label: 'This Year' }\r\n  ];\r\n\r\n  const colors = ['#3B82F6', '#10B981', '#F59E0B', '#EF4444', '#8B5CF6', '#06B6D4', '#84CC16', '#F97316', '#EC4899'];\r\n\r\n  useEffect(() => {\r\n    loadAnalytics();\r\n  }, [group.id, selectedPeriod]);\r\n\r\n  const loadAnalytics = async () => {\r\n    try {\r\n      setError(null);\r\n      const data = await getGroupAnalytics(group.id, selectedPeriod);\r\n      setAnalytics(data);\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to load analytics');\r\n    }\r\n  };\r\n\r\n  const formatCurrency = (amount: number) => {\r\n    return new Intl.NumberFormat('en-US', {\r\n      style: 'currency',\r\n      currency: group.settings.currency || 'USD'\r\n    }).format(amount);\r\n  };\r\n\r\n  const formatPercentage = (value: number) => {\r\n    return `${value.toFixed(1)}%`;\r\n  };\r\n\r\n  if (isLoading && !analytics) {\r\n    return (\r\n      <div className=\"flex items-center justify-center py-12\">\r\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <div className=\"text-red-500 mb-4\">\r\n          <ChartBarIcon className=\"w-16 h-16 mx-auto\" />\r\n        </div>\r\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n          Failed to load analytics\r\n        </h3>\r\n        <p className=\"text-gray-500 dark:text-gray-400 mb-4\">{error}</p>\r\n        <button\r\n          onClick={loadAnalytics}\r\n          className=\"px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors\"\r\n        >\r\n          Try Again\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (!analytics) {\r\n    return (\r\n      <div className=\"text-center py-12\">\r\n        <ChartBarIcon className=\"w-16 h-16 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\r\n        <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n          No analytics data\r\n        </h3>\r\n        <p className=\"text-gray-500 dark:text-gray-400\">\r\n          Analytics will appear once you have expenses in this group.\r\n        </p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Group Analytics\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            Insights and trends for {group.name}\r\n          </p>\r\n        </div>\r\n        \r\n        <div className=\"flex space-x-2 mt-4 sm:mt-0\">\r\n          {periods.map((period) => (\r\n            <button\r\n              key={period.id}\r\n              onClick={() => setSelectedPeriod(period.id as any)}\r\n              className={`px-3 py-1 rounded-lg text-sm font-medium transition-colors ${\r\n                selectedPeriod === period.id\r\n                  ? 'bg-yellow-500 text-white'\r\n                  : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n              }`}\r\n            >\r\n              {period.label}\r\n            </button>\r\n          ))}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Key Metrics */}\r\n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-2 bg-blue-100 dark:bg-blue-900 rounded-lg\">\r\n              <CurrencyDollarIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n            </div>\r\n            <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {formatCurrency(analytics.totalExpenses)}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n            Total Expenses\r\n          </h3>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.1 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-2 bg-green-100 dark:bg-green-900 rounded-lg\">\r\n              <ChartBarIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n            </div>\r\n            <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {analytics.totalTransactions}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n            Transactions\r\n          </h3>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.2 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-2 bg-yellow-100 dark:bg-yellow-900 rounded-lg\">\r\n              <ArrowTrendingUpIcon className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" />\r\n            </div>\r\n            <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {formatCurrency(analytics.averageExpense)}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n            Average Expense\r\n          </h3>\r\n        </motion.div>\r\n\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.3 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <div className=\"p-2 bg-purple-100 dark:bg-purple-900 rounded-lg\">\r\n              <UsersIcon className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n            </div>\r\n            <span className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              {group.members.length}\r\n            </span>\r\n          </div>\r\n          <h3 className=\"text-sm font-medium text-gray-600 dark:text-gray-400\">\r\n            Active Members\r\n          </h3>\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Charts */}\r\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n        {/* Category Spending */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.4 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Spending by Category\r\n          </h3>\r\n          {analytics.topCategories.length > 0 ? (\r\n            <div className=\"h-64\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <PieChart>\r\n                  <Pie\r\n                    data={analytics.topCategories}\r\n                    cx=\"50%\"\r\n                    cy=\"50%\"\r\n                    labelLine={false}\r\n                    label={({ category, percentage }: any) => `${category} (${formatPercentage(percentage)})`}\r\n                    outerRadius={80}\r\n                    fill=\"#8884d8\"\r\n                    dataKey=\"amount\"\r\n                  >\r\n                    {analytics.topCategories.map((entry, index) => (\r\n                      <Cell key={`cell-${index}`} fill={colors[index % colors.length]} />\r\n                    ))}\r\n                  </Pie>\r\n                  <Tooltip formatter={(value: any) => formatCurrency(Number(value))} />\r\n                </PieChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n              No category data available\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n\r\n        {/* Member Spending */}\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.5 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Member Spending\r\n          </h3>\r\n          {analytics.topSpenders.length > 0 ? (\r\n            <div className=\"h-64\">\r\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n                <BarChart data={analytics.topSpenders}>\r\n                  <CartesianGrid strokeDasharray=\"3 3\" />\r\n                  <XAxis dataKey=\"name\" />\r\n                  <YAxis />\r\n                  <Tooltip formatter={(value: any) => formatCurrency(Number(value))} />\r\n                  <Bar dataKey=\"totalSpent\" fill=\"#3B82F6\" />\r\n                </BarChart>\r\n              </ResponsiveContainer>\r\n            </div>\r\n          ) : (\r\n            <div className=\"text-center py-8 text-gray-500 dark:text-gray-400\">\r\n              No member data available\r\n            </div>\r\n          )}\r\n        </motion.div>\r\n      </div>\r\n\r\n      {/* Member Balances */}\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ delay: 0.6 }}\r\n        className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n      >\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          Member Balances\r\n        </h3>\r\n        <div className=\"space-y-3\">\r\n          {analytics.memberBalances.map((member, index) => (\r\n            <div key={member.userId} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-8 h-8 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center\">\r\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                    {member.name.charAt(0)}\r\n                  </span>\r\n                </div>\r\n                <div>\r\n                  <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {member.name}\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    {member.totalOwed > 0 ? `Owed: ${formatCurrency(member.totalOwed)}` : \r\n                     member.totalOwing > 0 ? `Owes: ${formatCurrency(member.totalOwing)}` : \r\n                     'Balanced'}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <div className=\"text-right\">\r\n                <p className={`font-medium ${\r\n                  member.netBalance > 0 \r\n                    ? 'text-green-600 dark:text-green-400' \r\n                    : member.netBalance < 0 \r\n                    ? 'text-red-600 dark:text-red-400' \r\n                    : 'text-gray-600 dark:text-gray-400'\r\n                }`}>\r\n                  {member.netBalance > 0 ? '+' : ''}{formatCurrency(member.netBalance)}\r\n                </p>\r\n                <div className=\"flex items-center space-x-1\">\r\n                  {member.netBalance > 0 ? (\r\n                    <ArrowUpIcon className=\"w-4 h-4 text-green-500\" />\r\n                  ) : member.netBalance < 0 ? (\r\n                    <ArrowDownIcon className=\"w-4 h-4 text-red-500\" />\r\n                  ) : null}\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </motion.div>\r\n\r\n      {/* Insights */}\r\n      {analytics.insights.length > 0 && (\r\n        <motion.div\r\n          initial={{ opacity: 0, y: 20 }}\r\n          animate={{ opacity: 1, y: 0 }}\r\n          transition={{ delay: 0.7 }}\r\n          className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n        >\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Insights\r\n          </h3>\r\n          <div className=\"space-y-2\">\r\n            {analytics.insights.map((insight, index) => (\r\n              <div key={index} className=\"flex items-start space-x-3 p-3 bg-blue-50 dark:bg-blue-900 rounded-lg\">\r\n                <div className=\"w-2 h-2 bg-blue-500 rounded-full mt-2 flex-shrink-0\"></div>\r\n                <p className=\"text-sm text-gray-700 dark:text-gray-300\">{insight}</p>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </motion.div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupAnalytics;\r\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGroup } from '../../contexts/GroupContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { \r\n  XMarkIcon, \r\n  CurrencyDollarIcon, \r\n  UsersIcon, \r\n  TagIcon,\r\n  CalendarIcon,\r\n  DocumentTextIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { Group, GroupExpense, ExpenseSplit } from '../../types/Social';\r\n\r\ninterface CreateExpenseModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onExpenseCreated: (expenseData: any) => void;\r\n  group: Group;\r\n}\r\n\r\nconst CreateExpenseModal: React.FC<CreateExpenseModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onExpenseCreated,\r\n  group \r\n}) => {\r\n  const { user } = useAuth();\r\n  const { createExpense, isLoading } = useGroup();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    description: '',\r\n    amount: '',\r\n    category: 'Food',\r\n    splitMethod: 'equal' as 'equal' | 'percentage' | 'custom',\r\n    dueDate: '',\r\n    tags: '',\r\n    receipt: ''\r\n  });\r\n\r\n  const [splits, setSplits] = useState<ExpenseSplit[]>([]);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const categories = [\r\n    'Food', 'Transportation', 'Entertainment', 'Utilities', 'Shopping',\r\n    'Travel', 'Healthcare', 'Education', 'Other'\r\n  ];\r\n\r\n  const splitMethods = [\r\n    { id: 'equal', label: 'Equal Split', description: 'Split equally among all members' },\r\n    { id: 'percentage', label: 'Percentage', description: 'Split by percentage' },\r\n    { id: 'custom', label: 'Custom Amounts', description: 'Set custom amounts for each member' }\r\n  ];\r\n\r\n  const calculateSplits = () => {\r\n    const amount = parseFloat(formData.amount);\r\n    if (!amount || amount <= 0) return;\r\n\r\n    const activeMembers = group.members.filter(member => member.isActive);\r\n    \r\n    switch (formData.splitMethod) {\r\n      case 'equal':\r\n        const equalAmount = amount / activeMembers.length;\r\n        setSplits(activeMembers.map(member => ({\r\n          userId: member.userId,\r\n          amount: equalAmount,\r\n          isPaid: false,\r\n          paidAmount: 0,\r\n          remainingAmount: equalAmount\r\n        })));\r\n        break;\r\n        \r\n      case 'percentage':\r\n        // For percentage, we'll need to collect percentages from user\r\n        setSplits(activeMembers.map(member => ({\r\n          userId: member.userId,\r\n          amount: 0,\r\n          percentage: 100 / activeMembers.length,\r\n          isPaid: false,\r\n          paidAmount: 0,\r\n          remainingAmount: 0\r\n        })));\r\n        break;\r\n        \r\n      case 'custom':\r\n        setSplits(activeMembers.map(member => ({\r\n          userId: member.userId,\r\n          amount: 0,\r\n          isPaid: false,\r\n          paidAmount: 0,\r\n          remainingAmount: 0\r\n        })));\r\n        break;\r\n    }\r\n  };\r\n\r\n  const updateSplitAmount = (userId: string, amount: number) => {\r\n    setSplits(prev => prev.map(split => \r\n      split.userId === userId \r\n        ? { ...split, amount, remainingAmount: amount - split.paidAmount }\r\n        : split\r\n    ));\r\n  };\r\n\r\n  const updateSplitPercentage = (userId: string, percentage: number) => {\r\n    const totalAmount = parseFloat(formData.amount);\r\n    const amount = (totalAmount * percentage) / 100;\r\n    \r\n    setSplits(prev => prev.map(split => \r\n      split.userId === userId \r\n        ? { ...split, amount, percentage, remainingAmount: amount - split.paidAmount }\r\n        : split\r\n    ));\r\n  };\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!user) return;\r\n\r\n    setError(null);\r\n\r\n    // Validate splits\r\n    const totalSplitAmount = splits.reduce((sum, split) => sum + split.amount, 0);\r\n    const expenseAmount = parseFloat(formData.amount);\r\n    \r\n    if (Math.abs(totalSplitAmount - expenseAmount) > 0.01) {\r\n      setError('Split amounts must equal the total expense amount');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const expenseData = {\r\n        title: formData.title,\r\n        description: formData.description,\r\n        amount: expenseAmount,\r\n        currency: group.settings.currency,\r\n        category: formData.category,\r\n        splitMethod: formData.splitMethod,\r\n        splits: splits,\r\n        dueDate: formData.dueDate || undefined,\r\n        tags: formData.tags.split(',').map(tag => tag.trim()).filter(tag => tag),\r\n        receipt: formData.receipt || undefined\r\n      };\r\n\r\n      onExpenseCreated(expenseData);\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to create expense');\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      title: '',\r\n      description: '',\r\n      amount: '',\r\n      category: 'Food',\r\n      splitMethod: 'equal',\r\n      dueDate: '',\r\n      tags: '',\r\n      receipt: ''\r\n    });\r\n    setSplits([]);\r\n    setError(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  // Calculate splits when amount or method changes\r\n  React.useEffect(() => {\r\n    if (formData.amount && formData.splitMethod === 'equal') {\r\n      calculateSplits();\r\n    }\r\n  }, [formData.amount, formData.splitMethod]);\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n        <div className=\"flex min-h-screen items-center justify-center p-4\">\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50\"\r\n            onClick={handleClose}\r\n          />\r\n          \r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.95, y: 20 }}\r\n            animate={{ opacity: 1, scale: 1, y: 0 }}\r\n            exit={{ opacity: 0, scale: 0.95, y: 20 }}\r\n            className=\"relative bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\"\r\n          >\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-green-100 dark:bg-green-900 rounded-lg flex items-center justify-center\">\r\n                  <CurrencyDollarIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                    Add Expense\r\n                  </h2>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Split expenses with {group.name}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <button\r\n                onClick={handleClose}\r\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n              {error && (\r\n                <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n\r\n              {/* Basic Information */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Title *\r\n                  </label>\r\n                  <input\r\n                    type=\"text\"\r\n                    required\r\n                    value={formData.title}\r\n                    onChange={(e) => setFormData({ ...formData, title: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                    placeholder=\"e.g., Dinner at Restaurant\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Amount *\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 dark:text-gray-400\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      min=\"0\"\r\n                      required\r\n                      value={formData.amount}\r\n                      onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n                      className=\"w-full pl-8 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                      placeholder=\"0.00\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Description\r\n                </label>\r\n                <textarea\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  placeholder=\"Add details about this expense...\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Category\r\n                  </label>\r\n                  <select\r\n                    value={formData.category}\r\n                    onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  >\r\n                    {categories.map((category) => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Due Date\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.dueDate}\r\n                    onChange={(e) => setFormData({ ...formData, dueDate: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              {/* Split Method */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n                  Split Method\r\n                </label>\r\n                <div className=\"grid grid-cols-1 md:grid-cols-3 gap-3\">\r\n                  {splitMethods.map((method) => (\r\n                    <button\r\n                      key={method.id}\r\n                      type=\"button\"\r\n                      onClick={() => setFormData({ ...formData, splitMethod: method.id as any })}\r\n                      className={`p-3 text-left border rounded-lg transition-colors ${\r\n                        formData.splitMethod === method.id\r\n                          ? 'border-green-500 bg-green-50 dark:bg-green-900 dark:border-green-400'\r\n                          : 'border-gray-300 dark:border-gray-600 hover:border-gray-400 dark:hover:border-gray-500'\r\n                      }`}\r\n                    >\r\n                      <div className=\"font-medium text-gray-900 dark:text-white\">\r\n                        {method.label}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {method.description}\r\n                      </div>\r\n                    </button>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n\r\n              {/* Splits */}\r\n              {splits.length > 0 && (\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-3\">\r\n                    Split Details\r\n                  </label>\r\n                  <div className=\"space-y-3\">\r\n                    {splits.map((split, index) => {\r\n                      const member = group.members.find(m => m.userId === split.userId);\r\n                      return (\r\n                        <div key={split.userId} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-8 h-8 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center\">\r\n                              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                                {member?.firstName.charAt(0) || '?'}\r\n                              </span>\r\n                            </div>\r\n                            <div>\r\n                              <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                                {member ? `${member.firstName} ${member.lastName}` : 'Unknown User'}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          \r\n                          <div className=\"flex items-center space-x-2\">\r\n                            {formData.splitMethod === 'percentage' && (\r\n                              <div className=\"flex items-center space-x-2\">\r\n                                <input\r\n                                  type=\"number\"\r\n                                  min=\"0\"\r\n                                  max=\"100\"\r\n                                  step=\"0.01\"\r\n                                  value={split.percentage || 0}\r\n                                  onChange={(e) => updateSplitPercentage(split.userId, parseFloat(e.target.value) || 0)}\r\n                                  className=\"w-20 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm dark:bg-gray-600 dark:text-white\"\r\n                                />\r\n                                <span className=\"text-sm text-gray-500\">%</span>\r\n                              </div>\r\n                            )}\r\n                            \r\n                            <div className=\"flex items-center space-x-2\">\r\n                              <span className=\"text-sm text-gray-500\">$</span>\r\n                              <input\r\n                                type=\"number\"\r\n                                step=\"0.01\"\r\n                                min=\"0\"\r\n                                value={split.amount}\r\n                                onChange={(e) => updateSplitAmount(split.userId, parseFloat(e.target.value) || 0)}\r\n                                className=\"w-24 px-2 py-1 border border-gray-300 dark:border-gray-600 rounded text-sm dark:bg-gray-600 dark:text-white\"\r\n                              />\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                  \r\n                  <div className=\"mt-3 p-3 bg-blue-50 dark:bg-blue-900 rounded-lg\">\r\n                    <div className=\"flex justify-between items-center\">\r\n                      <span className=\"font-medium text-gray-900 dark:text-white\">Total:</span>\r\n                      <span className=\"font-bold text-lg text-gray-900 dark:text-white\">\r\n                        ${splits.reduce((sum, split) => sum + split.amount, 0).toFixed(2)}\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {/* Tags */}\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Tags (comma-separated)\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  value={formData.tags}\r\n                  onChange={(e) => setFormData({ ...formData, tags: e.target.value })}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  placeholder=\"e.g., dinner, restaurant, celebration\"\r\n                />\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div className=\"flex space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"flex-1 px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading || !formData.title.trim() || !formData.amount || splits.length === 0}\r\n                  className=\"flex-1 px-4 py-2 bg-green-500 hover:bg-green-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-colors\"\r\n                >\r\n                  {isLoading ? 'Creating...' : 'Create Expense'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default CreateExpenseModal;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGroup } from '../../contexts/GroupContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { \r\n  PlusIcon, \r\n  CurrencyDollarIcon, \r\n  UsersIcon, \r\n  ClockIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  PencilIcon,\r\n  TrashIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { Group, GroupExpense } from '../../types/Social';\r\nimport CreateExpenseModal from './CreateExpenseModal';\r\n\r\ninterface GroupExpensesProps {\r\n  group: Group;\r\n}\r\n\r\nconst GroupExpenses: React.FC<GroupExpensesProps> = ({ group }) => {\r\n  const { user } = useAuth();\r\n  const { expenses, createExpense, updateExpense, payExpenseSplit, isLoading } = useGroup();\r\n  \r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [selectedExpense, setSelectedExpense] = useState<GroupExpense | null>(null);\r\n  const [filter, setFilter] = useState<'all' | 'pending' | 'partial' | 'completed'>('all');\r\n\r\n  const filteredExpenses = expenses.filter(expense => {\r\n    if (filter === 'all') return true;\r\n    return expense.status === filter;\r\n  });\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'text-green-600 bg-green-100 dark:bg-green-900 dark:text-green-300';\r\n      case 'partial':\r\n        return 'text-yellow-600 bg-yellow-100 dark:bg-yellow-900 dark:text-yellow-300';\r\n      case 'pending':\r\n        return 'text-gray-600 bg-gray-100 dark:bg-gray-700 dark:text-gray-300';\r\n      case 'cancelled':\r\n        return 'text-red-600 bg-red-100 dark:bg-red-900 dark:text-red-300';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100 dark:bg-gray-700 dark:text-gray-300';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircleIcon className=\"w-4 h-4\" />;\r\n      case 'partial':\r\n        return <ClockIcon className=\"w-4 h-4\" />;\r\n      case 'pending':\r\n        return <ClockIcon className=\"w-4 h-4\" />;\r\n      case 'cancelled':\r\n        return <XCircleIcon className=\"w-4 h-4\" />;\r\n      default:\r\n        return <ClockIcon className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const handlePaySplit = async (expenseId: string, userId: string, amount: number) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      await payExpenseSplit(expenseId, userId, amount);\r\n    } catch (error) {\r\n      console.error('Failed to pay expense split:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateExpense = async (expenseData: any) => {\r\n    try {\r\n      await createExpense({\r\n        ...expenseData,\r\n        groupId: group.id,\r\n        createdBy: user?.id || ''\r\n      });\r\n      setShowCreateModal(false);\r\n    } catch (error) {\r\n      console.error('Failed to create expense:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Group Expenses\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            Manage shared expenses and track payments\r\n          </p>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={() => setShowCreateModal(true)}\r\n          className=\"flex items-center space-x-2 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors mt-4 sm:mt-0\"\r\n        >\r\n          <PlusIcon className=\"w-5 h-5\" />\r\n          <span>Add Expense</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"flex space-x-2\">\r\n        {[\r\n          { id: 'all', label: 'All', count: expenses.length },\r\n          { id: 'pending', label: 'Pending', count: expenses.filter(e => e.status === 'pending').length },\r\n          { id: 'partial', label: 'Partial', count: expenses.filter(e => e.status === 'partial').length },\r\n          { id: 'completed', label: 'Completed', count: expenses.filter(e => e.status === 'completed').length }\r\n        ].map((filterOption) => (\r\n          <button\r\n            key={filterOption.id}\r\n            onClick={() => setFilter(filterOption.id as any)}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              filter === filterOption.id\r\n                ? 'bg-yellow-500 text-white'\r\n                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            {filterOption.label} ({filterOption.count})\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Expenses List */}\r\n      <div className=\"space-y-4\">\r\n        {isLoading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-500\"></div>\r\n          </div>\r\n        ) : filteredExpenses.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <CurrencyDollarIcon className=\"w-16 h-16 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              No expenses found\r\n            </h3>\r\n            <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\r\n              {filter === 'all' \r\n                ? 'Create your first expense to get started.'\r\n                : `No ${filter} expenses found.`\r\n              }\r\n            </p>\r\n            {filter === 'all' && (\r\n              <button\r\n                onClick={() => setShowCreateModal(true)}\r\n                className=\"inline-flex items-center space-x-2 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors\"\r\n              >\r\n                <PlusIcon className=\"w-4 h-4\" />\r\n                <span>Add Expense</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          filteredExpenses.map((expense) => (\r\n            <motion.div\r\n              key={expense.id}\r\n              initial={{ opacity: 0, y: 20 }}\r\n              animate={{ opacity: 1, y: 0 }}\r\n              className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg border border-gray-200 dark:border-gray-700\"\r\n            >\r\n              {/* Expense Header */}\r\n              <div className=\"flex items-start justify-between mb-4\">\r\n                <div className=\"flex-1\">\r\n                  <div className=\"flex items-center space-x-3 mb-2\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                      {expense.title}\r\n                    </h3>\r\n                    <span className={`inline-flex items-center space-x-1 px-2 py-1 rounded-full text-xs font-medium ${getStatusColor(expense.status)}`}>\r\n                      {getStatusIcon(expense.status)}\r\n                      <span className=\"capitalize\">{expense.status}</span>\r\n                    </span>\r\n                  </div>\r\n                  \r\n                  {expense.description && (\r\n                    <p className=\"text-gray-600 dark:text-gray-300 mb-2\">\r\n                      {expense.description}\r\n                    </p>\r\n                  )}\r\n                  \r\n                  <div className=\"flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                    <span className=\"flex items-center space-x-1\">\r\n                      <CurrencyDollarIcon className=\"w-4 h-4\" />\r\n                      <span>${expense.amount.toFixed(2)}</span>\r\n                    </span>\r\n                    <span className=\"flex items-center space-x-1\">\r\n                      <UsersIcon className=\"w-4 h-4\" />\r\n                      <span>{expense.splits.length} people</span>\r\n                    </span>\r\n                    <span className=\"flex items-center space-x-1\">\r\n                      <ClockIcon className=\"w-4 h-4\" />\r\n                      <span>{formatDate(expense.createdAt)}</span>\r\n                    </span>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => setSelectedExpense(expense)}\r\n                    className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n                  >\r\n                    <PencilIcon className=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Splits */}\r\n              <div className=\"space-y-3\">\r\n                <h4 className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                  Payment Status\r\n                </h4>\r\n                \r\n                {expense.splits.map((split, index) => {\r\n                  const member = group.members.find(m => m.userId === split.userId);\r\n                  const isCurrentUser = split.userId === user?.id;\r\n                  const isPaid = split.isPaid;\r\n                  const remainingAmount = split.remainingAmount;\r\n                  \r\n                  return (\r\n                    <div key={index} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"w-8 h-8 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center\">\r\n                          <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                            {member?.firstName.charAt(0) || '?'}\r\n                          </span>\r\n                        </div>\r\n                        <div>\r\n                          <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                            {member ? `${member.firstName} ${member.lastName}` : 'Unknown User'}\r\n                          </p>\r\n                          <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                            {isPaid ? 'Paid' : `Owes $${remainingAmount.toFixed(2)}`}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                      \r\n                      <div className=\"flex items-center space-x-3\">\r\n                        <div className=\"text-right\">\r\n                          <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                            ${split.amount.toFixed(2)}\r\n                          </p>\r\n                          {split.paidAmount > 0 && (\r\n                            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                              Paid: ${split.paidAmount.toFixed(2)}\r\n                            </p>\r\n                          )}\r\n                        </div>\r\n                        \r\n                        {isCurrentUser && !isPaid && remainingAmount > 0 && (\r\n                          <button\r\n                            onClick={() => handlePaySplit(expense.id, split.userId, remainingAmount)}\r\n                            className=\"px-3 py-1 bg-green-500 hover:bg-green-600 text-white text-sm font-medium rounded-lg transition-colors\"\r\n                          >\r\n                            Pay Now\r\n                          </button>\r\n                        )}\r\n                        \r\n                        {isPaid && (\r\n                          <div className=\"text-green-600\">\r\n                            <CheckCircleIcon className=\"w-5 h-5\" />\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n\r\n              {/* Tags */}\r\n              {expense.tags.length > 0 && (\r\n                <div className=\"mt-4 flex flex-wrap gap-2\">\r\n                  {expense.tags.map((tag, index) => (\r\n                    <span\r\n                      key={index}\r\n                      className=\"px-2 py-1 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 text-xs rounded-full\"\r\n                    >\r\n                      #{tag}\r\n                    </span>\r\n                  ))}\r\n                </div>\r\n              )}\r\n            </motion.div>\r\n          ))\r\n        )}\r\n      </div>\r\n\r\n      {/* Create Expense Modal */}\r\n      {showCreateModal && (\r\n        <CreateExpenseModal\r\n          isOpen={showCreateModal}\r\n          onClose={() => setShowCreateModal(false)}\r\n          onExpenseCreated={handleCreateExpense}\r\n          group={group}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GroupExpenses;\r\n","import React, { useState } from 'react';\r\nimport { motion, AnimatePresence } from 'framer-motion';\r\nimport { useGroup } from '../../contexts/GroupContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { \r\n  XMarkIcon, \r\n  CurrencyDollarIcon, \r\n  UserIcon, \r\n  CalendarIcon,\r\n  TagIcon,\r\n  DocumentTextIcon,\r\n  ClockIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { Group } from '../../types/Social';\r\n\r\ninterface CreatePaymentRequestModalProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onRequestCreated: (requestData: any) => void;\r\n  group: Group;\r\n}\r\n\r\nconst CreatePaymentRequestModal: React.FC<CreatePaymentRequestModalProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onRequestCreated,\r\n  group \r\n}) => {\r\n  const { user } = useAuth();\r\n  const { createPaymentRequest, isLoading } = useGroup();\r\n  \r\n  const [formData, setFormData] = useState({\r\n    toUserId: '',\r\n    toGroupId: group.id,\r\n    amount: '',\r\n    description: '',\r\n    category: 'Food',\r\n    dueDate: '',\r\n    isRecurring: false,\r\n    recurringFrequency: 'monthly',\r\n    recurringInterval: 1,\r\n    attachments: [] as string[]\r\n  });\r\n\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const categories = [\r\n    'Food', 'Transportation', 'Entertainment', 'Utilities', 'Shopping',\r\n    'Travel', 'Healthcare', 'Education', 'Rent', 'Other'\r\n  ];\r\n\r\n  const recurringFrequencies = [\r\n    { id: 'daily', label: 'Daily' },\r\n    { id: 'weekly', label: 'Weekly' },\r\n    { id: 'monthly', label: 'Monthly' },\r\n    { id: 'yearly', label: 'Yearly' }\r\n  ];\r\n\r\n  const handleSubmit = async (e: React.FormEvent) => {\r\n    e.preventDefault();\r\n    if (!user) return;\r\n\r\n    setError(null);\r\n\r\n    // Validate form\r\n    if (!formData.amount || parseFloat(formData.amount) <= 0) {\r\n      setError('Please enter a valid amount');\r\n      return;\r\n    }\r\n\r\n    if (!formData.description.trim()) {\r\n      setError('Please enter a description');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const requestData = {\r\n        toUserId: formData.toUserId || undefined,\r\n        toGroupId: formData.toGroupId || undefined,\r\n        amount: parseFloat(formData.amount),\r\n        description: formData.description,\r\n        category: formData.category,\r\n        expiresAt: formData.dueDate ? new Date(formData.dueDate).toISOString() : new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(), // Default 7 days\r\n        isRecurring: formData.isRecurring,\r\n        recurringSettings: formData.isRecurring ? {\r\n          frequency: formData.recurringFrequency as any,\r\n          interval: formData.recurringInterval\r\n        } : undefined,\r\n        attachments: formData.attachments\r\n      };\r\n\r\n      onRequestCreated(requestData);\r\n      resetForm();\r\n    } catch (err) {\r\n      setError(err instanceof Error ? err.message : 'Failed to create payment request');\r\n    }\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setFormData({\r\n      toUserId: '',\r\n      toGroupId: group.id,\r\n      amount: '',\r\n      description: '',\r\n      category: 'Food',\r\n      dueDate: '',\r\n      isRecurring: false,\r\n      recurringFrequency: 'monthly',\r\n      recurringInterval: 1,\r\n      attachments: []\r\n    });\r\n    setError(null);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    resetForm();\r\n    onClose();\r\n  };\r\n\r\n  const handleFileUpload = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const files = e.target.files;\r\n    if (files) {\r\n      const fileNames = Array.from(files).map(file => file.name);\r\n      setFormData(prev => ({\r\n        ...prev,\r\n        attachments: [...prev.attachments, ...fileNames]\r\n      }));\r\n    }\r\n  };\r\n\r\n  const removeAttachment = (index: number) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      attachments: prev.attachments.filter((_, i) => i !== index)\r\n    }));\r\n  };\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <AnimatePresence>\r\n      <div className=\"fixed inset-0 z-50 overflow-y-auto\">\r\n        <div className=\"flex min-h-screen items-center justify-center p-4\">\r\n          <motion.div\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            exit={{ opacity: 0 }}\r\n            className=\"fixed inset-0 bg-black bg-opacity-50\"\r\n            onClick={handleClose}\r\n          />\r\n          \r\n          <motion.div\r\n            initial={{ opacity: 0, scale: 0.95, y: 20 }}\r\n            animate={{ opacity: 1, scale: 1, y: 0 }}\r\n            exit={{ opacity: 0, scale: 0.95, y: 20 }}\r\n            className=\"relative bg-white dark:bg-gray-800 rounded-xl shadow-xl max-w-2xl w-full max-h-[90vh] overflow-y-auto\"\r\n          >\r\n            {/* Header */}\r\n            <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex items-center space-x-3\">\r\n                <div className=\"w-10 h-10 bg-blue-100 dark:bg-blue-900 rounded-lg flex items-center justify-center\">\r\n                  <CurrencyDollarIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n                </div>\r\n                <div>\r\n                  <h2 className=\"text-xl font-semibold text-gray-900 dark:text-white\">\r\n                    Create Payment Request\r\n                  </h2>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Request money from {group.name} members\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              \r\n              <button\r\n                onClick={handleClose}\r\n                className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n              >\r\n                <XMarkIcon className=\"w-5 h-5\" />\r\n              </button>\r\n            </div>\r\n\r\n            {/* Form */}\r\n            <form onSubmit={handleSubmit} className=\"p-6 space-y-6\">\r\n              {error && (\r\n                <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg\">\r\n                  {error}\r\n                </div>\r\n              )}\r\n\r\n              {/* Basic Information */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Amount *\r\n                  </label>\r\n                  <div className=\"relative\">\r\n                    <div className=\"absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none\">\r\n                      <span className=\"text-gray-500 dark:text-gray-400\">$</span>\r\n                    </div>\r\n                    <input\r\n                      type=\"number\"\r\n                      step=\"0.01\"\r\n                      min=\"0\"\r\n                      required\r\n                      value={formData.amount}\r\n                      onChange={(e) => setFormData({ ...formData, amount: e.target.value })}\r\n                      className=\"w-full pl-8 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                      placeholder=\"0.00\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Category\r\n                  </label>\r\n                  <select\r\n                    value={formData.category}\r\n                    onChange={(e) => setFormData({ ...formData, category: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  >\r\n                    {categories.map((category) => (\r\n                      <option key={category} value={category}>\r\n                        {category}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              <div>\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Description *\r\n                </label>\r\n                <textarea\r\n                  required\r\n                  value={formData.description}\r\n                  onChange={(e) => setFormData({ ...formData, description: e.target.value })}\r\n                  rows={3}\r\n                  className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  placeholder=\"What is this payment for?\"\r\n                />\r\n              </div>\r\n\r\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Due Date\r\n                  </label>\r\n                  <input\r\n                    type=\"date\"\r\n                    value={formData.dueDate}\r\n                    onChange={(e) => setFormData({ ...formData, dueDate: e.target.value })}\r\n                    min={new Date().toISOString().split('T')[0]}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                    Recipient\r\n                  </label>\r\n                  <select\r\n                    value={formData.toUserId}\r\n                    onChange={(e) => setFormData({ ...formData, toUserId: e.target.value })}\r\n                    className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                  >\r\n                    <option value=\"\">All Group Members</option>\r\n                    {group.members\r\n                      .filter(member => member.userId !== user?.id && member.isActive)\r\n                      .map((member) => (\r\n                        <option key={member.userId} value={member.userId}>\r\n                          {member.firstName} {member.lastName}\r\n                        </option>\r\n                      ))}\r\n                  </select>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Recurring Settings */}\r\n              <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\r\n                <label className=\"flex items-center space-x-3 mb-4\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={formData.isRecurring}\r\n                    onChange={(e) => setFormData({ ...formData, isRecurring: e.target.checked })}\r\n                    className=\"w-4 h-4 text-blue-600 border-gray-300 rounded focus:ring-blue-500\"\r\n                  />\r\n                  <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                    Make this a recurring request\r\n                  </span>\r\n                </label>\r\n\r\n                {formData.isRecurring && (\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        Frequency\r\n                      </label>\r\n                      <select\r\n                        value={formData.recurringFrequency}\r\n                        onChange={(e) => setFormData({ ...formData, recurringFrequency: e.target.value })}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                      >\r\n                        {recurringFrequencies.map((freq) => (\r\n                          <option key={freq.id} value={freq.id}>\r\n                            {freq.label}\r\n                          </option>\r\n                        ))}\r\n                      </select>\r\n                    </div>\r\n\r\n                    <div>\r\n                      <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                        Interval\r\n                      </label>\r\n                      <input\r\n                        type=\"number\"\r\n                        min=\"1\"\r\n                        value={formData.recurringInterval}\r\n                        onChange={(e) => setFormData({ ...formData, recurringInterval: parseInt(e.target.value) || 1 })}\r\n                        className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-transparent dark:bg-gray-700 dark:text-white\"\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* File Attachments */}\r\n              <div className=\"border-t border-gray-200 dark:border-gray-700 pt-4\">\r\n                <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                  Attachments (Optional)\r\n                </label>\r\n                <div className=\"border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg p-4\">\r\n                  <input\r\n                    type=\"file\"\r\n                    multiple\r\n                    onChange={handleFileUpload}\r\n                    className=\"hidden\"\r\n                    id=\"file-upload\"\r\n                  />\r\n                  <label\r\n                    htmlFor=\"file-upload\"\r\n                    className=\"cursor-pointer flex flex-col items-center space-y-2\"\r\n                  >\r\n                    <DocumentTextIcon className=\"w-8 h-8 text-gray-400\" />\r\n                    <span className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      Click to upload files or drag and drop\r\n                    </span>\r\n                  </label>\r\n                </div>\r\n\r\n                {formData.attachments.length > 0 && (\r\n                  <div className=\"mt-3 space-y-2\">\r\n                    {formData.attachments.map((attachment, index) => (\r\n                      <div key={index} className=\"flex items-center justify-between p-2 bg-gray-50 dark:bg-gray-700 rounded\">\r\n                        <span className=\"text-sm text-gray-700 dark:text-gray-300\">\r\n                          {attachment}\r\n                        </span>\r\n                        <button\r\n                          type=\"button\"\r\n                          onClick={() => removeAttachment(index)}\r\n                          className=\"text-red-500 hover:text-red-700\"\r\n                        >\r\n                          <XMarkIcon className=\"w-4 h-4\" />\r\n                        </button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Actions */}\r\n              <div className=\"flex space-x-3 pt-4\">\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={handleClose}\r\n                  className=\"flex-1 px-4 py-2 text-gray-700 dark:text-gray-300 bg-gray-100 dark:bg-gray-700 hover:bg-gray-200 dark:hover:bg-gray-600 rounded-lg font-medium transition-colors\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  type=\"submit\"\r\n                  disabled={isLoading || !formData.amount || !formData.description.trim()}\r\n                  className=\"flex-1 px-4 py-2 bg-blue-500 hover:bg-blue-600 disabled:bg-gray-300 disabled:cursor-not-allowed text-white rounded-lg font-medium transition-colors\"\r\n                >\r\n                  {isLoading ? 'Creating...' : 'Create Request'}\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </motion.div>\r\n        </div>\r\n      </div>\r\n    </AnimatePresence>\r\n  );\r\n};\r\n\r\nexport default CreatePaymentRequestModal;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGroup } from '../../contexts/GroupContext';\r\nimport { useAuth } from '../../contexts/AuthContext';\r\nimport { \r\n  PlusIcon, \r\n  CurrencyDollarIcon, \r\n  ClockIcon, \r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ExclamationTriangleIcon,\r\n  UserIcon,\r\n  CalendarIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { Group, PaymentRequest } from '../../types/Social';\r\nimport CreatePaymentRequestModal from './CreatePaymentRequestModal';\r\n\r\ninterface PaymentRequestsProps {\r\n  group: Group;\r\n}\r\n\r\nconst PaymentRequests: React.FC<PaymentRequestsProps> = ({ group }) => {\r\n  const { user } = useAuth();\r\n  const { paymentRequests, createPaymentRequest, updatePaymentRequest, isLoading } = useGroup();\r\n  \r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [filter, setFilter] = useState<'all' | 'pending' | 'accepted' | 'declined' | 'expired'>('all');\r\n\r\n  const filteredRequests = paymentRequests.filter(request => {\r\n    if (filter === 'all') return true;\r\n    return request.status === filter;\r\n  });\r\n\r\n  const formatDate = (dateString: string) => {\r\n    return new Date(dateString).toLocaleDateString('en-US', {\r\n      month: 'short',\r\n      day: 'numeric',\r\n      year: 'numeric'\r\n    });\r\n  };\r\n\r\n  const formatTime = (dateString: string) => {\r\n    return new Date(dateString).toLocaleTimeString('en-US', {\r\n      hour: '2-digit',\r\n      minute: '2-digit'\r\n    });\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'accepted':\r\n        return 'text-green-600 bg-green-100 dark:bg-green-900 dark:text-green-300';\r\n      case 'declined':\r\n        return 'text-red-600 bg-red-100 dark:bg-red-900 dark:text-red-300';\r\n      case 'expired':\r\n        return 'text-gray-600 bg-gray-100 dark:bg-gray-700 dark:text-gray-300';\r\n      case 'cancelled':\r\n        return 'text-gray-600 bg-gray-100 dark:bg-gray-700 dark:text-gray-300';\r\n      case 'pending':\r\n        return 'text-yellow-600 bg-yellow-100 dark:bg-yellow-900 dark:text-yellow-300';\r\n      default:\r\n        return 'text-gray-600 bg-gray-100 dark:bg-gray-700 dark:text-gray-300';\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'accepted':\r\n        return <CheckCircleIcon className=\"w-4 h-4\" />;\r\n      case 'declined':\r\n        return <XCircleIcon className=\"w-4 h-4\" />;\r\n      case 'expired':\r\n        return <ExclamationTriangleIcon className=\"w-4 h-4\" />;\r\n      case 'cancelled':\r\n        return <XCircleIcon className=\"w-4 h-4\" />;\r\n      case 'pending':\r\n        return <ClockIcon className=\"w-4 h-4\" />;\r\n      default:\r\n        return <ClockIcon className=\"w-4 h-4\" />;\r\n    }\r\n  };\r\n\r\n  const isExpired = (expiresAt: string) => {\r\n    return new Date(expiresAt) < new Date();\r\n  };\r\n\r\n  const handleAcceptRequest = async (requestId: string) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      await updatePaymentRequest(requestId, {\r\n        status: 'accepted',\r\n        paidAt: new Date().toISOString()\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to accept payment request:', error);\r\n    }\r\n  };\r\n\r\n  const handleDeclineRequest = async (requestId: string) => {\r\n    if (!user) return;\r\n    \r\n    try {\r\n      await updatePaymentRequest(requestId, {\r\n        status: 'declined'\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to decline payment request:', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateRequest = async (requestData: any) => {\r\n    try {\r\n      await createPaymentRequest({\r\n        ...requestData,\r\n        fromUserId: user?.id || '',\r\n        currency: group.settings.currency\r\n      });\r\n      setShowCreateModal(false);\r\n    } catch (error) {\r\n      console.error('Failed to create payment request:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\r\n        <div>\r\n          <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n            Payment Requests\r\n          </h2>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            Send and manage payment requests\r\n          </p>\r\n        </div>\r\n        \r\n        <button\r\n          onClick={() => setShowCreateModal(true)}\r\n          className=\"flex items-center space-x-2 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors mt-4 sm:mt-0\"\r\n        >\r\n          <PlusIcon className=\"w-5 h-5\" />\r\n          <span>New Request</span>\r\n        </button>\r\n      </div>\r\n\r\n      {/* Filters */}\r\n      <div className=\"flex space-x-2\">\r\n        {[\r\n          { id: 'all', label: 'All', count: paymentRequests.length },\r\n          { id: 'pending', label: 'Pending', count: paymentRequests.filter(r => r.status === 'pending').length },\r\n          { id: 'accepted', label: 'Accepted', count: paymentRequests.filter(r => r.status === 'accepted').length },\r\n          { id: 'declined', label: 'Declined', count: paymentRequests.filter(r => r.status === 'declined').length },\r\n          { id: 'expired', label: 'Expired', count: paymentRequests.filter(r => isExpired(r.expiresAt)).length }\r\n        ].map((filterOption) => (\r\n          <button\r\n            key={filterOption.id}\r\n            onClick={() => setFilter(filterOption.id as any)}\r\n            className={`px-4 py-2 rounded-lg text-sm font-medium transition-colors ${\r\n              filter === filterOption.id\r\n                ? 'bg-yellow-500 text-white'\r\n                : 'bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600'\r\n            }`}\r\n          >\r\n            {filterOption.label} ({filterOption.count})\r\n          </button>\r\n        ))}\r\n      </div>\r\n\r\n      {/* Requests List */}\r\n      <div className=\"space-y-4\">\r\n        {isLoading ? (\r\n          <div className=\"flex items-center justify-center py-12\">\r\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-yellow-500\"></div>\r\n          </div>\r\n        ) : filteredRequests.length === 0 ? (\r\n          <div className=\"text-center py-12\">\r\n            <CurrencyDollarIcon className=\"w-16 h-16 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\r\n            <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n              No payment requests found\r\n            </h3>\r\n            <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\r\n              {filter === 'all' \r\n                ? 'Create your first payment request to get started.'\r\n                : `No ${filter} requests found.`\r\n              }\r\n            </p>\r\n            {filter === 'all' && (\r\n              <button\r\n                onClick={() => setShowCreateModal(true)}\r\n                className=\"inline-flex items-center space-x-2 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors\"\r\n              >\r\n                <PlusIcon className=\"w-4 h-4\" />\r\n                <span>New Request</span>\r\n              </button>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          filteredRequests.map((request) => {\r\n            const isFromCurrentUser = request.fromUserId === user?.id;\r\n            const isExpiredRequest = isExpired(request.expiresAt);\r\n            const canRespond = !isFromCurrentUser && request.status === 'pending' && !isExpiredRequest;\r\n            \r\n            return (\r\n              <motion.div\r\n                key={request.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg border border-gray-200 dark:border-gray-700\"\r\n              >\r\n                {/* Request Header */}\r\n                <div className=\"flex items-start justify-between mb-4\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"flex items-center space-x-3 mb-2\">\r\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                        {request.description}\r\n                      </h3>\r\n                      <span className={`inline-flex items-center space-x-1 px-2 py-1 rounded-full text-xs font-medium ${\r\n                        isExpiredRequest ? getStatusColor('expired') : getStatusColor(request.status)\r\n                      }`}>\r\n                        {getStatusIcon(isExpiredRequest ? 'expired' : request.status)}\r\n                        <span className=\"capitalize\">\r\n                          {isExpiredRequest ? 'Expired' : request.status}\r\n                        </span>\r\n                      </span>\r\n                    </div>\r\n                    \r\n                    <div className=\"flex items-center space-x-4 text-sm text-gray-500 dark:text-gray-400\">\r\n                      <span className=\"flex items-center space-x-1\">\r\n                        <CurrencyDollarIcon className=\"w-4 h-4\" />\r\n                        <span>${request.amount.toFixed(2)}</span>\r\n                      </span>\r\n                      <span className=\"flex items-center space-x-1\">\r\n                        <UserIcon className=\"w-4 h-4\" />\r\n                        <span>\r\n                          {isFromCurrentUser ? 'You requested' : 'Requested from you'}\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"flex items-center space-x-1\">\r\n                        <CalendarIcon className=\"w-4 h-4\" />\r\n                        <span>{formatDate(request.createdAt)}</span>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                  \r\n                  <div className=\"text-right\">\r\n                    <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      ${request.amount.toFixed(2)}\r\n                    </div>\r\n                    <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      {request.currency}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                {/* Request Details */}\r\n                <div className=\"space-y-3\">\r\n                  <div className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                        Category\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {request.category}\r\n                      </p>\r\n                    </div>\r\n                    <div>\r\n                      <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                        Due Date\r\n                      </p>\r\n                      <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                        {formatDate(request.expiresAt)}\r\n                      </p>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {request.isRecurring && request.recurringSettings && (\r\n                    <div className=\"p-3 bg-blue-50 dark:bg-blue-900 rounded-lg\">\r\n                      <p className=\"text-sm font-medium text-blue-900 dark:text-blue-300\">\r\n                        Recurring Request\r\n                      </p>\r\n                      <p className=\"text-sm text-blue-700 dark:text-blue-400\">\r\n                        {request.recurringSettings.frequency} - \r\n                        Every {request.recurringSettings.interval} {request.recurringSettings.frequency}\r\n                      </p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {request.attachments && request.attachments.length > 0 && (\r\n                    <div className=\"p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                      <p className=\"text-sm font-medium text-gray-900 dark:text-white mb-2\">\r\n                        Attachments\r\n                      </p>\r\n                      <div className=\"flex space-x-2\">\r\n                        {request.attachments.map((attachment, index) => (\r\n                          <span\r\n                            key={index}\r\n                            className=\"px-2 py-1 bg-gray-200 dark:bg-gray-600 text-gray-700 dark:text-gray-300 text-xs rounded\"\r\n                          >\r\n                            Attachment {index + 1}\r\n                          </span>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n                  )}\r\n                </div>\r\n\r\n                {/* Actions */}\r\n                {canRespond && (\r\n                  <div className=\"flex space-x-3 mt-4\">\r\n                    <button\r\n                      onClick={() => handleAcceptRequest(request.id)}\r\n                      className=\"flex-1 px-4 py-2 bg-green-500 hover:bg-green-600 text-white rounded-lg font-medium transition-colors\"\r\n                    >\r\n                      Accept & Pay\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeclineRequest(request.id)}\r\n                      className=\"flex-1 px-4 py-2 bg-red-500 hover:bg-red-600 text-white rounded-lg font-medium transition-colors\"\r\n                    >\r\n                      Decline\r\n                    </button>\r\n                  </div>\r\n                )}\r\n\r\n                {isFromCurrentUser && request.status === 'pending' && !isExpiredRequest && (\r\n                  <div className=\"mt-4 p-3 bg-yellow-50 dark:bg-yellow-900 rounded-lg\">\r\n                    <p className=\"text-sm text-yellow-800 dark:text-yellow-200\">\r\n                      Waiting for response from recipient\r\n                    </p>\r\n                  </div>\r\n                )}\r\n\r\n                {isExpiredRequest && (\r\n                  <div className=\"mt-4 p-3 bg-red-50 dark:bg-red-900 rounded-lg\">\r\n                    <p className=\"text-sm text-red-800 dark:text-red-200\">\r\n                      This request has expired\r\n                    </p>\r\n                  </div>\r\n                )}\r\n              </motion.div>\r\n            );\r\n          })\r\n        )}\r\n      </div>\r\n\r\n      {/* Create Payment Request Modal */}\r\n      {showCreateModal && (\r\n        <CreatePaymentRequestModal\r\n          isOpen={showCreateModal}\r\n          onClose={() => setShowCreateModal(false)}\r\n          onRequestCreated={handleCreateRequest}\r\n          group={group}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentRequests;\r\n","import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { useGroup } from '../contexts/GroupContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { \r\n  PlusIcon, \r\n  UserGroupIcon, \r\n  ChartBarIcon,\r\n  BellIcon,\r\n  Cog6ToothIcon,\r\n  ArrowRightIcon\r\n} from '@heroicons/react/24/outline';\r\nimport GroupCard from '../components/groups/GroupCard';\r\nimport CreateGroupModal from '../components/groups/CreateGroupModal';\r\nimport GroupAnalytics from '../components/groups/GroupAnalytics';\r\nimport GroupExpenses from '../components/groups/GroupExpenses';\r\nimport PaymentRequests from '../components/groups/PaymentRequests';\r\n\r\nconst Groups: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const { \r\n    groups, \r\n    currentGroup, \r\n    setCurrentGroup, \r\n    isLoading, \r\n    error,\r\n    loadGroups \r\n  } = useGroup();\r\n  \r\n  const [showCreateModal, setShowCreateModal] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'expenses' | 'analytics' | 'requests'>('overview');\r\n\r\n  const handleGroupSelect = (group: any) => {\r\n    setCurrentGroup(group);\r\n    setActiveTab('overview');\r\n  };\r\n\r\n  const handleCreateGroup = () => {\r\n    setShowCreateModal(true);\r\n  };\r\n\r\n  const handleGroupCreated = () => {\r\n    setShowCreateModal(false);\r\n    loadGroups();\r\n  };\r\n\r\n  if (isLoading && groups.length === 0) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-96\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-yellow-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"max-w-7xl mx-auto\">\r\n      <motion.div\r\n        initial={{ opacity: 0, y: 20 }}\r\n        animate={{ opacity: 1, y: 0 }}\r\n        transition={{ duration: 0.6 }}\r\n        className=\"mb-8\"\r\n      >\r\n        <div className=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6\">\r\n          <div>\r\n            <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white mb-2\">\r\n              👥 Groups\r\n            </h1>\r\n            <p className=\"text-gray-600 dark:text-gray-300\">\r\n              Manage shared expenses and group payments\r\n            </p>\r\n          </div>\r\n          \r\n          <button\r\n            onClick={handleCreateGroup}\r\n            className=\"flex items-center space-x-2 px-6 py-3 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors mt-4 sm:mt-0\"\r\n          >\r\n            <PlusIcon className=\"w-5 h-5\" />\r\n            <span>Create Group</span>\r\n          </button>\r\n        </div>\r\n\r\n        {error && (\r\n          <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded-lg mb-6\">\r\n            {error}\r\n          </div>\r\n        )}\r\n\r\n        {/* Groups Grid */}\r\n        {!currentGroup ? (\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n            {groups.map((group) => (\r\n              <GroupCard\r\n                key={group.id}\r\n                group={group}\r\n                onClick={() => handleGroupSelect(group)}\r\n              />\r\n            ))}\r\n            \r\n            {groups.length === 0 && (\r\n              <div className=\"col-span-full text-center py-12\">\r\n                <UserGroupIcon className=\"w-16 h-16 text-gray-300 dark:text-gray-600 mx-auto mb-4\" />\r\n                <h3 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n                  No groups yet\r\n                </h3>\r\n                <p className=\"text-gray-500 dark:text-gray-400 mb-6\">\r\n                  Create your first group to start sharing expenses with friends and family.\r\n                </p>\r\n                <button\r\n                  onClick={handleCreateGroup}\r\n                  className=\"inline-flex items-center space-x-2 px-4 py-2 bg-yellow-500 hover:bg-yellow-600 text-white rounded-lg font-medium transition-colors\"\r\n                >\r\n                  <PlusIcon className=\"w-4 h-4\" />\r\n                  <span>Create Group</span>\r\n                </button>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ) : (\r\n          <div className=\"space-y-6\">\r\n            {/* Group Header */}\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n              <div className=\"flex items-center justify-between mb-4\">\r\n                <div className=\"flex items-center space-x-4\">\r\n                  <div \r\n                    className=\"w-12 h-12 rounded-full flex items-center justify-center text-white font-bold text-lg\"\r\n                    style={{ backgroundColor: currentGroup.color }}\r\n                  >\r\n                    {currentGroup.name.charAt(0)}\r\n                  </div>\r\n                  <div>\r\n                    <h2 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                      {currentGroup.name}\r\n                    </h2>\r\n                    <p className=\"text-gray-600 dark:text-gray-300\">\r\n                      {currentGroup.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                \r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => setCurrentGroup(null)}\r\n                    className=\"p-2 text-gray-400 hover:text-gray-600 dark:hover:text-gray-300 transition-colors\"\r\n                  >\r\n                    <ArrowRightIcon className=\"w-5 h-5\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              {/* Group Stats */}\r\n              <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                    ${currentGroup.totalExpenses.toFixed(2)}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Total Expenses\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                    {currentGroup.totalTransactions}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Transactions\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                    {currentGroup.members.length}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Members\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-center\">\r\n                  <div className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                    {currentGroup.members.filter(m => m.isActive).length}\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    Active\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            {/* Navigation Tabs */}\r\n            <div className=\"flex space-x-1 bg-gray-100 dark:bg-gray-700 rounded-lg p-1\">\r\n              {[\r\n                { id: 'overview', label: 'Overview', icon: UserGroupIcon },\r\n                { id: 'expenses', label: 'Expenses', icon: ChartBarIcon },\r\n                { id: 'analytics', label: 'Analytics', icon: ChartBarIcon },\r\n                { id: 'requests', label: 'Requests', icon: BellIcon }\r\n              ].map((tab) => {\r\n                const Icon = tab.icon;\r\n                return (\r\n                  <button\r\n                    key={tab.id}\r\n                    onClick={() => setActiveTab(tab.id as any)}\r\n                    className={`flex items-center space-x-2 px-4 py-2 rounded-md text-sm font-medium transition-colors ${\r\n                      activeTab === tab.id\r\n                        ? 'bg-white dark:bg-gray-600 text-gray-900 dark:text-white shadow-sm'\r\n                        : 'text-gray-600 dark:text-gray-300 hover:text-gray-900 dark:hover:text-white'\r\n                    }`}\r\n                  >\r\n                    <Icon className=\"w-4 h-4\" />\r\n                    <span>{tab.label}</span>\r\n                  </button>\r\n                );\r\n              })}\r\n            </div>\r\n\r\n            {/* Tab Content */}\r\n            <div className=\"mt-6\">\r\n              {activeTab === 'overview' && (\r\n                <div className=\"space-y-6\">\r\n                  {/* Recent Expenses */}\r\n                  <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n                    <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                      Recent Expenses\r\n                    </h3>\r\n                    <div className=\"space-y-3\">\r\n                      {currentGroup.members.slice(0, 3).map((member) => (\r\n                        <div key={member.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                          <div className=\"flex items-center space-x-3\">\r\n                            <div className=\"w-8 h-8 bg-gray-300 dark:bg-gray-600 rounded-full flex items-center justify-center\">\r\n                              <span className=\"text-sm font-medium text-gray-700 dark:text-gray-300\">\r\n                                {member.firstName.charAt(0)}\r\n                              </span>\r\n                            </div>\r\n                            <div>\r\n                              <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                                {member.firstName} {member.lastName}\r\n                              </p>\r\n                              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                                {member.role}\r\n                              </p>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"text-right\">\r\n                            <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                              ${member.totalContributed.toFixed(2)}\r\n                            </p>\r\n                            <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                              contributed\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Quick Actions */}\r\n                  <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\r\n                    <button\r\n                      onClick={() => setActiveTab('expenses')}\r\n                      className=\"p-6 bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-xl transition-shadow text-left\"\r\n                    >\r\n                      <ChartBarIcon className=\"w-8 h-8 text-blue-500 mb-3\" />\r\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                        Manage Expenses\r\n                      </h3>\r\n                      <p className=\"text-gray-600 dark:text-gray-300\">\r\n                        Add new expenses and track payments\r\n                      </p>\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() => setActiveTab('requests')}\r\n                      className=\"p-6 bg-white dark:bg-gray-800 rounded-xl shadow-lg hover:shadow-xl transition-shadow text-left\"\r\n                    >\r\n                      <BellIcon className=\"w-8 h-8 text-green-500 mb-3\" />\r\n                      <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                        Payment Requests\r\n                      </h3>\r\n                      <p className=\"text-gray-600 dark:text-gray-300\">\r\n                        Send and manage payment requests\r\n                      </p>\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              )}\r\n\r\n              {activeTab === 'expenses' && (\r\n                <GroupExpenses group={currentGroup} />\r\n              )}\r\n\r\n              {activeTab === 'analytics' && (\r\n                <GroupAnalytics group={currentGroup} />\r\n              )}\r\n\r\n              {activeTab === 'requests' && (\r\n                <PaymentRequests group={currentGroup} />\r\n              )}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n\r\n      {/* Create Group Modal */}\r\n      {showCreateModal && (\r\n        <CreateGroupModal\r\n          isOpen={showCreateModal}\r\n          onClose={() => setShowCreateModal(false)}\r\n          onGroupCreated={handleGroupCreated}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n"],"names":["_ref","group","onClick","_jsxs","motion","div","whileHover","y","scale","whileTap","className","children","_jsx","style","backgroundColor","color","name","charAt","description","concat","isActive","CurrencyDollarIcon","totalExpenses","toFixed","ChartBarIcon","totalTransactions","UsersIcon","members","length","ClockIcon","dateString","updatedAt","Date","toLocaleDateString","month","day","year","slice","map","member","index","zIndex","firstName","id","settings","privacy","currency","isOpen","onClose","onGroupCreated","user","useAuth","createGroup","isLoading","useGroup","formData","setFormData","useState","allowMemberInvites","requireApprovalForExpenses","defaultSplitMethod","showAdvanced","setShowAdvanced","error","setError","resetForm","handleClose","AnimatePresence","initial","opacity","animate","exit","UserGroupIcon","XMarkIcon","onSubmit","async","e","preventDefault","groupData","createdBy","userId","email","lastName","profilePicture","role","joinedAt","toISOString","totalContributed","totalOwed","balance","notifications","newExpenses","paymentsReceived","groupUpdates","reminders","err","Error","message","type","required","value","onChange","_objectSpread","target","placeholder","rows","Cog6ToothIcon","EyeSlashIcon","EyeIcon","height","code","symbol","checked","disabled","trim","getGroupAnalytics","analytics","setAnalytics","selectedPeriod","setSelectedPeriod","colors","useEffect","loadAnalytics","data","formatCurrency","amount","Intl","NumberFormat","format","label","period","transition","delay","ArrowTrendingUpIcon","averageExpense","topCategories","ResponsiveContainer","width","PieChart","Pie","cx","cy","labelLine","_ref2","category","percentage","outerRadius","fill","dataKey","entry","Cell","Tooltip","formatter","Number","topSpenders","BarChart","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","memberBalances","totalOwing","netBalance","ArrowUpIcon","ArrowDownIcon","insights","insight","onExpenseCreated","createExpense","title","splitMethod","dueDate","tags","receipt","splits","setSplits","React","calculateSplits","parseFloat","activeMembers","filter","equalAmount","isPaid","paidAmount","remainingAmount","totalSplitAmount","reduce","sum","split","expenseAmount","Math","abs","expenseData","undefined","tag","step","min","method","find","m","max","updateSplitPercentage","prev","updateSplitAmount","expenses","updateExpense","payExpenseSplit","showCreateModal","setShowCreateModal","selectedExpense","setSelectedExpense","setFilter","filteredExpenses","expense","status","getStatusColor","getStatusIcon","CheckCircleIcon","XCircleIcon","PlusIcon","count","filterOption","createdAt","PencilIcon","isCurrentUser","expenseId","console","handlePaySplit","CreateExpenseModal","groupId","onRequestCreated","createPaymentRequest","toUserId","toGroupId","isRecurring","recurringFrequency","recurringInterval","attachments","requestData","expiresAt","now","recurringSettings","frequency","interval","freq","parseInt","multiple","files","fileNames","Array","from","file","htmlFor","DocumentTextIcon","attachment","_","i","removeAttachment","paymentRequests","updatePaymentRequest","filteredRequests","request","formatDate","ExclamationTriangleIcon","isExpired","r","isFromCurrentUser","fromUserId","isExpiredRequest","canRespond","UserIcon","CalendarIcon","requestId","paidAt","handleAcceptRequest","handleDeclineRequest","CreatePaymentRequestModal","Groups","groups","currentGroup","setCurrentGroup","loadGroups","activeTab","setActiveTab","handleCreateGroup","duration","ArrowRightIcon","icon","BellIcon","tab","Icon","GroupExpenses","GroupAnalytics","PaymentRequests","GroupCard","handleGroupSelect","CreateGroupModal","handleGroupCreated"],"sourceRoot":""}