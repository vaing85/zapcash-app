{"version":3,"file":"static/js/254.fbf02370.chunk.js","mappings":"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","sources":["components/ComplianceDashboard.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardContent,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  Chip,\r\n  Button,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  TextField,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Alert,\r\n  CircularProgress,\r\n  Tabs,\r\n  Tab,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemIcon,\r\n  Divider\r\n} from '@mui/material';\r\nimport {\r\n  ExpandMore,\r\n  Security,\r\n  Warning,\r\n  CheckCircle,\r\n  Error,\r\n  TrendingUp,\r\n  People,\r\n  AttachMoney,\r\n  Assessment,\r\n  Download,\r\n  Refresh,\r\n  FilterList,\r\n  Search\r\n} from '@mui/icons-material';\r\n\r\ninterface ComplianceMetrics {\r\n  totalUsers: number;\r\n  verifiedUsers: number;\r\n  pendingVerifications: number;\r\n  suspiciousActivities: number;\r\n  totalTransactions: number;\r\n  totalVolume: number;\r\n  complianceScore: number;\r\n  ctrFilingCount: number;\r\n  sarFilingCount: number;\r\n}\r\n\r\ninterface SuspiciousActivity {\r\n  id: string;\r\n  userId: string;\r\n  type: string;\r\n  amount: number;\r\n  currency: string;\r\n  riskScore: number;\r\n  status: 'pending' | 'reviewed' | 'resolved';\r\n  createdAt: string;\r\n  description: string;\r\n}\r\n\r\ninterface ComplianceReport {\r\n  id: string;\r\n  type: string;\r\n  period: {\r\n    start: string;\r\n    end: string;\r\n  };\r\n  status: 'draft' | 'submitted' | 'approved';\r\n  createdAt: string;\r\n  generatedBy: string;\r\n}\r\n\r\nconst ComplianceDashboard: React.FC = () => {\r\n  const [metrics, setMetrics] = useState<ComplianceMetrics | null>(null);\r\n  const [suspiciousActivities, setSuspiciousActivities] = useState<SuspiciousActivity[]>([]);\r\n  const [reports, setReports] = useState<ComplianceReport[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n  const [selectedTab, setSelectedTab] = useState(0);\r\n  const [reportDialogOpen, setReportDialogOpen] = useState(false);\r\n  const [selectedActivity, setSelectedActivity] = useState<SuspiciousActivity | null>(null);\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadComplianceData();\r\n  }, []);\r\n\r\n  const loadComplianceData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Load metrics\r\n      const metricsResponse = await fetch('/api/compliance/metrics');\r\n      const metricsData = await metricsResponse.json();\r\n      setMetrics(metricsData);\r\n\r\n      // Load suspicious activities\r\n      const activitiesResponse = await fetch('/api/compliance/suspicious-activities');\r\n      const activitiesData = await activitiesResponse.json();\r\n      setSuspiciousActivities(activitiesData);\r\n\r\n      // Load reports\r\n      const reportsResponse = await fetch('/api/compliance/reports');\r\n      const reportsData = await reportsResponse.json();\r\n      setReports(reportsData);\r\n    } catch (err) {\r\n      setError('Failed to load compliance data');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleGenerateReport = async (reportType: string, startDate: string, endDate: string) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await fetch('/api/compliance/reports/generate', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          startDate,\r\n          endDate,\r\n          reportType\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      if (result.success) {\r\n        setReports(prev => [...prev, result.report]);\r\n        setReportDialogOpen(false);\r\n      } else {\r\n        setError('Failed to generate report');\r\n      }\r\n    } catch (err) {\r\n      setError('Network error generating report');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleReviewActivity = async (activityId: string, action: string) => {\r\n    try {\r\n      const response = await fetch(`/api/compliance/suspicious-activities/${activityId}/review`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ action })\r\n      });\r\n\r\n      if (response.ok) {\r\n        setSuspiciousActivities(prev =>\r\n          prev.map(activity =>\r\n            activity.id === activityId\r\n              ? { ...activity, status: action as any }\r\n              : activity\r\n          )\r\n        );\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to update activity status');\r\n    }\r\n  };\r\n\r\n  const filteredActivities = suspiciousActivities.filter(activity => {\r\n    const matchesStatus = filterStatus === 'all' || activity.status === filterStatus;\r\n    const matchesSearch = searchTerm === '' || \r\n      activity.userId.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      activity.type.toLowerCase().includes(searchTerm.toLowerCase());\r\n    return matchesStatus && matchesSearch;\r\n  });\r\n\r\n  const getRiskColor = (riskScore: number) => {\r\n    if (riskScore >= 80) return 'error';\r\n    if (riskScore >= 60) return 'warning';\r\n    if (riskScore >= 40) return 'info';\r\n    return 'success';\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'pending': return 'warning';\r\n      case 'reviewed': return 'info';\r\n      case 'resolved': return 'success';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  if (loading && !metrics) {\r\n    return (\r\n      <Box display=\"flex\" justifyContent=\"center\" alignItems=\"center\" minHeight=\"400px\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n        <Typography variant=\"h4\">\r\n          <Security sx={{ mr: 2, verticalAlign: 'middle' }} />\r\n          Compliance Dashboard\r\n        </Typography>\r\n        <Box>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<Refresh />}\r\n            onClick={loadComplianceData}\r\n            sx={{ mr: 2 }}\r\n          >\r\n            Refresh\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<Assessment />}\r\n            onClick={() => setReportDialogOpen(true)}\r\n          >\r\n            Generate Report\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      {error && (\r\n        <Alert severity=\"error\" sx={{ mb: 3 }} onClose={() => setError(null)}>\r\n          {error}\r\n        </Alert>\r\n      )}\r\n\r\n      {/* Metrics Cards */}\r\n      {metrics && (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 gap-6 mb-6\">\r\n          <div>\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <People color=\"primary\" sx={{ mr: 2 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{metrics.totalUsers}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Total Users\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-span-1 sm:col-span-2 md:col-span-3\">\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <CheckCircle color=\"success\" sx={{ mr: 2 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{metrics.verifiedUsers}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Verified Users\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-span-1 sm:col-span-2 md:col-span-3\">\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <Warning color=\"warning\" sx={{ mr: 2 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{metrics.suspiciousActivities}</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Suspicious Activities\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n          <div className=\"col-span-1 sm:col-span-2 md:col-span-3\">\r\n            <Card>\r\n              <CardContent>\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                  <TrendingUp color=\"info\" sx={{ mr: 2 }} />\r\n                  <Box>\r\n                    <Typography variant=\"h4\">{metrics.complianceScore}%</Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Compliance Score\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </CardContent>\r\n            </Card>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      {/* Tabs */}\r\n      <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>\r\n        <Tabs value={selectedTab} onChange={(e, newValue) => setSelectedTab(newValue)}>\r\n          <Tab label=\"Suspicious Activities\" />\r\n          <Tab label=\"Compliance Reports\" />\r\n          <Tab label=\"KYC Status\" />\r\n          <Tab label=\"Transaction Monitoring\" />\r\n        </Tabs>\r\n      </Box>\r\n\r\n      {/* Suspicious Activities Tab */}\r\n      {selectedTab === 0 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Typography variant=\"h6\">Suspicious Activities</Typography>\r\n              <Box display=\"flex\" gap={2}>\r\n                <TextField\r\n                  size=\"small\"\r\n                  placeholder=\"Search activities...\"\r\n                  value={searchTerm}\r\n                  onChange={(e) => setSearchTerm(e.target.value)}\r\n                  InputProps={{\r\n                    startAdornment: <Search sx={{ mr: 1, color: 'text.secondary' }} />\r\n                  }}\r\n                />\r\n                <FormControl size=\"small\" sx={{ minWidth: 120 }}>\r\n                  <InputLabel>Status</InputLabel>\r\n                  <Select\r\n                    value={filterStatus}\r\n                    onChange={(e) => setFilterStatus(e.target.value)}\r\n                  >\r\n                    <MenuItem value=\"all\">All</MenuItem>\r\n                    <MenuItem value=\"pending\">Pending</MenuItem>\r\n                    <MenuItem value=\"reviewed\">Reviewed</MenuItem>\r\n                    <MenuItem value=\"resolved\">Resolved</MenuItem>\r\n                  </Select>\r\n                </FormControl>\r\n              </Box>\r\n            </Box>\r\n\r\n            <TableContainer component={Paper}>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>User ID</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell>Amount</TableCell>\r\n                    <TableCell>Risk Score</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Actions</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {filteredActivities.map((activity) => (\r\n                    <TableRow key={activity.id}>\r\n                      <TableCell>{activity.userId}</TableCell>\r\n                      <TableCell>{activity.type}</TableCell>\r\n                      <TableCell>\r\n                        {activity.currency} {activity.amount.toLocaleString()}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={activity.riskScore}\r\n                          color={getRiskColor(activity.riskScore)}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={activity.status}\r\n                          color={getStatusColor(activity.status)}\r\n                          size=\"small\"\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {new Date(activity.createdAt).toLocaleDateString()}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Button\r\n                          size=\"small\"\r\n                          onClick={() => setSelectedActivity(activity)}\r\n                        >\r\n                          Review\r\n                        </Button>\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Compliance Reports Tab */}\r\n      {selectedTab === 1 && (\r\n        <Card>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Compliance Reports\r\n            </Typography>\r\n            <List>\r\n              {reports.map((report) => (\r\n                <ListItem key={report.id}>\r\n                  <ListItemIcon>\r\n                    <Assessment />\r\n                  </ListItemIcon>\r\n                  <ListItemText\r\n                    primary={`${report.type} Report`}\r\n                    secondary={`${report.period.start} to ${report.period.end} - ${report.status}`}\r\n                  />\r\n                  <Button\r\n                    size=\"small\"\r\n                    startIcon={<Download />}\r\n                    onClick={() => {/* Download report */}}\r\n                  >\r\n                    Download\r\n                  </Button>\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Activity Review Dialog */}\r\n      <Dialog open={!!selectedActivity} onClose={() => setSelectedActivity(null)} maxWidth=\"md\" fullWidth>\r\n        <DialogTitle>Review Suspicious Activity</DialogTitle>\r\n        <DialogContent>\r\n          {selectedActivity && (\r\n            <Box>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Activity Details\r\n              </Typography>\r\n              <div className=\"grid grid-cols-12 gap-6\">\r\n                <div className=\"col-span-6\">\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    User ID\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {selectedActivity.userId}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"col-span-6\">\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Type\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {selectedActivity.type}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"col-span-6\">\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Amount\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {selectedActivity.currency} {selectedActivity.amount.toLocaleString()}\r\n                  </Typography>\r\n                </div>\r\n                <div className=\"col-span-6\">\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Risk Score\r\n                  </Typography>\r\n                  <Chip\r\n                    label={selectedActivity.riskScore}\r\n                    color={getRiskColor(selectedActivity.riskScore)}\r\n                  />\r\n                </div>\r\n                <div className=\"col-span-12\">\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Description\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    {selectedActivity.description}\r\n                  </Typography>\r\n                </div>\r\n              </div>\r\n            </Box>\r\n          )}\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setSelectedActivity(null)}>Cancel</Button>\r\n          <Button\r\n            color=\"warning\"\r\n            onClick={() => {\r\n              if (selectedActivity) {\r\n                handleReviewActivity(selectedActivity.id, 'reviewed');\r\n                setSelectedActivity(null);\r\n              }\r\n            }}\r\n          >\r\n            Mark as Reviewed\r\n          </Button>\r\n          <Button\r\n            color=\"success\"\r\n            onClick={() => {\r\n              if (selectedActivity) {\r\n                handleReviewActivity(selectedActivity.id, 'resolved');\r\n                setSelectedActivity(null);\r\n              }\r\n            }}\r\n          >\r\n            Resolve\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n\r\n      {/* Report Generation Dialog */}\r\n      <Dialog open={reportDialogOpen} onClose={() => setReportDialogOpen(false)} maxWidth=\"sm\" fullWidth>\r\n        <DialogTitle>Generate Compliance Report</DialogTitle>\r\n        <DialogContent>\r\n          <Box sx={{ pt: 2 }}>\r\n            <FormControl fullWidth sx={{ mb: 2 }}>\r\n              <InputLabel>Report Type</InputLabel>\r\n              <Select\r\n                value=\"comprehensive\"\r\n                label=\"Report Type\"\r\n              >\r\n                <MenuItem value=\"comprehensive\">Comprehensive Report</MenuItem>\r\n                <MenuItem value=\"suspicious_activity\">Suspicious Activity Report</MenuItem>\r\n                <MenuItem value=\"kyc_status\">KYC Status Report</MenuItem>\r\n                <MenuItem value=\"transaction_summary\">Transaction Summary</MenuItem>\r\n              </Select>\r\n            </FormControl>\r\n            <TextField\r\n              fullWidth\r\n              label=\"Start Date\"\r\n              type=\"date\"\r\n              InputLabelProps={{ shrink: true }}\r\n              sx={{ mb: 2 }}\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"End Date\"\r\n              type=\"date\"\r\n              InputLabelProps={{ shrink: true }}\r\n            />\r\n          </Box>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={() => setReportDialogOpen(false)}>Cancel</Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => {\r\n              // Generate report with current form values\r\n              handleGenerateReport('comprehensive', '2025-01-01', '2025-12-31');\r\n            }}\r\n            disabled={loading}\r\n          >\r\n            {loading ? <CircularProgress size={20} /> : 'Generate Report'}\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ComplianceDashboard;\r\n\r\n\r\n"],"names":["ComplianceDashboard","metrics","setMetrics","useState","suspiciousActivities","setSuspiciousActivities","reports","setReports","loading","setLoading","error","setError","selectedTab","setSelectedTab","reportDialogOpen","setReportDialogOpen","selectedActivity","setSelectedActivity","filterStatus","setFilterStatus","searchTerm","setSearchTerm","useEffect","loadComplianceData","async","metricsResponse","fetch","metricsData","json","activitiesResponse","activitiesData","reportsResponse","reportsData","err","handleReviewActivity","activityId","action","concat","method","headers","body","JSON","stringify","ok","prev","map","activity","id","_objectSpread","status","filteredActivities","filter","matchesStatus","matchesSearch","userId","toLowerCase","includes","type","getRiskColor","riskScore","getStatusColor","_jsx","Box","display","justifyContent","alignItems","minHeight","children","CircularProgress","_jsxs","sx","p","mb","Typography","variant","Security","mr","verticalAlign","Button","startIcon","Refresh","onClick","Assessment","Alert","severity","onClose","className","Card","CardContent","People","color","totalUsers","CheckCircle","verifiedUsers","Warning","TrendingUp","complianceScore","borderBottom","borderColor","Tabs","value","onChange","e","newValue","Tab","label","gap","TextField","size","placeholder","target","InputProps","startAdornment","Search","FormControl","minWidth","InputLabel","Select","MenuItem","TableContainer","component","Paper","Table","TableHead","TableRow","TableCell","TableBody","currency","amount","toLocaleString","Chip","Date","createdAt","toLocaleDateString","gutterBottom","List","report","ListItem","ListItemIcon","ListItemText","primary","secondary","period","start","end","Download","Dialog","open","maxWidth","fullWidth","DialogTitle","DialogContent","description","DialogActions","pt","InputLabelProps","shrink","reportType","startDate","endDate","response","result","success","handleGenerateReport","disabled"],"sourceRoot":""}