{"version":3,"file":"static/js/331.66f8999f.chunk.js","mappings":"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","sources":["components/BusinessQRGenerator.tsx","pages/MerchantDashboard.tsx","../node_modules/@heroicons/react/24/outline/esm/ClockIcon.js","../node_modules/@heroicons/react/24/outline/esm/XCircleIcon.js","../node_modules/@heroicons/react/24/outline/esm/CalendarIcon.js","../node_modules/@heroicons/react/24/outline/esm/PlusIcon.js","../node_modules/@heroicons/react/24/outline/esm/ArrowUpIcon.js"],"sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport QRCode from 'qrcode';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  QrCodeIcon, \r\n  ClipboardIcon, \r\n  ArrowDownTrayIcon,\r\n  PlusIcon,\r\n  TrashIcon,\r\n  BuildingStorefrontIcon,\r\n  CurrencyDollarIcon,\r\n  CalendarIcon,\r\n  EyeIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { toast } from 'react-toastify';\r\nimport { useAuth } from '../contexts/AuthContext';\r\n\r\ninterface BusinessQRCode {\r\n  id: string;\r\n  name: string;\r\n  description: string;\r\n  amount: number | null; // null for any amount\r\n  category: string;\r\n  isActive: boolean;\r\n  scans: number;\r\n  revenue: number;\r\n  createdAt: string;\r\n  expiresAt?: string;\r\n  qrCodeDataURL: string;\r\n}\r\n\r\ninterface BusinessQRGeneratorProps {\r\n  isOpen: boolean;\r\n  onClose: () => void;\r\n  onQRGenerated: (qrData: BusinessQRCode) => void;\r\n}\r\n\r\nconst BusinessQRGenerator: React.FC<BusinessQRGeneratorProps> = ({ \r\n  isOpen, \r\n  onClose, \r\n  onQRGenerated \r\n}) => {\r\n  const { user } = useAuth();\r\n  const [loading, setLoading] = useState(false);\r\n  const [activeTab, setActiveTab] = useState<'create' | 'manage'>('create');\r\n  \r\n  // QR Creation Form\r\n  const [qrName, setQrName] = useState('');\r\n  const [qrDescription, setQrDescription] = useState('');\r\n  const [qrAmount, setQrAmount] = useState<number | null>(null);\r\n  const [qrCategory, setQrCategory] = useState('General');\r\n  const [qrExpiry, setQrExpiry] = useState<number | null>(null);\r\n  \r\n  // QR Management\r\n  const [qrCodes, setQrCodes] = useState<BusinessQRCode[]>([]);\r\n  const [selectedQR, setSelectedQR] = useState<BusinessQRCode | null>(null);\r\n\r\n  const categories = [\r\n    'General',\r\n    'Food & Dining',\r\n    'Retail',\r\n    'Services',\r\n    'Entertainment',\r\n    'Transportation',\r\n    'Healthcare',\r\n    'Education',\r\n    'Other'\r\n  ];\r\n\r\n  const generateQRCode = useCallback(async (qrData: Partial<BusinessQRCode>) => {\r\n    try {\r\n      setLoading(true);\r\n      \r\n      // Create business payment data object\r\n      const paymentData = {\r\n        type: 'zappay_business_payment',\r\n        businessId: user?.id || 'business',\r\n        businessName: user ? `${user.firstName} ${user.lastName}` : 'Business',\r\n        businessEmail: user?.email || 'business@example.com',\r\n        qrId: qrData.id || `qr_${Date.now()}`,\r\n        name: qrData.name || 'Business Payment',\r\n        description: qrData.description || '',\r\n        amount: qrData.amount || null,\r\n        category: qrData.category || 'General',\r\n        timestamp: new Date().toISOString(),\r\n        expiresAt: qrData.expiresAt || null,\r\n        app: 'ZapPay Business'\r\n      };\r\n\r\n      // Generate QR code with business branding\r\n      const qrCodeString = JSON.stringify(paymentData);\r\n      const dataURL = await QRCode.toDataURL(qrCodeString, {\r\n        width: 300,\r\n        margin: 3,\r\n        color: {\r\n          dark: '#1f2937', // Dark gray\r\n          light: '#ffffff'  // White\r\n        },\r\n        errorCorrectionLevel: 'M'\r\n      });\r\n      \r\n      return dataURL;\r\n    } catch (error) {\r\n      console.error('Error generating QR code:', error);\r\n      toast.error('Failed to generate QR code');\r\n      return null;\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [user]);\r\n\r\n  const createQRCode = async () => {\r\n    if (!qrName.trim()) {\r\n      toast.error('Please enter a QR code name');\r\n      return;\r\n    }\r\n\r\n    const qrId = `qr_${Date.now()}`;\r\n    const expiresAt = qrExpiry ? new Date(Date.now() + qrExpiry * 24 * 60 * 60 * 1000).toISOString() : undefined;\r\n    \r\n    const qrData: Partial<BusinessQRCode> = {\r\n      id: qrId,\r\n      name: qrName,\r\n      description: qrDescription,\r\n      amount: qrAmount,\r\n      category: qrCategory,\r\n      expiresAt,\r\n      isActive: true,\r\n      scans: 0,\r\n      revenue: 0,\r\n      createdAt: new Date().toISOString()\r\n    };\r\n\r\n    const dataURL = await generateQRCode(qrData);\r\n    if (dataURL) {\r\n      const newQR: BusinessQRCode = {\r\n        ...qrData as BusinessQRCode,\r\n        qrCodeDataURL: dataURL\r\n      };\r\n      \r\n      setQrCodes(prev => [newQR, ...prev]);\r\n      onQRGenerated(newQR);\r\n      \r\n      // Reset form\r\n      setQrName('');\r\n      setQrDescription('');\r\n      setQrAmount(null);\r\n      setQrCategory('General');\r\n      setQrExpiry(null);\r\n      \r\n      toast.success('QR code created successfully!');\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = async (qrCode: BusinessQRCode) => {\r\n    try {\r\n      const paymentData = {\r\n        type: 'zappay_business_payment',\r\n        businessId: user?.id || 'business',\r\n        businessName: user ? `${user.firstName} ${user.lastName}` : 'Business',\r\n        businessEmail: user?.email || 'business@example.com',\r\n        qrId: qrCode.id,\r\n        name: qrCode.name,\r\n        description: qrCode.description,\r\n        amount: qrCode.amount,\r\n        category: qrCode.category,\r\n        timestamp: new Date().toISOString(),\r\n        expiresAt: qrCode.expiresAt,\r\n        app: 'ZapPay Business'\r\n      };\r\n      \r\n      await navigator.clipboard.writeText(JSON.stringify(paymentData));\r\n      toast.success('QR code data copied to clipboard!');\r\n    } catch (error) {\r\n      toast.error('Failed to copy to clipboard');\r\n    }\r\n  };\r\n\r\n  const downloadQRCode = (qrCode: BusinessQRCode) => {\r\n    if (qrCode.qrCodeDataURL) {\r\n      const link = document.createElement('a');\r\n      link.download = `zappay-business-${qrCode.name.replace(/\\s+/g, '-')}-${qrCode.id}.png`;\r\n      link.href = qrCode.qrCodeDataURL;\r\n      link.click();\r\n    }\r\n  };\r\n\r\n  const toggleQRActive = (qrId: string) => {\r\n    setQrCodes(prev => prev.map(qr => \r\n      qr.id === qrId ? { ...qr, isActive: !qr.isActive } : qr\r\n    ));\r\n  };\r\n\r\n  const deleteQRCode = (qrId: string) => {\r\n    setQrCodes(prev => prev.filter(qr => qr.id !== qrId));\r\n    if (selectedQR?.id === qrId) {\r\n      setSelectedQR(null);\r\n    }\r\n  };\r\n\r\n  const renderCreateTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div>\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n          Create New QR Code\r\n        </h3>\r\n        \r\n        <div className=\"space-y-4\">\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              QR Code Name *\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              value={qrName}\r\n              onChange={(e) => setQrName(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"e.g., Coffee Counter, Event Tickets\"\r\n            />\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Description\r\n            </label>\r\n            <textarea\r\n              value={qrDescription}\r\n              onChange={(e) => setQrDescription(e.target.value)}\r\n              className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              placeholder=\"Brief description of what this QR code is for\"\r\n              rows={3}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Amount\r\n              </label>\r\n              <div className=\"relative\">\r\n                <CurrencyDollarIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n                <input\r\n                  type=\"number\"\r\n                  value={qrAmount || ''}\r\n                  onChange={(e) => setQrAmount(e.target.value ? parseFloat(e.target.value) : null)}\r\n                  className=\"w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                  placeholder=\"0.00\"\r\n                  step=\"0.01\"\r\n                  min=\"0\"\r\n                />\r\n              </div>\r\n              <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n                Leave empty for any amount\r\n              </p>\r\n            </div>\r\n\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Category\r\n              </label>\r\n              <select\r\n                value={qrCategory}\r\n                onChange={(e) => setQrCategory(e.target.value)}\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n              >\r\n                {categories.map(category => (\r\n                  <option key={category} value={category}>{category}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n          </div>\r\n\r\n          <div>\r\n            <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n              Expiry (Optional)\r\n            </label>\r\n            <div className=\"relative\">\r\n              <CalendarIcon className=\"absolute left-3 top-1/2 transform -translate-y-1/2 w-5 h-5 text-gray-400\" />\r\n              <input\r\n                type=\"number\"\r\n                value={qrExpiry || ''}\r\n                onChange={(e) => setQrExpiry(e.target.value ? parseInt(e.target.value) : null)}\r\n                className=\"w-full pl-10 pr-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                placeholder=\"30\"\r\n                min=\"1\"\r\n              />\r\n            </div>\r\n            <p className=\"text-xs text-gray-500 dark:text-gray-400 mt-1\">\r\n              Number of days until QR code expires\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex space-x-3 pt-4\">\r\n          <button\r\n            onClick={createQRCode}\r\n            disabled={loading || !qrName.trim()}\r\n            className=\"flex-1 bg-orange-500 text-white py-2 px-4 rounded-lg font-medium hover:bg-orange-600 disabled:opacity-50 transition-colors flex items-center justify-center space-x-2\"\r\n          >\r\n            {loading ? (\r\n              <>\r\n                <div className=\"animate-spin rounded-full h-4 w-4 border-b-2 border-white\"></div>\r\n                <span>Creating...</span>\r\n              </>\r\n            ) : (\r\n              <>\r\n                <PlusIcon className=\"w-4 h-4\" />\r\n                <span>Create QR Code</span>\r\n              </>\r\n            )}\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n\r\n  const renderManageTab = () => (\r\n    <div className=\"space-y-6\">\r\n      <div className=\"flex items-center justify-between\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          Manage QR Codes\r\n        </h3>\r\n        <span className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n          {qrCodes.length} QR codes\r\n        </span>\r\n      </div>\r\n\r\n      {qrCodes.length === 0 ? (\r\n        <div className=\"text-center py-12\">\r\n          <QrCodeIcon className=\"w-16 h-16 text-gray-400 mx-auto mb-4\" />\r\n          <h4 className=\"text-lg font-medium text-gray-900 dark:text-white mb-2\">\r\n            No QR Codes Yet\r\n          </h4>\r\n          <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n            Create your first QR code to start accepting payments\r\n          </p>\r\n          <button\r\n            onClick={() => setActiveTab('create')}\r\n            className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n          >\r\n            Create QR Code\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\r\n          {qrCodes.map((qr) => (\r\n            <div key={qr.id} className=\"bg-white dark:bg-gray-800 rounded-lg p-4 border border-gray-200 dark:border-gray-700\">\r\n              <div className=\"flex items-start justify-between mb-3\">\r\n                <div className=\"flex-1\">\r\n                  <h4 className=\"font-semibold text-gray-900 dark:text-white truncate\">\r\n                    {qr.name}\r\n                  </h4>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400 truncate\">\r\n                    {qr.description || 'No description'}\r\n                  </p>\r\n                </div>\r\n                <div className=\"flex items-center space-x-2\">\r\n                  <button\r\n                    onClick={() => toggleQRActive(qr.id)}\r\n                    className={`w-8 h-4 rounded-full transition-colors ${\r\n                      qr.isActive ? 'bg-green-500' : 'bg-gray-300'\r\n                    }`}\r\n                  >\r\n                    <div className={`w-3 h-3 bg-white rounded-full transition-transform ${\r\n                      qr.isActive ? 'translate-x-4' : 'translate-x-0.5'\r\n                    }`} />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => deleteQRCode(qr.id)}\r\n                    className=\"text-red-500 hover:text-red-700 transition-colors\"\r\n                  >\r\n                    <TrashIcon className=\"w-4 h-4\" />\r\n                  </button>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"space-y-2 mb-4\">\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Amount:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    {qr.amount ? `$${qr.amount.toFixed(2)}` : 'Any amount'}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Category:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">{qr.category}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Scans:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">{qr.scans}</span>\r\n                </div>\r\n                <div className=\"flex items-center justify-between text-sm\">\r\n                  <span className=\"text-gray-600 dark:text-gray-400\">Revenue:</span>\r\n                  <span className=\"font-medium text-gray-900 dark:text-white\">\r\n                    ${qr.revenue.toFixed(2)}\r\n                  </span>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"flex space-x-2\">\r\n                <button\r\n                  onClick={() => setSelectedQR(qr)}\r\n                  className=\"flex-1 px-3 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors text-sm flex items-center justify-center space-x-1\"\r\n                >\r\n                  <EyeIcon className=\"w-4 h-4\" />\r\n                  <span>View</span>\r\n                </button>\r\n                <button\r\n                  onClick={() => copyToClipboard(qr)}\r\n                  className=\"flex-1 px-3 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors text-sm flex items-center justify-center space-x-1\"\r\n                >\r\n                  <ClipboardIcon className=\"w-4 h-4\" />\r\n                  <span>Copy</span>\r\n                </button>\r\n                <button\r\n                  onClick={() => downloadQRCode(qr)}\r\n                  className=\"flex-1 px-3 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors text-sm flex items-center justify-center space-x-1\"\r\n                >\r\n                  <ArrowDownTrayIcon className=\"w-4 h-4\" />\r\n                  <span>Download</span>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n\r\n  if (!isOpen) return null;\r\n\r\n  return (\r\n    <motion.div\r\n      className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-50 p-4\"\r\n      initial={{ opacity: 0 }}\r\n      animate={{ opacity: 1 }}\r\n      exit={{ opacity: 0 }}\r\n    >\r\n      <motion.div\r\n        className=\"bg-white dark:bg-gray-800 rounded-xl shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden\"\r\n        initial={{ scale: 0.9, opacity: 0 }}\r\n        animate={{ scale: 1, opacity: 1 }}\r\n        exit={{ scale: 0.9, opacity: 0 }}\r\n      >\r\n        {/* Header */}\r\n        <div className=\"flex items-center justify-between p-6 border-b border-gray-200 dark:border-gray-700\">\r\n          <div className=\"flex items-center space-x-3\">\r\n            <BuildingStorefrontIcon className=\"w-8 h-8 text-orange-500\" />\r\n            <div>\r\n              <h2 className=\"text-xl font-bold text-gray-900 dark:text-white\">\r\n                Business QR Generator\r\n              </h2>\r\n              <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                Create and manage QR codes for your business\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={onClose}\r\n            className=\"text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\"\r\n          >\r\n            <svg className=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\r\n              <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth={2} d=\"M6 18L18 6M6 6l12 12\" />\r\n            </svg>\r\n          </button>\r\n        </div>\r\n\r\n        {/* Tabs */}\r\n        <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n          <nav className=\"flex space-x-8 px-6\">\r\n            <button\r\n              onClick={() => setActiveTab('create')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === 'create'\r\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                  : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              Create QR Code\r\n            </button>\r\n            <button\r\n              onClick={() => setActiveTab('manage')}\r\n              className={`py-4 px-1 border-b-2 font-medium text-sm ${\r\n                activeTab === 'manage'\r\n                  ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                  : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n              }`}\r\n            >\r\n              Manage QR Codes\r\n            </button>\r\n          </nav>\r\n        </div>\r\n\r\n        {/* Content */}\r\n        <div className=\"p-6 overflow-y-auto max-h-[60vh]\">\r\n          {activeTab === 'create' && renderCreateTab()}\r\n          {activeTab === 'manage' && renderManageTab()}\r\n        </div>\r\n\r\n        {/* QR Code Preview Modal */}\r\n        {selectedQR && (\r\n          <div className=\"fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center z-60 p-4\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 max-w-md w-full\">\r\n              <div className=\"text-center\">\r\n                <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n                  {selectedQR.name}\r\n                </h3>\r\n                <div className=\"bg-white p-4 rounded-lg shadow-inner mb-4\">\r\n                  <img\r\n                    src={selectedQR.qrCodeDataURL}\r\n                    alt=\"Business QR Code\"\r\n                    className=\"w-64 h-64 mx-auto\"\r\n                  />\r\n                </div>\r\n                <div className=\"flex space-x-3\">\r\n                  <button\r\n                    onClick={() => copyToClipboard(selectedQR)}\r\n                    className=\"flex-1 bg-orange-500 text-white py-2 px-4 rounded-lg hover:bg-orange-600 transition-colors\"\r\n                  >\r\n                    Copy Data\r\n                  </button>\r\n                  <button\r\n                    onClick={() => downloadQRCode(selectedQR)}\r\n                    className=\"flex-1 bg-blue-500 text-white py-2 px-4 rounded-lg hover:bg-blue-600 transition-colors\"\r\n                  >\r\n                    Download\r\n                  </button>\r\n                </div>\r\n                <button\r\n                  onClick={() => setSelectedQR(null)}\r\n                  className=\"mt-3 text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200 transition-colors\"\r\n                >\r\n                  Close\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </motion.div>\r\n    </motion.div>\r\n  );\r\n};\r\n\r\nexport default BusinessQRGenerator;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  BuildingStorefrontIcon,\r\n  QrCodeIcon,\r\n  ChartBarIcon,\r\n  CogIcon,\r\n  PlusIcon,\r\n  EyeIcon,\r\n  ArrowDownTrayIcon,\r\n  ArrowUpIcon,\r\n  BellIcon,\r\n  CreditCardIcon,\r\n  BanknotesIcon,\r\n  ClockIcon,\r\n  CheckCircleIcon,\r\n  XCircleIcon,\r\n  ExclamationTriangleIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { useSubscription } from '../contexts/SubscriptionContext';\r\nimport BusinessQRGenerator from '../components/BusinessQRGenerator';\r\nimport { Link } from 'react-router-dom';\r\n\r\ninterface MerchantTransaction {\r\n  id: string;\r\n  customerName: string;\r\n  customerEmail: string;\r\n  amount: number;\r\n  status: 'pending' | 'completed' | 'failed' | 'refunded';\r\n  paymentMethod: 'card' | 'qr' | 'ach' | 'crypto';\r\n  timestamp: string;\r\n  description: string;\r\n  fees: number;\r\n  netAmount: number;\r\n}\r\n\r\ninterface MerchantStats {\r\n  totalRevenue: number;\r\n  totalTransactions: number;\r\n  pendingAmount: number;\r\n  completedTransactions: number;\r\n  averageTransaction: number;\r\n  monthlyGrowth: number;\r\n  topPaymentMethod: string;\r\n  conversionRate: number;\r\n}\r\n\r\nconst MerchantDashboard: React.FC = () => {\r\n  const { user } = useAuth();\r\n  const { hasFeatureAccess, currentSubscription } = useSubscription();\r\n  const [activeTab, setActiveTab] = useState<'overview' | 'transactions' | 'qr-codes' | 'analytics' | 'settings'>('overview');\r\n  const [loading, setLoading] = useState(true);\r\n  const [stats, setStats] = useState<MerchantStats | null>(null);\r\n  const [transactions, setTransactions] = useState<MerchantTransaction[]>([]);\r\n  const [showQRGenerator, setShowQRGenerator] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      loadMerchantData();\r\n    }\r\n  }, [user]);\r\n\r\n  const loadMerchantData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      // Simulate API calls\r\n      await new Promise(resolve => setTimeout(resolve, 1000));\r\n      \r\n      // Mock merchant stats\r\n      setStats({\r\n        totalRevenue: 45678.90,\r\n        totalTransactions: 1247,\r\n        pendingAmount: 1234.56,\r\n        completedTransactions: 1156,\r\n        averageTransaction: 39.52,\r\n        monthlyGrowth: 12.5,\r\n        topPaymentMethod: 'QR Code',\r\n        conversionRate: 87.3\r\n      });\r\n\r\n      // Mock transactions\r\n      setTransactions([\r\n        {\r\n          id: 'tx_001',\r\n          customerName: 'John Smith',\r\n          customerEmail: 'john@example.com',\r\n          amount: 45.99,\r\n          status: 'completed',\r\n          paymentMethod: 'qr',\r\n          timestamp: '2024-01-15T14:30:00Z',\r\n          description: 'Coffee and pastry',\r\n          fees: 1.38,\r\n          netAmount: 44.61\r\n        },\r\n        {\r\n          id: 'tx_002',\r\n          customerName: 'Sarah Johnson',\r\n          customerEmail: 'sarah@example.com',\r\n          amount: 125.50,\r\n          status: 'completed',\r\n          paymentMethod: 'card',\r\n          timestamp: '2024-01-15T13:15:00Z',\r\n          description: 'Lunch for 4 people',\r\n          fees: 3.77,\r\n          netAmount: 121.73\r\n        },\r\n        {\r\n          id: 'tx_003',\r\n          customerName: 'Mike Wilson',\r\n          customerEmail: 'mike@example.com',\r\n          amount: 89.99,\r\n          status: 'pending',\r\n          paymentMethod: 'qr',\r\n          timestamp: '2024-01-15T12:45:00Z',\r\n          description: 'Electronics purchase',\r\n          fees: 2.70,\r\n          netAmount: 87.29\r\n        },\r\n        {\r\n          id: 'tx_004',\r\n          customerName: 'Emma Davis',\r\n          customerEmail: 'emma@example.com',\r\n          amount: 67.25,\r\n          status: 'failed',\r\n          paymentMethod: 'card',\r\n          timestamp: '2024-01-15T11:20:00Z',\r\n          description: 'Grocery items',\r\n          fees: 0,\r\n          netAmount: 0\r\n        },\r\n        {\r\n          id: 'tx_005',\r\n          customerName: 'David Lee',\r\n          customerEmail: 'david@example.com',\r\n          amount: 234.00,\r\n          status: 'refunded',\r\n          paymentMethod: 'ach',\r\n          timestamp: '2024-01-14T16:30:00Z',\r\n          description: 'Returned merchandise',\r\n          fees: 0,\r\n          netAmount: 0\r\n        }\r\n      ]);\r\n    } catch (error) {\r\n      console.error('Error loading merchant data:', error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const getStatusIcon = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return <CheckCircleIcon className=\"w-5 h-5 text-green-500\" />;\r\n      case 'pending':\r\n        return <ClockIcon className=\"w-5 h-5 text-yellow-500\" />;\r\n      case 'failed':\r\n        return <XCircleIcon className=\"w-5 h-5 text-red-500\" />;\r\n      case 'refunded':\r\n        return <ExclamationTriangleIcon className=\"w-5 h-5 text-orange-500\" />;\r\n      default:\r\n        return <ClockIcon className=\"w-5 h-5 text-gray-500\" />;\r\n    }\r\n  };\r\n\r\n  const getStatusColor = (status: string) => {\r\n    switch (status) {\r\n      case 'completed':\r\n        return 'bg-green-100 text-green-800 dark:bg-green-900/20 dark:text-green-200';\r\n      case 'pending':\r\n        return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900/20 dark:text-yellow-200';\r\n      case 'failed':\r\n        return 'bg-red-100 text-red-800 dark:bg-red-900/20 dark:text-red-200';\r\n      case 'refunded':\r\n        return 'bg-orange-100 text-orange-800 dark:bg-orange-900/20 dark:text-orange-200';\r\n      default:\r\n        return 'bg-gray-100 text-gray-800 dark:bg-gray-900/20 dark:text-gray-200';\r\n    }\r\n  };\r\n\r\n  const getPaymentMethodIcon = (method: string) => {\r\n    switch (method) {\r\n      case 'qr':\r\n        return <QrCodeIcon className=\"w-5 h-5\" />;\r\n      case 'card':\r\n        return <CreditCardIcon className=\"w-5 h-5\" />;\r\n      case 'ach':\r\n        return <BanknotesIcon className=\"w-5 h-5\" />;\r\n      case 'crypto':\r\n        return <BuildingStorefrontIcon className=\"w-5 h-5\" />;\r\n      default:\r\n        return <CreditCardIcon className=\"w-5 h-5\" />;\r\n    }\r\n  };\r\n\r\n  const renderOverview = () => {\r\n    if (!stats) return null;\r\n\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        {/* Key Metrics */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Revenue</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                  ${stats.totalRevenue.toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-green-100 dark:bg-green-900/20 rounded-lg\">\r\n                <BanknotesIcon className=\"w-6 h-6 text-green-600 dark:text-green-400\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4 flex items-center text-sm text-green-600 dark:text-green-400\">\r\n              <ArrowUpIcon className=\"w-4 h-4 mr-1\" />\r\n              <span>+{stats.monthlyGrowth}% this month</span>\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.1 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Total Transactions</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                  {stats.totalTransactions.toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-blue-100 dark:bg-blue-900/20 rounded-lg\">\r\n                <ChartBarIcon className=\"w-6 h-6 text-blue-600 dark:text-blue-400\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\r\n              {stats.completedTransactions} completed\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.2 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Pending Amount</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                  ${stats.pendingAmount.toLocaleString()}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-yellow-100 dark:bg-yellow-900/20 rounded-lg\">\r\n                <ClockIcon className=\"w-6 h-6 text-yellow-600 dark:text-yellow-400\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\r\n              Awaiting settlement\r\n            </div>\r\n          </motion.div>\r\n\r\n          <motion.div\r\n            initial={{ opacity: 0, y: 20 }}\r\n            animate={{ opacity: 1, y: 0 }}\r\n            transition={{ delay: 0.3 }}\r\n            className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\"\r\n          >\r\n            <div className=\"flex items-center justify-between\">\r\n              <div>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400\">Avg Transaction</p>\r\n                <p className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n                  ${stats.averageTransaction.toFixed(2)}\r\n                </p>\r\n              </div>\r\n              <div className=\"p-3 bg-purple-100 dark:bg-purple-900/20 rounded-lg\">\r\n                <CreditCardIcon className=\"w-6 h-6 text-purple-600 dark:text-purple-400\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-4 text-sm text-gray-600 dark:text-gray-400\">\r\n              {stats.conversionRate}% conversion rate\r\n            </div>\r\n          </motion.div>\r\n        </div>\r\n\r\n        {/* Quick Actions */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Quick Actions\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\r\n            <button\r\n              onClick={() => setShowQRGenerator(true)}\r\n              className=\"flex items-center justify-center space-x-3 p-4 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg hover:border-orange-500 hover:bg-orange-50 dark:hover:bg-orange-900/10 transition-colors\"\r\n            >\r\n              <QrCodeIcon className=\"w-6 h-6 text-gray-400\" />\r\n              <span className=\"text-gray-700 dark:text-gray-300\">Generate QR Code</span>\r\n            </button>\r\n            \r\n            <button className=\"flex items-center justify-center space-x-3 p-4 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg hover:border-orange-500 hover:bg-orange-50 dark:hover:bg-orange-900/10 transition-colors\">\r\n              <PlusIcon className=\"w-6 h-6 text-gray-400\" />\r\n              <span className=\"text-gray-700 dark:text-gray-300\">Create Invoice</span>\r\n            </button>\r\n            \r\n            <button className=\"flex items-center justify-center space-x-3 p-4 border-2 border-dashed border-gray-300 dark:border-gray-600 rounded-lg hover:border-orange-500 hover:bg-orange-50 dark:hover:bg-orange-900/10 transition-colors\">\r\n              <ArrowDownTrayIcon className=\"w-6 h-6 text-gray-400\" />\r\n              <span className=\"text-gray-700 dark:text-gray-300\">Export Report</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Recent Transactions */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n          <div className=\"flex items-center justify-between mb-4\">\r\n            <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n              Recent Transactions\r\n            </h3>\r\n            <button\r\n              onClick={() => setActiveTab('transactions')}\r\n              className=\"text-orange-600 hover:text-orange-700 font-medium text-sm\"\r\n            >\r\n              View All\r\n            </button>\r\n          </div>\r\n          <div className=\"space-y-3\">\r\n            {transactions.slice(0, 5).map((transaction) => (\r\n              <div key={transaction.id} className=\"flex items-center justify-between p-3 bg-gray-50 dark:bg-gray-700 rounded-lg\">\r\n                <div className=\"flex items-center space-x-3\">\r\n                  {getStatusIcon(transaction.status)}\r\n                  <div>\r\n                    <p className=\"font-medium text-gray-900 dark:text-white\">\r\n                      {transaction.customerName}\r\n                    </p>\r\n                    <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                      {transaction.description}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <p className=\"font-semibold text-gray-900 dark:text-white\">\r\n                    ${transaction.amount.toFixed(2)}\r\n                  </p>\r\n                  <p className=\"text-sm text-gray-600 dark:text-gray-400\">\r\n                    {new Date(transaction.timestamp).toLocaleDateString()}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderTransactions = () => {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n            All Transactions\r\n          </h3>\r\n          <div className=\"flex space-x-2\">\r\n            <button className=\"px-4 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors\">\r\n              Filter\r\n            </button>\r\n            <button className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\">\r\n              Export\r\n            </button>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl shadow-lg overflow-hidden\">\r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"min-w-full divide-y divide-gray-200 dark:divide-gray-700\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                <tr>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Customer\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Amount\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Method\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Status\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Date\r\n                  </th>\r\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 dark:text-gray-300 uppercase tracking-wider\">\r\n                    Actions\r\n                  </th>\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"bg-white dark:bg-gray-800 divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {transactions.map((transaction) => (\r\n                  <tr key={transaction.id} className=\"hover:bg-gray-50 dark:hover:bg-gray-700\">\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div>\r\n                        <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                          {transaction.customerName}\r\n                        </div>\r\n                        <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                          {transaction.customerEmail}\r\n                        </div>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"text-sm font-medium text-gray-900 dark:text-white\">\r\n                        ${transaction.amount.toFixed(2)}\r\n                      </div>\r\n                      <div className=\"text-sm text-gray-500 dark:text-gray-400\">\r\n                        Net: ${transaction.netAmount.toFixed(2)}\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <div className=\"flex items-center space-x-2\">\r\n                        {getPaymentMethodIcon(transaction.paymentMethod)}\r\n                        <span className=\"text-sm text-gray-900 dark:text-white capitalize\">\r\n                          {transaction.paymentMethod}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\r\n                      <span className={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium ${getStatusColor(transaction.status)}`}>\r\n                        {transaction.status}\r\n                      </span>\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm text-gray-900 dark:text-white\">\r\n                      {new Date(transaction.timestamp).toLocaleDateString()}\r\n                    </td>\r\n                    <td className=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                      <button className=\"text-orange-600 hover:text-orange-900 dark:text-orange-400 dark:hover:text-orange-300\">\r\n                        <EyeIcon className=\"w-4 h-4\" />\r\n                      </button>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderQRCodes = () => {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <div className=\"flex items-center justify-between\">\r\n          <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n            QR Code Payments\r\n          </h3>\r\n          <button\r\n            onClick={() => setShowQRGenerator(true)}\r\n            className=\"px-4 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors\"\r\n          >\r\n            Generate New QR\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\r\n          {/* Sample QR Codes */}\r\n          {[\r\n            { id: 'qr_001', name: 'Coffee Shop Counter', amount: 0, status: 'active', scans: 45 },\r\n            { id: 'qr_002', name: 'Delivery Payment', amount: 25.99, status: 'active', scans: 12 },\r\n            { id: 'qr_003', name: 'Event Tickets', amount: 50.00, status: 'paused', scans: 8 }\r\n          ].map((qr) => (\r\n            <div key={qr.id} className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n              <div className=\"text-center\">\r\n                <div className=\"w-32 h-32 bg-gray-200 dark:bg-gray-700 rounded-lg mx-auto mb-4 flex items-center justify-center\">\r\n                  <QrCodeIcon className=\"w-16 h-16 text-gray-400\" />\r\n                </div>\r\n                <h4 className=\"font-semibold text-gray-900 dark:text-white mb-2\">\r\n                  {qr.name}\r\n                </h4>\r\n                <p className=\"text-sm text-gray-600 dark:text-gray-400 mb-4\">\r\n                  {qr.amount > 0 ? `$${qr.amount.toFixed(2)}` : 'Any amount'}\r\n                </p>\r\n                <div className=\"flex items-center justify-between text-sm text-gray-500 dark:text-gray-400 mb-4\">\r\n                  <span>{qr.scans} scans</span>\r\n                  <span className={`px-2 py-1 rounded-full text-xs ${\r\n                    qr.status === 'active' ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800'\r\n                  }`}>\r\n                    {qr.status}\r\n                  </span>\r\n                </div>\r\n                <div className=\"flex space-x-2\">\r\n                  <button className=\"flex-1 px-3 py-2 bg-gray-100 dark:bg-gray-700 text-gray-700 dark:text-gray-300 rounded-lg hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors text-sm\">\r\n                    Edit\r\n                  </button>\r\n                  <button className=\"flex-1 px-3 py-2 bg-orange-500 text-white rounded-lg hover:bg-orange-600 transition-colors text-sm\">\r\n                    Share\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderAnalytics = () => {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          Merchant Analytics\r\n        </h3>\r\n        \r\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n            <h4 className=\"font-semibold text-gray-900 dark:text-white mb-4\">\r\n              Revenue Trends\r\n            </h4>\r\n            <div className=\"h-64 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center\">\r\n              <p className=\"text-gray-500 dark:text-gray-400\">Chart placeholder</p>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n            <h4 className=\"font-semibold text-gray-900 dark:text-white mb-4\">\r\n              Payment Methods\r\n            </h4>\r\n            <div className=\"h-64 bg-gray-100 dark:bg-gray-700 rounded-lg flex items-center justify-center\">\r\n              <p className=\"text-gray-500 dark:text-gray-400\">Chart placeholder</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const renderSettings = () => {\r\n    return (\r\n      <div className=\"space-y-6\">\r\n        <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n          Merchant Settings\r\n        </h3>\r\n        \r\n        <div className=\"bg-white dark:bg-gray-800 rounded-xl p-6 shadow-lg\">\r\n          <h4 className=\"font-semibold text-gray-900 dark:text-white mb-4\">\r\n            Business Information\r\n          </h4>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Business Name\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\"\r\n                placeholder=\"Your Business Name\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <label className=\"block text-sm font-medium text-gray-700 dark:text-gray-300 mb-2\">\r\n                Business Type\r\n              </label>\r\n              <select className=\"w-full px-3 py-2 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-2 focus:ring-orange-500 focus:border-transparent bg-white dark:bg-gray-700 text-gray-900 dark:text-white\">\r\n                <option>Restaurant</option>\r\n                <option>Retail</option>\r\n                <option>Service</option>\r\n                <option>Other</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex items-center justify-center min-h-96\">\r\n        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-orange-500\"></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"space-y-6\">\r\n      {/* Header */}\r\n      <div className=\"flex items-center justify-between\">\r\n        <div>\r\n          <h1 className=\"text-3xl font-bold text-gray-900 dark:text-white\">\r\n            Merchant Dashboard\r\n          </h1>\r\n          <p className=\"text-gray-600 dark:text-gray-300\">\r\n            Manage your business payments and transactions\r\n          </p>\r\n        </div>\r\n        <div className=\"flex items-center space-x-2 text-sm text-gray-600 dark:text-gray-400\">\r\n          <BuildingStorefrontIcon className=\"w-5 h-5\" />\r\n          <span>Business Account</span>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Tabs */}\r\n      <div className=\"border-b border-gray-200 dark:border-gray-700\">\r\n        <nav className=\"-mb-px flex space-x-8\">\r\n          {[\r\n            { id: 'overview', name: 'Overview', icon: ChartBarIcon },\r\n            { id: 'transactions', name: 'Transactions', icon: CreditCardIcon },\r\n            { id: 'qr-codes', name: 'QR Codes', icon: QrCodeIcon },\r\n            { id: 'analytics', name: 'Analytics', icon: ChartBarIcon },\r\n            { id: 'settings', name: 'Settings', icon: CogIcon }\r\n          ].map((tab) => {\r\n            const Icon = tab.icon;\r\n            return (\r\n              <button\r\n                key={tab.id}\r\n                onClick={() => setActiveTab(tab.id as any)}\r\n                className={`flex items-center space-x-2 py-2 px-1 border-b-2 font-medium text-sm ${\r\n                  activeTab === tab.id\r\n                    ? 'border-orange-500 text-orange-600 dark:text-orange-400'\r\n                    : 'border-transparent text-gray-500 dark:text-gray-400 hover:text-gray-700 dark:hover:text-gray-300 hover:border-gray-300 dark:hover:border-gray-600'\r\n                }`}\r\n              >\r\n                <Icon className=\"w-5 h-5\" />\r\n                <span>{tab.name}</span>\r\n              </button>\r\n            );\r\n          })}\r\n        </nav>\r\n      </div>\r\n\r\n      {/* Content */}\r\n      <div className=\"py-6\">\r\n        {activeTab === 'overview' && renderOverview()}\r\n        {activeTab === 'transactions' && renderTransactions()}\r\n        {activeTab === 'qr-codes' && renderQRCodes()}\r\n        {activeTab === 'analytics' && renderAnalytics()}\r\n        {activeTab === 'settings' && renderSettings()}\r\n      </div>\r\n\r\n      {/* QR Code Generator Modal */}\r\n      {showQRGenerator && (\r\n        <BusinessQRGenerator\r\n          isOpen={showQRGenerator}\r\n          onClose={() => setShowQRGenerator(false)}\r\n          onQRGenerated={(qrData) => {\r\n            console.log('QR Generated:', qrData);\r\n            setShowQRGenerator(false);\r\n          }}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MerchantDashboard;\r\n","import * as React from \"react\";\nfunction ClockIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 6v6h4.5m4.5 0a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ClockIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction XCircleIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m9.75 9.75 4.5 4.5m0-4.5-4.5 4.5M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Z\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(XCircleIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CalendarIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M6.75 3v2.25M17.25 3v2.25M3 18.75V7.5a2.25 2.25 0 0 1 2.25-2.25h13.5A2.25 2.25 0 0 1 21 7.5v11.25m-18 0A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75m-18 0v-7.5A2.25 2.25 0 0 1 5.25 9h13.5A2.25 2.25 0 0 1 21 11.25v7.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CalendarIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction PlusIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M12 4.5v15m7.5-7.5h-15\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(PlusIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction ArrowUpIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M4.5 10.5 12 3m0 0 7.5 7.5M12 3v18\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowUpIcon);\nexport default ForwardRef;"],"names":["_ref","isOpen","onClose","onQRGenerated","user","useAuth","loading","setLoading","useState","activeTab","setActiveTab","qrName","setQrName","qrDescription","setQrDescription","qrAmount","setQrAmount","qrCategory","setQrCategory","qrExpiry","setQrExpiry","qrCodes","setQrCodes","selectedQR","setSelectedQR","categories","generateQRCode","useCallback","async","paymentData","type","businessId","id","businessName","concat","firstName","lastName","businessEmail","email","qrId","qrData","Date","now","name","description","amount","category","timestamp","toISOString","expiresAt","app","qrCodeString","JSON","stringify","QRCode","width","margin","color","dark","light","errorCorrectionLevel","error","console","toast","createQRCode","trim","undefined","isActive","scans","revenue","createdAt","dataURL","newQR","_objectSpread","qrCodeDataURL","prev","success","copyToClipboard","qrCode","navigator","clipboard","writeText","downloadQRCode","link","document","createElement","download","replace","href","click","_jsx","motion","div","className","initial","opacity","animate","exit","children","_jsxs","scale","BuildingStorefrontIcon","onClick","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","value","onChange","e","target","placeholder","rows","CurrencyDollarIcon","parseFloat","step","min","map","CalendarIcon","parseInt","disabled","_Fragment","PlusIcon","length","QrCodeIcon","qr","toggleQRActive","deleteQRCode","filter","TrashIcon","toFixed","EyeIcon","ClipboardIcon","ArrowDownTrayIcon","src","alt","MerchantDashboard","hasFeatureAccess","currentSubscription","useSubscription","stats","setStats","transactions","setTransactions","showQRGenerator","setShowQRGenerator","useEffect","loadMerchantData","Promise","resolve","setTimeout","totalRevenue","totalTransactions","pendingAmount","completedTransactions","averageTransaction","monthlyGrowth","topPaymentMethod","conversionRate","customerName","customerEmail","status","paymentMethod","fees","netAmount","getStatusIcon","CheckCircleIcon","ClockIcon","XCircleIcon","ExclamationTriangleIcon","getStatusColor","getPaymentMethodIcon","method","CreditCardIcon","BanknotesIcon","icon","ChartBarIcon","CogIcon","tab","Icon","y","toLocaleString","ArrowUpIcon","transition","delay","slice","transaction","toLocaleDateString","BusinessQRGenerator","log","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","ref"],"sourceRoot":""}