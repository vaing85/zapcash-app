{"version":3,"file":"static/js/754.dc0e7def.chunk.js","mappings":"mRAkBA,MA0UA,EA1UoCA,KAAO,IAADC,EAAAC,EAAAC,EACxC,MAAM,MAAEC,EAAK,oBAAEC,EAAmB,oBAAEC,EAAmB,QAAEC,IAAYC,EAAAA,EAAAA,OAC/D,KAAEC,IAASC,EAAAA,EAAAA,MACVC,EAAcC,IAAmBC,EAAAA,EAAAA,UAAkC,OACnEC,EAAaC,IAAkBF,EAAAA,EAAAA,WAAS,GAkCzCG,EAAeC,IACnB,OAAQA,GACN,IAAK,OACH,OAAOC,EAAAA,EAAAA,KAACC,EAAAA,EAAe,CAACC,UAAU,YACpC,IAAK,MACH,OAAOF,EAAAA,EAAAA,KAACG,EAAAA,EAAY,CAACD,UAAU,YACjC,IAAK,WACH,OAAOF,EAAAA,EAAAA,KAACI,EAAAA,EAAS,CAACF,UAAU,YAC9B,IAAK,aACH,OAAOF,EAAAA,EAAAA,KAACK,EAAAA,EAAQ,CAACH,UAAU,YAC7B,QACE,OAAOF,EAAAA,EAAAA,KAACM,EAAAA,EAAO,CAACJ,UAAU,cAI1BK,EAAiBA,IACdrB,EAAMsB,KAAKC,GAAQA,EAAKC,MAA0B,OAAnBvB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBY,SAgB7D,OACEC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iDAAgDS,UAC7DC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,yCAAwCS,SAAA,EAErDC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,oBAAmBS,SAAA,EAChCX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wDAAuDS,SAAC,sBAGtEX,EAAAA,EAAAA,KAAA,KAAGE,UAAU,6DAA4DS,SAAC,iFAM3ExB,IACCa,EAAAA,EAAAA,KAAA,OAAKE,UAAU,OAAMS,UACnBX,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kFAAiFS,UAC9FC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,oCAAmCS,SAAA,EAChDC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEC,EAAAA,EAAAA,MAAA,MAAIV,UAAU,sDAAqDS,SAAA,CAAC,iBACnC,QAAjB5B,EAACwB,WAAgB,IAAAxB,OAAA,EAAhBA,EAAkB8B,SAEnCb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mCAAkCS,SAC5B,QAD4B3B,EAC5CuB,WAAgB,IAAAvB,OAAA,EAAhBA,EAAkB8B,kBAGvBF,EAAAA,EAAAA,MAAA,OAAKV,UAAU,aAAYS,SAAA,EACzBC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,qCAAoCS,SAAA,CAAC,IAChC,QAAjB1B,EAACsB,WAAgB,IAAAtB,OAAA,EAAhBA,EAAkB8B,MAAM,aAE5Bf,EAAAA,EAAAA,KAAA,OAAKE,UAAU,wBAAuBS,SACJ,WAA/BxB,EAAoB6B,OAAsB,SAAW7B,EAAoB6B,oBAStFhB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6DAA4DS,SACxEzB,EAAM+B,IAAKR,IACV,MAAMS,GAvDOnB,EAuDmBU,EAAKC,IAtDnB,OAAnBvB,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBY,UAAWA,GADlBA,MAwDb,MAAMoB,EApDIpB,KAClB,IAAKZ,EAAqB,OAAO,EAEjC,MAAMiC,EAAmBlC,EAAMmC,UAAUC,GAAKA,EAAEZ,KAAOvB,EAAoBY,QAG3E,OAFwBb,EAAMmC,UAAUC,GAAKA,EAAEZ,KAAOX,GAE7BqB,GA8CQG,CAAWd,EAAKC,IACnCc,EAAoB/B,IAAiBgB,EAAKC,IAAMd,EAEtD,OACEgB,EAAAA,EAAAA,MAACa,EAAAA,EAAOC,IAAG,CAETC,QAAS,CAAEC,QAAS,EAAGC,EAAG,IAC1BC,QAAS,CAAEF,QAAS,EAAGC,EAAG,GAC1BE,WAAY,CAAEC,SAAU,IACxB9B,UAAS,4EAAA+B,OACPxB,EAAKyB,QAAU,yBAA2B,GAAE,KAAAD,OAC1Cf,EAAY,wBAA0B,IAAKP,SAAA,CAG9CF,EAAKyB,UACJlC,EAAAA,EAAAA,KAAA,OAAKE,UAAU,8FAA6FS,SAAC,iBAM9GO,IACClB,EAAAA,EAAAA,KAAA,OAAKE,UAAU,6FAA4FS,SAAC,kBAK9GC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,MAAKS,SAAA,EAElBC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,mBAAkBS,SAAA,EAC/BX,EAAAA,EAAAA,KAAA,OAAKE,UAAS,uEAAA+B,OACA,SAAZxB,EAAKC,GAAgB,+BACT,QAAZD,EAAKC,GAAe,+BACR,aAAZD,EAAKC,GAAoB,iCACzB,oCACCC,SACAb,EAAYW,EAAKC,OAEpBV,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wDAAuDS,SAClEF,EAAKI,QAERb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wCAAuCS,SACjDF,EAAKK,eAERF,EAAAA,EAAAA,MAAA,OAAKV,UAAU,wDAAuDS,SAAA,CAAC,IACnEF,EAAKM,OACPf,EAAAA,EAAAA,KAAA,QAAME,UAAU,oCAAmCS,SAAC,kBAKxDX,EAAAA,EAAAA,KAAA,OAAKE,UAAU,iBAAgBS,SAC5BF,EAAK0B,SAASlB,IAAKmB,IAClBxB,EAAAA,EAAAA,MAAA,OAAsBV,UAAU,6BAA4BS,SAAA,EAC1DX,EAAAA,EAAAA,KAAA,OAAKE,UAAS,uEAAA+B,OACZG,EAAQC,SACJ,iCACA,gCACH1B,SACAyB,EAAQC,UACPrC,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACpC,UAAU,gDAErBF,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAACrC,UAAU,6BAGzBU,EAAAA,EAAAA,MAAA,OAAKV,UAAU,SAAQS,SAAA,EACrBX,EAAAA,EAAAA,KAAA,KAAGE,UAAS,uBAAA+B,OACVG,EAAQC,SACJ,gCACA,oCACH1B,SACAyB,EAAQvB,QAEXb,EAAAA,EAAAA,KAAA,KAAGE,UAAU,2CAA0CS,SACpDyB,EAAQtB,mBArBLsB,EAAQ1B,QA6BtBV,EAAAA,EAAAA,KAAA,UACEwC,QAASA,IA9LLC,WACpB,GAAKlD,EAKL,IAAuB,OAAnBJ,QAAmB,IAAnBA,OAAmB,EAAnBA,EAAqBY,UAAWA,EAApC,CAKAL,EAAgBK,GAChBF,GAAe,GAEf,IAGE,MAAM6C,QAAetD,EAAoBW,EAAQ,0BAE5B,IAAD4C,EAAhBD,EAAOE,QACTC,EAAAA,GAAMD,QAAQ,4BAADX,OAA6D,QAA7DU,EAA6BzD,EAAMsB,KAAKc,GAAKA,EAAEZ,KAAOX,UAAO,IAAA4C,OAAA,EAAhCA,EAAkC9B,KAAI,WAEhFgC,EAAAA,GAAMC,MAAMJ,EAAOI,OAAS,iBAEhC,CAAE,MAAOA,GACPD,EAAAA,GAAMC,MAAM,oCACd,CAAC,QACCjD,GAAe,GACfH,EAAgB,KAClB,CApBA,MAFEmD,EAAAA,GAAME,KAAK,qCALXF,EAAAA,GAAMC,MAAM,+CA4LiBE,CAAcvC,EAAKC,IAClCuC,SAAU/B,IAAcC,GAAoBK,GAAqBnC,EACjEa,UAAS,6DAAA+B,OACPf,EACI,mFACCC,EAEDK,EACA,8CACY,SAAZf,EAAKC,GACL,mFACA,+CALA,oFAMHC,SAEFO,EACC,eACGC,EAEDK,EACF,eACc,SAAZf,EAAKC,GACP,eAEAE,EAAAA,EAAAA,MAAAsC,EAAAA,SAAA,CAAAvC,SAAA,CAAE,cACYF,EAAKI,MACjBb,EAAAA,EAAAA,KAACmD,EAAAA,EAAc,CAACjD,UAAU,2BAR5B,iCA/FDO,EAAKC,SAkHlBE,EAAAA,EAAAA,MAAA,OAAKV,UAAU,kEAAiES,SAAA,EAC9EC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,0DAAyDS,SAAA,EACtEX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,mDAAkDS,SAAC,wBAGjEX,EAAAA,EAAAA,KAAA,KAAGE,UAAU,wCAAuCS,SAAC,8CAKvDX,EAAAA,EAAAA,KAAA,OAAKE,UAAU,kBAAiBS,UAC9BC,EAAAA,EAAAA,MAAA,SAAOV,UAAU,SAAQS,SAAA,EACvBX,EAAAA,EAAAA,KAAA,SAAOE,UAAU,8BAA6BS,UAC5CC,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,wEAAuES,SAAC,aAGrFzB,EAAM+B,IAAKR,IACVT,EAAAA,EAAAA,KAAA,MAAkBE,UAAU,0EAAyES,SAClGF,EAAKI,MADCJ,EAAKC,WAMpBV,EAAAA,EAAAA,KAAA,SAAOE,UAAU,gDAA+CS,SAC7DyC,EAAAA,EAAoBC,uBAAuBpC,IAAKqC,IAC/C1C,EAAAA,EAAAA,MAAA,MAAAD,SAAA,EACEX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,8DAA6DS,SACxE2C,EAAWlB,UAEblD,EAAM+B,IAAKR,IACV,MAAM8C,EAAyB,SAAZ9C,EAAKC,GAAgB4C,EAAWE,KACtB,QAAZ/C,EAAKC,GAAe4C,EAAWG,IACnB,aAAZhD,EAAKC,GAAoB4C,EAAWI,SACxB,eAAZjD,EAAKC,IAAsB4C,EAAWK,WAEvD,OACE3D,EAAAA,EAAAA,KAAA,MAAkBE,UAAU,wBAAuBS,SAChD4C,GACCvD,EAAAA,EAAAA,KAACsC,EAAAA,EAAS,CAACpC,UAAU,oCAErBF,EAAAA,EAAAA,KAACuC,EAAAA,EAAS,CAACrC,UAAU,mCAJhBO,EAAKC,QAXX4C,EAAWlB,qBA4B9BxB,EAAAA,EAAAA,MAAA,OAAKV,UAAU,QAAOS,SAAA,EACpBX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,oEAAmES,SAAC,gCAGlFC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,wCAAuCS,SAAA,EACpDC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,2CAA0CS,SAAA,EACvDX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2DAA0DS,SAAC,mCAGzEX,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mCAAkCS,SAAC,kGAIlDC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,2CAA0CS,SAAA,EACvDX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2DAA0DS,SAAC,yCAGzEX,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mCAAkCS,SAAC,2EAIlDC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,2CAA0CS,SAAA,EACvDX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2DAA0DS,SAAC,4BAGzEX,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mCAAkCS,SAAC,oFAIlDC,EAAAA,EAAAA,MAAA,OAAKV,UAAU,2CAA0CS,SAAA,EACvDX,EAAAA,EAAAA,KAAA,MAAIE,UAAU,2DAA0DS,SAAC,2BAGzEX,EAAAA,EAAAA,KAAA,KAAGE,UAAU,mCAAkCS,SAAC,2F,oFChV9D,SAASwC,EAAcS,EAIpBC,GAAQ,IAJa,MACtBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DzD,GAAIqD,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,wCAEP,CACA,MACA,EADiCX,EAAAA,WAAiBhB,E,oFCvBlD,SAASb,EAASsB,EAIfC,GAAQ,IAJQ,MACjBC,EAAK,QACLC,GAEDH,EADII,GAAKC,EAAAA,EAAAA,GAAAL,EAAAM,GAER,OAAoBC,EAAAA,cAAoB,MAAOC,OAAOC,OAAO,CAC3DC,MAAO,6BACPC,KAAM,OACNC,QAAS,YACTC,YAAa,IACbC,OAAQ,eACR,cAAe,OACf,YAAa,OACbC,IAAKd,EACL,kBAAmBE,GAClBC,GAAQF,EAAqBK,EAAAA,cAAoB,QAAS,CAC3DzD,GAAIqD,GACHD,GAAS,KAAmBK,EAAAA,cAAoB,OAAQ,CACzDS,cAAe,QACfC,eAAgB,QAChBC,EAAG,0BAEP,CACA,MACA,EADiCX,EAAAA,WAAiB7B,E","sources":["pages/SubscriptionPlans.tsx","../node_modules/@heroicons/react/24/outline/esm/ArrowRightIcon.js","../node_modules/@heroicons/react/24/outline/esm/CheckIcon.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { motion } from 'framer-motion';\r\nimport { \r\n  CheckIcon, \r\n  XMarkIcon, \r\n  StarIcon,\r\n  ArrowRightIcon,\r\n  ShieldCheckIcon,\r\n  ChartBarIcon,\r\n  UsersIcon,\r\n  CogIcon\r\n} from '@heroicons/react/24/outline';\r\nimport { useSubscription } from '../contexts/SubscriptionContext';\r\nimport { useAuth } from '../contexts/AuthContext';\r\nimport { SubscriptionTier } from '../types/Subscription';\r\nimport { subscriptionService } from '../services/subscriptionService';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst SubscriptionPlans: React.FC = () => {\r\n  const { plans, currentSubscription, upgradeSubscription, loading } = useSubscription();\r\n  const { user } = useAuth();\r\n  const [selectedPlan, setSelectedPlan] = useState<SubscriptionTier | null>(null);\r\n  const [isUpgrading, setIsUpgrading] = useState(false);\r\n\r\n  const handleUpgrade = async (planId: SubscriptionTier) => {\r\n    if (!user) {\r\n      toast.error('Please log in to upgrade your subscription');\r\n      return;\r\n    }\r\n\r\n    if (currentSubscription?.planId === planId) {\r\n      toast.info('You are already on this plan');\r\n      return;\r\n    }\r\n\r\n    setSelectedPlan(planId);\r\n    setIsUpgrading(true);\r\n\r\n    try {\r\n      // In a real app, this would open a payment modal\r\n      // For now, we'll simulate the upgrade\r\n      const result = await upgradeSubscription(planId, 'pm_mock_payment_method');\r\n      \r\n      if (result.success) {\r\n        toast.success(`Successfully upgraded to ${plans.find(p => p.id === planId)?.name} plan!`);\r\n      } else {\r\n        toast.error(result.error || 'Upgrade failed');\r\n      }\r\n    } catch (error) {\r\n      toast.error('Upgrade failed. Please try again.');\r\n    } finally {\r\n      setIsUpgrading(false);\r\n      setSelectedPlan(null);\r\n    }\r\n  };\r\n\r\n  const getPlanIcon = (planId: SubscriptionTier) => {\r\n    switch (planId) {\r\n      case 'free':\r\n        return <ShieldCheckIcon className=\"w-8 h-8\" />;\r\n      case 'pro':\r\n        return <ChartBarIcon className=\"w-8 h-8\" />;\r\n      case 'business':\r\n        return <UsersIcon className=\"w-8 h-8\" />;\r\n      case 'enterprise':\r\n        return <StarIcon className=\"w-8 h-8\" />;\r\n      default:\r\n        return <CogIcon className=\"w-8 h-8\" />;\r\n    }\r\n  };\r\n\r\n  const getCurrentPlan = () => {\r\n    return plans.find(plan => plan.id === currentSubscription?.planId);\r\n  };\r\n\r\n  const isCurrentPlan = (planId: SubscriptionTier) => {\r\n    return currentSubscription?.planId === planId;\r\n  };\r\n\r\n  const canUpgrade = (planId: SubscriptionTier) => {\r\n    if (!currentSubscription) return true;\r\n    \r\n    const currentPlanIndex = plans.findIndex(p => p.id === currentSubscription.planId);\r\n    const targetPlanIndex = plans.findIndex(p => p.id === planId);\r\n    \r\n    return targetPlanIndex > currentPlanIndex;\r\n  };\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-50 dark:bg-gray-900 py-12\">\r\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\r\n        {/* Header */}\r\n        <div className=\"text-center mb-12\">\r\n          <h1 className=\"text-4xl font-bold text-gray-900 dark:text-white mb-4\">\r\n            Choose Your Plan\r\n          </h1>\r\n          <p className=\"text-xl text-gray-600 dark:text-gray-400 max-w-3xl mx-auto\">\r\n            Select the perfect plan for your needs. Upgrade or downgrade at any time.\r\n          </p>\r\n        </div>\r\n\r\n        {/* Current Plan Status */}\r\n        {currentSubscription && (\r\n          <div className=\"mb-8\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6 border-l-4 border-orange-500\">\r\n              <div className=\"flex items-center justify-between\">\r\n                <div>\r\n                  <h3 className=\"text-lg font-semibold text-gray-900 dark:text-white\">\r\n                    Current Plan: {getCurrentPlan()?.name}\r\n                  </h3>\r\n                  <p className=\"text-gray-600 dark:text-gray-400\">\r\n                    {getCurrentPlan()?.description}\r\n                  </p>\r\n                </div>\r\n                <div className=\"text-right\">\r\n                  <div className=\"text-2xl font-bold text-orange-600\">\r\n                    ${getCurrentPlan()?.price}/month\r\n                  </div>\r\n                  <div className=\"text-sm text-gray-500\">\r\n                    {currentSubscription.status === 'active' ? 'Active' : currentSubscription.status}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        {/* Plans Grid */}\r\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8 mb-12\">\r\n          {plans.map((plan) => {\r\n            const isCurrent = isCurrentPlan(plan.id);\r\n            const canUpgradeToThis = canUpgrade(plan.id);\r\n            const isUpgradingToThis = selectedPlan === plan.id && isUpgrading;\r\n\r\n            return (\r\n              <motion.div\r\n                key={plan.id}\r\n                initial={{ opacity: 0, y: 20 }}\r\n                animate={{ opacity: 1, y: 0 }}\r\n                transition={{ duration: 0.5 }}\r\n                className={`relative bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden ${\r\n                  plan.popular ? 'ring-2 ring-orange-500' : ''\r\n                } ${isCurrent ? 'ring-2 ring-green-500' : ''}`}\r\n              >\r\n                {/* Popular Badge */}\r\n                {plan.popular && (\r\n                  <div className=\"absolute top-0 right-0 bg-orange-500 text-white px-4 py-1 text-sm font-medium rounded-bl-lg\">\r\n                    Most Popular\r\n                  </div>\r\n                )}\r\n\r\n                {/* Current Plan Badge */}\r\n                {isCurrent && (\r\n                  <div className=\"absolute top-0 right-0 bg-green-500 text-white px-4 py-1 text-sm font-medium rounded-bl-lg\">\r\n                    Current Plan\r\n                  </div>\r\n                )}\r\n\r\n                <div className=\"p-8\">\r\n                  {/* Plan Header */}\r\n                  <div className=\"text-center mb-6\">\r\n                    <div className={`inline-flex items-center justify-center w-16 h-16 rounded-full mb-4 ${\r\n                      plan.id === 'free' ? 'bg-gray-100 dark:bg-gray-700' :\r\n                      plan.id === 'pro' ? 'bg-blue-100 dark:bg-blue-900' :\r\n                      plan.id === 'business' ? 'bg-green-100 dark:bg-green-900' :\r\n                      'bg-purple-100 dark:bg-purple-900'\r\n                    }`}>\r\n                      {getPlanIcon(plan.id)}\r\n                    </div>\r\n                    <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                      {plan.name}\r\n                    </h3>\r\n                    <p className=\"text-gray-600 dark:text-gray-400 mb-4\">\r\n                      {plan.description}\r\n                    </p>\r\n                    <div className=\"text-4xl font-bold text-gray-900 dark:text-white mb-2\">\r\n                      ${plan.price}\r\n                      <span className=\"text-lg font-normal text-gray-500\">/month</span>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Features */}\r\n                  <div className=\"space-y-4 mb-8\">\r\n                    {plan.features.map((feature) => (\r\n                      <div key={feature.id} className=\"flex items-start space-x-3\">\r\n                        <div className={`flex-shrink-0 w-5 h-5 rounded-full flex items-center justify-center ${\r\n                          feature.included \r\n                            ? 'bg-green-100 dark:bg-green-900' \r\n                            : 'bg-gray-100 dark:bg-gray-700'\r\n                        }`}>\r\n                          {feature.included ? (\r\n                            <CheckIcon className=\"w-3 h-3 text-green-600 dark:text-green-400\" />\r\n                          ) : (\r\n                            <XMarkIcon className=\"w-3 h-3 text-gray-400\" />\r\n                          )}\r\n                        </div>\r\n                        <div className=\"flex-1\">\r\n                          <p className={`text-sm font-medium ${\r\n                            feature.included \r\n                              ? 'text-gray-900 dark:text-white' \r\n                              : 'text-gray-500 dark:text-gray-400'\r\n                          }`}>\r\n                            {feature.name}\r\n                          </p>\r\n                          <p className=\"text-xs text-gray-500 dark:text-gray-400\">\r\n                            {feature.description}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n\r\n                  {/* Action Button */}\r\n                  <button\r\n                    onClick={() => handleUpgrade(plan.id)}\r\n                    disabled={isCurrent || !canUpgradeToThis || isUpgradingToThis || loading}\r\n                    className={`w-full py-3 px-4 rounded-lg font-medium transition-colors ${\r\n                      isCurrent\r\n                        ? 'bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400 cursor-not-allowed'\r\n                        : !canUpgradeToThis\r\n                        ? 'bg-gray-100 dark:bg-gray-700 text-gray-500 dark:text-gray-400 cursor-not-allowed'\r\n                        : isUpgradingToThis\r\n                        ? 'bg-orange-300 text-white cursor-not-allowed'\r\n                        : plan.id === 'free'\r\n                        ? 'bg-gray-900 dark:bg-gray-700 text-white hover:bg-gray-800 dark:hover:bg-gray-600'\r\n                        : 'bg-orange-500 text-white hover:bg-orange-600'\r\n                    }`}\r\n                  >\r\n                    {isCurrent ? (\r\n                      'Current Plan'\r\n                    ) : !canUpgradeToThis ? (\r\n                      'Downgrade Not Available'\r\n                    ) : isUpgradingToThis ? (\r\n                      'Upgrading...'\r\n                    ) : plan.id === 'free' ? (\r\n                      'Get Started'\r\n                    ) : (\r\n                      <>\r\n                        Upgrade to {plan.name}\r\n                        <ArrowRightIcon className=\"w-4 h-4 ml-2 inline\" />\r\n                      </>\r\n                    )}\r\n                  </button>\r\n                </div>\r\n              </motion.div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {/* Feature Comparison Table */}\r\n        <div className=\"bg-white dark:bg-gray-800 rounded-2xl shadow-lg overflow-hidden\">\r\n          <div className=\"px-8 py-6 border-b border-gray-200 dark:border-gray-700\">\r\n            <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white\">\r\n              Feature Comparison\r\n            </h3>\r\n            <p className=\"text-gray-600 dark:text-gray-400 mt-2\">\r\n              Compare all features across our plans\r\n            </p>\r\n          </div>\r\n          \r\n          <div className=\"overflow-x-auto\">\r\n            <table className=\"w-full\">\r\n              <thead className=\"bg-gray-50 dark:bg-gray-700\">\r\n                <tr>\r\n                  <th className=\"px-6 py-4 text-left text-sm font-medium text-gray-900 dark:text-white\">\r\n                    Features\r\n                  </th>\r\n                  {plans.map((plan) => (\r\n                    <th key={plan.id} className=\"px-6 py-4 text-center text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {plan.name}\r\n                    </th>\r\n                  ))}\r\n                </tr>\r\n              </thead>\r\n              <tbody className=\"divide-y divide-gray-200 dark:divide-gray-700\">\r\n                {subscriptionService.getFeatureComparison().map((comparison) => (\r\n                  <tr key={comparison.feature}>\r\n                    <td className=\"px-6 py-4 text-sm font-medium text-gray-900 dark:text-white\">\r\n                      {comparison.feature}\r\n                    </td>\r\n                    {plans.map((plan) => {\r\n                      const hasFeature = plan.id === 'free' ? comparison.free :\r\n                                       plan.id === 'pro' ? comparison.pro :\r\n                                       plan.id === 'business' ? comparison.business :\r\n                                       plan.id === 'enterprise' ? comparison.enterprise : false;\r\n                      \r\n                      return (\r\n                        <td key={plan.id} className=\"px-6 py-4 text-center\">\r\n                          {hasFeature ? (\r\n                            <CheckIcon className=\"w-5 h-5 text-green-500 mx-auto\" />\r\n                          ) : (\r\n                            <XMarkIcon className=\"w-5 h-5 text-gray-400 mx-auto\" />\r\n                          )}\r\n                        </td>\r\n                      );\r\n                    })}\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n        {/* FAQ Section */}\r\n        <div className=\"mt-12\">\r\n          <h3 className=\"text-2xl font-bold text-gray-900 dark:text-white text-center mb-8\">\r\n            Frequently Asked Questions\r\n          </h3>\r\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                Can I change my plan anytime?\r\n              </h4>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                Yes, you can upgrade or downgrade your plan at any time. Changes take effect immediately.\r\n              </p>\r\n            </div>\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                What payment methods do you accept?\r\n              </h4>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                We accept all major credit cards, debit cards, and bank transfers.\r\n              </p>\r\n            </div>\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                Is there a free trial?\r\n              </h4>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                Yes, all paid plans come with a 14-day free trial. No credit card required.\r\n              </p>\r\n            </div>\r\n            <div className=\"bg-white dark:bg-gray-800 rounded-lg p-6\">\r\n              <h4 className=\"text-lg font-semibold text-gray-900 dark:text-white mb-2\">\r\n                Can I cancel anytime?\r\n              </h4>\r\n              <p className=\"text-gray-600 dark:text-gray-400\">\r\n                Yes, you can cancel your subscription at any time. No cancellation fees.\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SubscriptionPlans;\r\n","import * as React from \"react\";\nfunction ArrowRightIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"M13.5 4.5 21 12m0 0-7.5 7.5M21 12H3\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(ArrowRightIcon);\nexport default ForwardRef;","import * as React from \"react\";\nfunction CheckIcon({\n  title,\n  titleId,\n  ...props\n}, svgRef) {\n  return /*#__PURE__*/React.createElement(\"svg\", Object.assign({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    fill: \"none\",\n    viewBox: \"0 0 24 24\",\n    strokeWidth: 1.5,\n    stroke: \"currentColor\",\n    \"aria-hidden\": \"true\",\n    \"data-slot\": \"icon\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, /*#__PURE__*/React.createElement(\"path\", {\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    d: \"m4.5 12.75 6 6 9-13.5\"\n  }));\n}\nconst ForwardRef = /*#__PURE__*/ React.forwardRef(CheckIcon);\nexport default ForwardRef;"],"names":["SubscriptionPlans","_getCurrentPlan","_getCurrentPlan2","_getCurrentPlan3","plans","currentSubscription","upgradeSubscription","loading","useSubscription","user","useAuth","selectedPlan","setSelectedPlan","useState","isUpgrading","setIsUpgrading","getPlanIcon","planId","_jsx","ShieldCheckIcon","className","ChartBarIcon","UsersIcon","StarIcon","CogIcon","getCurrentPlan","find","plan","id","children","_jsxs","name","description","price","status","map","isCurrent","canUpgradeToThis","currentPlanIndex","findIndex","p","canUpgrade","isUpgradingToThis","motion","div","initial","opacity","y","animate","transition","duration","concat","popular","features","feature","included","CheckIcon","XMarkIcon","onClick","async","result","_plans$find","success","toast","error","info","handleUpgrade","disabled","_Fragment","ArrowRightIcon","subscriptionService","getFeatureComparison","comparison","hasFeature","free","pro","business","enterprise","_ref","svgRef","title","titleId","props","_objectWithoutProperties","_excluded","React","Object","assign","xmlns","fill","viewBox","strokeWidth","stroke","ref","strokeLinecap","strokeLinejoin","d"],"sourceRoot":""}