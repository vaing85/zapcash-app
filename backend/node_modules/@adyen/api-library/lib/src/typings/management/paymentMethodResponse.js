"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodResponse = void 0;
class PaymentMethodResponse {
    static getAttributeTypeMap() {
        return PaymentMethodResponse.attributeTypeMap;
    }
    constructor() {
    }
}
exports.PaymentMethodResponse = PaymentMethodResponse;
PaymentMethodResponse.discriminator = undefined;
PaymentMethodResponse.mapping = undefined;
PaymentMethodResponse.attributeTypeMap = [
    {
        "name": "_links",
        "baseName": "_links",
        "type": "PaginationLinks | null",
        "format": ""
    },
    {
        "name": "data",
        "baseName": "data",
        "type": "Array<PaymentMethod>",
        "format": ""
    },
    {
        "name": "itemsTotal",
        "baseName": "itemsTotal",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "pagesTotal",
        "baseName": "pagesTotal",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "typesWithErrors",
        "baseName": "typesWithErrors",
        "type": "PaymentMethodResponse.TypesWithErrorsEnum",
        "format": ""
    }
];
(function (PaymentMethodResponse) {
    let TypesWithErrorsEnum;
    (function (TypesWithErrorsEnum) {
        TypesWithErrorsEnum["Abrapetite"] = "abrapetite";
        TypesWithErrorsEnum["AbrapetiteCredit"] = "abrapetite_credit";
        TypesWithErrorsEnum["AbrapetiteDebit"] = "abrapetite_debit";
        TypesWithErrorsEnum["AbrapetitePrepaid"] = "abrapetite_prepaid";
        TypesWithErrorsEnum["Accel"] = "accel";
        TypesWithErrorsEnum["Ach"] = "ach";
        TypesWithErrorsEnum["Affirm"] = "affirm";
        TypesWithErrorsEnum["Afterpaytouch"] = "afterpaytouch";
        TypesWithErrorsEnum["Alelo"] = "alelo";
        TypesWithErrorsEnum["Alipay"] = "alipay";
        TypesWithErrorsEnum["AlipayHk"] = "alipay_hk";
        TypesWithErrorsEnum["AlipayPlus"] = "alipay_plus";
        TypesWithErrorsEnum["AlipayWap"] = "alipay_wap";
        TypesWithErrorsEnum["Amex"] = "amex";
        TypesWithErrorsEnum["Applepay"] = "applepay";
        TypesWithErrorsEnum["Avancard"] = "avancard";
        TypesWithErrorsEnum["AvancardCredit"] = "avancard_credit";
        TypesWithErrorsEnum["AvancardDebit"] = "avancard_debit";
        TypesWithErrorsEnum["BaneseCard"] = "banese_card";
        TypesWithErrorsEnum["BaneseCardCredit"] = "banese_card_credit";
        TypesWithErrorsEnum["BaneseCardDebit"] = "banese_card_debit";
        TypesWithErrorsEnum["BaneseCardPrepaid"] = "banese_card_prepaid";
        TypesWithErrorsEnum["Bcmc"] = "bcmc";
        TypesWithErrorsEnum["Blik"] = "blik";
        TypesWithErrorsEnum["Cartebancaire"] = "cartebancaire";
        TypesWithErrorsEnum["Clearpay"] = "clearpay";
        TypesWithErrorsEnum["Clicktopay"] = "clicktopay";
        TypesWithErrorsEnum["Cooper"] = "cooper";
        TypesWithErrorsEnum["CooperCredit"] = "cooper_credit";
        TypesWithErrorsEnum["CooperDebit"] = "cooper_debit";
        TypesWithErrorsEnum["CooperFoodDebit"] = "cooper_food_debit";
        TypesWithErrorsEnum["CooperMealDebit"] = "cooper_meal_debit";
        TypesWithErrorsEnum["CooperPrepaid"] = "cooper_prepaid";
        TypesWithErrorsEnum["CooperPrivateCredit"] = "cooper_private_credit";
        TypesWithErrorsEnum["CooperRetailCredit"] = "cooper_retail_credit";
        TypesWithErrorsEnum["Credtodos"] = "credtodos";
        TypesWithErrorsEnum["CredtodosPrivateCredit"] = "credtodos_private_credit";
        TypesWithErrorsEnum["CredtodosPrivateDebit"] = "credtodos_private_debit";
        TypesWithErrorsEnum["Cup"] = "cup";
        TypesWithErrorsEnum["Diners"] = "diners";
        TypesWithErrorsEnum["DirectdebitGb"] = "directdebit_GB";
        TypesWithErrorsEnum["Discover"] = "discover";
        TypesWithErrorsEnum["EbankingFi"] = "ebanking_FI";
        TypesWithErrorsEnum["EftDirectdebitCa"] = "eft_directdebit_CA";
        TypesWithErrorsEnum["EftposAustralia"] = "eftpos_australia";
        TypesWithErrorsEnum["Elo"] = "elo";
        TypesWithErrorsEnum["Elocredit"] = "elocredit";
        TypesWithErrorsEnum["Elodebit"] = "elodebit";
        TypesWithErrorsEnum["Girocard"] = "girocard";
        TypesWithErrorsEnum["Googlepay"] = "googlepay";
        TypesWithErrorsEnum["GreenCard"] = "green_card";
        TypesWithErrorsEnum["GreenCardCredit"] = "green_card_credit";
        TypesWithErrorsEnum["GreenCardDebit"] = "green_card_debit";
        TypesWithErrorsEnum["GreenCardFoodPrepaid"] = "green_card_food_prepaid";
        TypesWithErrorsEnum["GreenCardMealPrepaid"] = "green_card_meal_prepaid";
        TypesWithErrorsEnum["GreenCardPrepaid"] = "green_card_prepaid";
        TypesWithErrorsEnum["Hiper"] = "hiper";
        TypesWithErrorsEnum["Hipercard"] = "hipercard";
        TypesWithErrorsEnum["Ideal"] = "ideal";
        TypesWithErrorsEnum["InteracCard"] = "interac_card";
        TypesWithErrorsEnum["Jcb"] = "jcb";
        TypesWithErrorsEnum["Klarna"] = "klarna";
        TypesWithErrorsEnum["KlarnaAccount"] = "klarna_account";
        TypesWithErrorsEnum["KlarnaPaynow"] = "klarna_paynow";
        TypesWithErrorsEnum["LeCard"] = "le_card";
        TypesWithErrorsEnum["LeCardCredit"] = "le_card_credit";
        TypesWithErrorsEnum["LeCardDebit"] = "le_card_debit";
        TypesWithErrorsEnum["Maestro"] = "maestro";
        TypesWithErrorsEnum["MaestroUsa"] = "maestro_usa";
        TypesWithErrorsEnum["Maxifrota"] = "maxifrota";
        TypesWithErrorsEnum["MaxifrotaPrepaid"] = "maxifrota_prepaid";
        TypesWithErrorsEnum["Mbway"] = "mbway";
        TypesWithErrorsEnum["Mc"] = "mc";
        TypesWithErrorsEnum["Mcdebit"] = "mcdebit";
        TypesWithErrorsEnum["MealVoucherFr"] = "mealVoucher_FR";
        TypesWithErrorsEnum["Megaleve"] = "megaleve";
        TypesWithErrorsEnum["MegaleveCredit"] = "megaleve_credit";
        TypesWithErrorsEnum["MegaleveDebit"] = "megaleve_debit";
        TypesWithErrorsEnum["Mobilepay"] = "mobilepay";
        TypesWithErrorsEnum["Multibanco"] = "multibanco";
        TypesWithErrorsEnum["Nutricash"] = "nutricash";
        TypesWithErrorsEnum["NutricashPrepaid"] = "nutricash_prepaid";
        TypesWithErrorsEnum["Nyce"] = "nyce";
        TypesWithErrorsEnum["OnlineBankingPl"] = "onlineBanking_PL";
        TypesWithErrorsEnum["Paybybank"] = "paybybank";
        TypesWithErrorsEnum["PaybybankPlaid"] = "paybybank_plaid";
        TypesWithErrorsEnum["Payme"] = "payme";
        TypesWithErrorsEnum["PaymePos"] = "payme_pos";
        TypesWithErrorsEnum["Paynow"] = "paynow";
        TypesWithErrorsEnum["PaynowPos"] = "paynow_pos";
        TypesWithErrorsEnum["Paypal"] = "paypal";
        TypesWithErrorsEnum["Payto"] = "payto";
        TypesWithErrorsEnum["PersonalCard"] = "personal_card";
        TypesWithErrorsEnum["PersonalCardCredit"] = "personal_card_credit";
        TypesWithErrorsEnum["PersonalCardDebit"] = "personal_card_debit";
        TypesWithErrorsEnum["Pulse"] = "pulse";
        TypesWithErrorsEnum["Romcard"] = "romcard";
        TypesWithErrorsEnum["RomcardCredit"] = "romcard_credit";
        TypesWithErrorsEnum["RomcardDebit"] = "romcard_debit";
        TypesWithErrorsEnum["Senff"] = "senff";
        TypesWithErrorsEnum["SenffCredit"] = "senff_credit";
        TypesWithErrorsEnum["Sepadirectdebit"] = "sepadirectdebit";
        TypesWithErrorsEnum["Sodexo"] = "sodexo";
        TypesWithErrorsEnum["Star"] = "star";
        TypesWithErrorsEnum["Swish"] = "swish";
        TypesWithErrorsEnum["Ticket"] = "ticket";
        TypesWithErrorsEnum["TodoGiftcard"] = "todo_giftcard";
        TypesWithErrorsEnum["Trustly"] = "trustly";
        TypesWithErrorsEnum["Twint"] = "twint";
        TypesWithErrorsEnum["TwintPos"] = "twint_pos";
        TypesWithErrorsEnum["UpBrazil"] = "up_brazil";
        TypesWithErrorsEnum["UpBrazilCredit"] = "up_brazil_credit";
        TypesWithErrorsEnum["UpBrazilDebit"] = "up_brazil_debit";
        TypesWithErrorsEnum["UpBrazilPrepaid"] = "up_brazil_prepaid";
        TypesWithErrorsEnum["ValeRefeicao"] = "vale_refeicao";
        TypesWithErrorsEnum["ValeRefeicaoPrepaid"] = "vale_refeicao_prepaid";
        TypesWithErrorsEnum["VegasCard"] = "vegas_card";
        TypesWithErrorsEnum["VegasCardCredit"] = "vegas_card_credit";
        TypesWithErrorsEnum["VegasCardDebit"] = "vegas_card_debit";
        TypesWithErrorsEnum["VeroCard"] = "vero_card";
        TypesWithErrorsEnum["VeroCardCredit"] = "vero_card_credit";
        TypesWithErrorsEnum["VeroCardDebit"] = "vero_card_debit";
        TypesWithErrorsEnum["VeroCardPrepaid"] = "vero_card_prepaid";
        TypesWithErrorsEnum["Vipps"] = "vipps";
        TypesWithErrorsEnum["Visa"] = "visa";
        TypesWithErrorsEnum["Visadebit"] = "visadebit";
        TypesWithErrorsEnum["Vpay"] = "vpay";
        TypesWithErrorsEnum["Wechatpay"] = "wechatpay";
        TypesWithErrorsEnum["WechatpayPos"] = "wechatpay_pos";
    })(TypesWithErrorsEnum = PaymentMethodResponse.TypesWithErrorsEnum || (PaymentMethodResponse.TypesWithErrorsEnum = {}));
})(PaymentMethodResponse = exports.PaymentMethodResponse || (exports.PaymentMethodResponse = {}));
//# sourceMappingURL=paymentMethodResponse.js.map