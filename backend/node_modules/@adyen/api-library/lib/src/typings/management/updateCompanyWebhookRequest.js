"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.UpdateCompanyWebhookRequest = void 0;
class UpdateCompanyWebhookRequest {
    static getAttributeTypeMap() {
        return UpdateCompanyWebhookRequest.attributeTypeMap;
    }
    constructor() {
    }
}
exports.UpdateCompanyWebhookRequest = UpdateCompanyWebhookRequest;
UpdateCompanyWebhookRequest.discriminator = undefined;
UpdateCompanyWebhookRequest.mapping = undefined;
UpdateCompanyWebhookRequest.attributeTypeMap = [
    {
        "name": "acceptsExpiredCertificate",
        "baseName": "acceptsExpiredCertificate",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "acceptsSelfSignedCertificate",
        "baseName": "acceptsSelfSignedCertificate",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "acceptsUntrustedRootCertificate",
        "baseName": "acceptsUntrustedRootCertificate",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "active",
        "baseName": "active",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "additionalSettings",
        "baseName": "additionalSettings",
        "type": "AdditionalSettings | null",
        "format": ""
    },
    {
        "name": "communicationFormat",
        "baseName": "communicationFormat",
        "type": "UpdateCompanyWebhookRequest.CommunicationFormatEnum",
        "format": ""
    },
    {
        "name": "description",
        "baseName": "description",
        "type": "string",
        "format": ""
    },
    {
        "name": "encryptionProtocol",
        "baseName": "encryptionProtocol",
        "type": "UpdateCompanyWebhookRequest.EncryptionProtocolEnum",
        "format": ""
    },
    {
        "name": "filterMerchantAccountType",
        "baseName": "filterMerchantAccountType",
        "type": "UpdateCompanyWebhookRequest.FilterMerchantAccountTypeEnum",
        "format": ""
    },
    {
        "name": "filterMerchantAccounts",
        "baseName": "filterMerchantAccounts",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "networkType",
        "baseName": "networkType",
        "type": "UpdateCompanyWebhookRequest.NetworkTypeEnum",
        "format": ""
    },
    {
        "name": "password",
        "baseName": "password",
        "type": "string",
        "format": ""
    },
    {
        "name": "populateSoapActionHeader",
        "baseName": "populateSoapActionHeader",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string",
        "format": ""
    },
    {
        "name": "username",
        "baseName": "username",
        "type": "string",
        "format": ""
    }
];
(function (UpdateCompanyWebhookRequest) {
    let CommunicationFormatEnum;
    (function (CommunicationFormatEnum) {
        CommunicationFormatEnum["Http"] = "http";
        CommunicationFormatEnum["Json"] = "json";
        CommunicationFormatEnum["Soap"] = "soap";
    })(CommunicationFormatEnum = UpdateCompanyWebhookRequest.CommunicationFormatEnum || (UpdateCompanyWebhookRequest.CommunicationFormatEnum = {}));
    let EncryptionProtocolEnum;
    (function (EncryptionProtocolEnum) {
        EncryptionProtocolEnum["Http"] = "HTTP";
        EncryptionProtocolEnum["Tlsv12"] = "TLSv1.2";
        EncryptionProtocolEnum["Tlsv13"] = "TLSv1.3";
    })(EncryptionProtocolEnum = UpdateCompanyWebhookRequest.EncryptionProtocolEnum || (UpdateCompanyWebhookRequest.EncryptionProtocolEnum = {}));
    let FilterMerchantAccountTypeEnum;
    (function (FilterMerchantAccountTypeEnum) {
        FilterMerchantAccountTypeEnum["AllAccounts"] = "allAccounts";
        FilterMerchantAccountTypeEnum["ExcludeAccounts"] = "excludeAccounts";
        FilterMerchantAccountTypeEnum["IncludeAccounts"] = "includeAccounts";
    })(FilterMerchantAccountTypeEnum = UpdateCompanyWebhookRequest.FilterMerchantAccountTypeEnum || (UpdateCompanyWebhookRequest.FilterMerchantAccountTypeEnum = {}));
    let NetworkTypeEnum;
    (function (NetworkTypeEnum) {
        NetworkTypeEnum["Local"] = "local";
        NetworkTypeEnum["Public"] = "public";
    })(NetworkTypeEnum = UpdateCompanyWebhookRequest.NetworkTypeEnum || (UpdateCompanyWebhookRequest.NetworkTypeEnum = {}));
})(UpdateCompanyWebhookRequest = exports.UpdateCompanyWebhookRequest || (exports.UpdateCompanyWebhookRequest = {}));
//# sourceMappingURL=updateCompanyWebhookRequest.js.map