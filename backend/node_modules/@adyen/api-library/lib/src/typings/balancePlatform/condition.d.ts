export declare class Condition {
    /**
    * Define the type of balance about which you want to get notified. Possible values:  * **available**: the balance available for use.  * **balance**: the sum of transactions that have already been settled.  * **pending**: the sum of transactions that will be settled in the future.  * **reserved**: the balance currently held in reserve.
    */
    "balanceType": Condition.BalanceTypeEnum;
    /**
    * Define when you want to get notified about a balance change. Possible values:  * **greaterThan**: the balance in the account(s) exceeds the specified `value`.  * **greaterThanOrEqual**: the balance in the account(s) reaches or exceeds the specified `value`.  * **lessThan**: the balance in the account(s) drops below the specified `value`.  * **lessThanOrEqual**: the balance in the account(s) reaches to drops below the specified `value`.
    */
    "conditionType": Condition.ConditionTypeEnum;
    /**
    * The value limit in the specified balance type and currency, in minor units.
    */
    "value": number;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare namespace Condition {
    enum BalanceTypeEnum {
        Balance = "balance",
        Available = "available",
        Pending = "pending",
        Reserved = "reserved"
    }
    enum ConditionTypeEnum {
        GreaterThan = "greaterThan",
        GreaterThanOrEqual = "greaterThanOrEqual",
        LessThan = "lessThan",
        LessThanOrEqual = "lessThanOrEqual"
    }
}
