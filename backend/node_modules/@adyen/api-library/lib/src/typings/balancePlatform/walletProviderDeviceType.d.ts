export declare class WalletProviderDeviceType {
    /**
    * Defines how the condition must be evaluated.
    */
    "operation": string;
    "value"?: Array<WalletProviderDeviceType.ValueEnum>;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare namespace WalletProviderDeviceType {
    enum ValueEnum {
        Card = "CARD",
        MobilePhone = "MOBILE_PHONE",
        Other = "OTHER",
        Pc = "PC",
        TabletOrEreader = "TABLET_OR_EREADER",
        Unknown = "UNKNOWN",
        WatchOrWristband = "WATCH_OR_WRISTBAND",
        Wearable = "WEARABLE"
    }
}
