import { Amount } from "./amount";
export declare class AmountAdjustment {
    "amount"?: Amount | null;
    /**
    * The type of markup that is applied to an authorised payment.  Possible values: **exchange**, **forexMarkup**, **authHoldReserve**, **atmMarkup**.
    */
    "amountAdjustmentType"?: AmountAdjustment.AmountAdjustmentTypeEnum;
    /**
    * The basepoints associated with the applied markup.
    */
    "basepoints"?: number;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare namespace AmountAdjustment {
    enum AmountAdjustmentTypeEnum {
        AtmMarkup = "atmMarkup",
        AuthHoldReserve = "authHoldReserve",
        Exchange = "exchange",
        ForexMarkup = "forexMarkup"
    }
}
