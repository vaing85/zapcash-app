"use strict";
/*
 * The version of the OpenAPI document: v4
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.InternalReviewTrackingData = void 0;
class InternalReviewTrackingData {
    static getAttributeTypeMap() {
        return InternalReviewTrackingData.attributeTypeMap;
    }
    constructor() {
    }
}
exports.InternalReviewTrackingData = InternalReviewTrackingData;
InternalReviewTrackingData.discriminator = undefined;
InternalReviewTrackingData.mapping = undefined;
InternalReviewTrackingData.attributeTypeMap = [
    {
        "name": "reason",
        "baseName": "reason",
        "type": "InternalReviewTrackingData.ReasonEnum",
        "format": ""
    },
    {
        "name": "status",
        "baseName": "status",
        "type": "InternalReviewTrackingData.StatusEnum",
        "format": ""
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "InternalReviewTrackingData.TypeEnum",
        "format": ""
    }
];
(function (InternalReviewTrackingData) {
    let ReasonEnum;
    (function (ReasonEnum) {
        ReasonEnum["RefusedForRegulatoryReasons"] = "refusedForRegulatoryReasons";
    })(ReasonEnum = InternalReviewTrackingData.ReasonEnum || (InternalReviewTrackingData.ReasonEnum = {}));
    let StatusEnum;
    (function (StatusEnum) {
        StatusEnum["Pending"] = "pending";
        StatusEnum["Failed"] = "failed";
    })(StatusEnum = InternalReviewTrackingData.StatusEnum || (InternalReviewTrackingData.StatusEnum = {}));
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["InternalReview"] = "internalReview";
    })(TypeEnum = InternalReviewTrackingData.TypeEnum || (InternalReviewTrackingData.TypeEnum = {}));
})(InternalReviewTrackingData = exports.InternalReviewTrackingData || (exports.InternalReviewTrackingData = {}));
//# sourceMappingURL=internalReviewTrackingData.js.map