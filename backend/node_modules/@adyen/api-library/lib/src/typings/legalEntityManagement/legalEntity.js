"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegalEntity = void 0;
class LegalEntity {
    static getAttributeTypeMap() {
        return LegalEntity.attributeTypeMap;
    }
    constructor() {
    }
}
exports.LegalEntity = LegalEntity;
LegalEntity.discriminator = undefined;
LegalEntity.mapping = undefined;
LegalEntity.attributeTypeMap = [
    {
        "name": "capabilities",
        "baseName": "capabilities",
        "type": "{ [key: string]: LegalEntityCapability; }",
        "format": ""
    },
    {
        "name": "documentDetails",
        "baseName": "documentDetails",
        "type": "Array<DocumentReference>",
        "format": ""
    },
    {
        "name": "documents",
        "baseName": "documents",
        "type": "Array<EntityReference>",
        "format": ""
    },
    {
        "name": "entityAssociations",
        "baseName": "entityAssociations",
        "type": "Array<LegalEntityAssociation>",
        "format": ""
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string",
        "format": ""
    },
    {
        "name": "individual",
        "baseName": "individual",
        "type": "Individual | null",
        "format": ""
    },
    {
        "name": "organization",
        "baseName": "organization",
        "type": "Organization | null",
        "format": ""
    },
    {
        "name": "problems",
        "baseName": "problems",
        "type": "Array<CapabilityProblem>",
        "format": ""
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string",
        "format": ""
    },
    {
        "name": "soleProprietorship",
        "baseName": "soleProprietorship",
        "type": "SoleProprietorship | null",
        "format": ""
    },
    {
        "name": "transferInstruments",
        "baseName": "transferInstruments",
        "type": "Array<TransferInstrumentReference>",
        "format": ""
    },
    {
        "name": "trust",
        "baseName": "trust",
        "type": "Trust | null",
        "format": ""
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "LegalEntity.TypeEnum",
        "format": ""
    },
    {
        "name": "unincorporatedPartnership",
        "baseName": "unincorporatedPartnership",
        "type": "UnincorporatedPartnership | null",
        "format": ""
    },
    {
        "name": "verificationDeadlines",
        "baseName": "verificationDeadlines",
        "type": "Array<VerificationDeadline>",
        "format": ""
    },
    {
        "name": "verificationPlan",
        "baseName": "verificationPlan",
        "type": "string",
        "format": ""
    }
];
(function (LegalEntity) {
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["Individual"] = "individual";
        TypeEnum["Organization"] = "organization";
        TypeEnum["SoleProprietorship"] = "soleProprietorship";
        TypeEnum["Trust"] = "trust";
        TypeEnum["UnincorporatedPartnership"] = "unincorporatedPartnership";
    })(TypeEnum = LegalEntity.TypeEnum || (LegalEntity.TypeEnum = {}));
})(LegalEntity = exports.LegalEntity || (exports.LegalEntity = {}));
//# sourceMappingURL=legalEntity.js.map