"use strict";
/*
 * The version of the OpenAPI document: v3
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.LegalEntityAssociation = void 0;
class LegalEntityAssociation {
    static getAttributeTypeMap() {
        return LegalEntityAssociation.attributeTypeMap;
    }
    constructor() {
    }
}
exports.LegalEntityAssociation = LegalEntityAssociation;
LegalEntityAssociation.discriminator = undefined;
LegalEntityAssociation.mapping = undefined;
LegalEntityAssociation.attributeTypeMap = [
    {
        "name": "associatorId",
        "baseName": "associatorId",
        "type": "string",
        "format": ""
    },
    {
        "name": "entityType",
        "baseName": "entityType",
        "type": "string",
        "format": ""
    },
    {
        "name": "jobTitle",
        "baseName": "jobTitle",
        "type": "string",
        "format": ""
    },
    {
        "name": "legalEntityId",
        "baseName": "legalEntityId",
        "type": "string",
        "format": ""
    },
    {
        "name": "name",
        "baseName": "name",
        "type": "string",
        "format": ""
    },
    {
        "name": "nominee",
        "baseName": "nominee",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "relationship",
        "baseName": "relationship",
        "type": "string",
        "format": ""
    },
    {
        "name": "settlorExemptionReason",
        "baseName": "settlorExemptionReason",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "type",
        "baseName": "type",
        "type": "LegalEntityAssociation.TypeEnum",
        "format": ""
    }
];
(function (LegalEntityAssociation) {
    let TypeEnum;
    (function (TypeEnum) {
        TypeEnum["DefinedBeneficiary"] = "definedBeneficiary";
        TypeEnum["Director"] = "director";
        TypeEnum["ImmediateParentCompany"] = "immediateParentCompany";
        TypeEnum["LegalRepresentative"] = "legalRepresentative";
        TypeEnum["PciSignatory"] = "pciSignatory";
        TypeEnum["Protector"] = "protector";
        TypeEnum["SecondaryPartner"] = "secondaryPartner";
        TypeEnum["SecondaryTrustee"] = "secondaryTrustee";
        TypeEnum["Settlor"] = "settlor";
        TypeEnum["Signatory"] = "signatory";
        TypeEnum["SoleProprietorship"] = "soleProprietorship";
        TypeEnum["Trust"] = "trust";
        TypeEnum["TrustOwnership"] = "trustOwnership";
        TypeEnum["UboThroughControl"] = "uboThroughControl";
        TypeEnum["UboThroughOwnership"] = "uboThroughOwnership";
        TypeEnum["UltimateParentCompany"] = "ultimateParentCompany";
        TypeEnum["UndefinedBeneficiary"] = "undefinedBeneficiary";
        TypeEnum["UnincorporatedPartnership"] = "unincorporatedPartnership";
    })(TypeEnum = LegalEntityAssociation.TypeEnum || (LegalEntityAssociation.TypeEnum = {}));
})(LegalEntityAssociation = exports.LegalEntityAssociation || (exports.LegalEntityAssociation = {}));
//# sourceMappingURL=legalEntityAssociation.js.map