"use strict";
/*
 * The version of the OpenAPI document: v71
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.PaymentMethodsRequest = void 0;
class PaymentMethodsRequest {
    static getAttributeTypeMap() {
        return PaymentMethodsRequest.attributeTypeMap;
    }
    constructor() {
    }
}
exports.PaymentMethodsRequest = PaymentMethodsRequest;
PaymentMethodsRequest.discriminator = undefined;
PaymentMethodsRequest.mapping = undefined;
PaymentMethodsRequest.attributeTypeMap = [
    {
        "name": "additionalData",
        "baseName": "additionalData",
        "type": "{ [key: string]: string; }",
        "format": ""
    },
    {
        "name": "allowedPaymentMethods",
        "baseName": "allowedPaymentMethods",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount | null",
        "format": ""
    },
    {
        "name": "blockedPaymentMethods",
        "baseName": "blockedPaymentMethods",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "browserInfo",
        "baseName": "browserInfo",
        "type": "BrowserInfo | null",
        "format": ""
    },
    {
        "name": "channel",
        "baseName": "channel",
        "type": "PaymentMethodsRequest.ChannelEnum",
        "format": ""
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string",
        "format": ""
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string",
        "format": ""
    },
    {
        "name": "order",
        "baseName": "order",
        "type": "EncryptedOrderData | null",
        "format": ""
    },
    {
        "name": "shopperConversionId",
        "baseName": "shopperConversionId",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperIP",
        "baseName": "shopperIP",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string",
        "format": ""
    },
    {
        "name": "splitCardFundingSources",
        "baseName": "splitCardFundingSources",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string",
        "format": ""
    },
    {
        "name": "storeFiltrationMode",
        "baseName": "storeFiltrationMode",
        "type": "PaymentMethodsRequest.StoreFiltrationModeEnum",
        "format": ""
    },
    {
        "name": "telephoneNumber",
        "baseName": "telephoneNumber",
        "type": "string",
        "format": ""
    }
];
(function (PaymentMethodsRequest) {
    let ChannelEnum;
    (function (ChannelEnum) {
        ChannelEnum["IOs"] = "iOS";
        ChannelEnum["Android"] = "Android";
        ChannelEnum["Web"] = "Web";
    })(ChannelEnum = PaymentMethodsRequest.ChannelEnum || (PaymentMethodsRequest.ChannelEnum = {}));
    let StoreFiltrationModeEnum;
    (function (StoreFiltrationModeEnum) {
        StoreFiltrationModeEnum["Exclusive"] = "exclusive";
        StoreFiltrationModeEnum["Inclusive"] = "inclusive";
        StoreFiltrationModeEnum["SkipFilter"] = "skipFilter";
    })(StoreFiltrationModeEnum = PaymentMethodsRequest.StoreFiltrationModeEnum || (PaymentMethodsRequest.StoreFiltrationModeEnum = {}));
})(PaymentMethodsRequest = exports.PaymentMethodsRequest || (exports.PaymentMethodsRequest = {}));
//# sourceMappingURL=paymentMethodsRequest.js.map