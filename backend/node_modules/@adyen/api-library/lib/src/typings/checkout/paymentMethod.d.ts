import { InputDetail } from "./inputDetail";
import { PaymentMethodGroup } from "./paymentMethodGroup";
import { PaymentMethodIssuer } from "./paymentMethodIssuer";
import { PaymentMethodUPIApps } from "./paymentMethodUPIApps";
export declare class PaymentMethod {
    /**
    * A list of apps for this payment method.
    */
    "apps"?: Array<PaymentMethodUPIApps>;
    /**
    * Brand for the selected gift card. For example: plastix, hmclub.
    */
    "brand"?: string;
    /**
    * List of possible brands. For example: visa, mc.
    */
    "brands"?: Array<string>;
    /**
    * The configuration of the payment method.
    */
    "configuration"?: {
        [key: string]: string;
    };
    /**
    * The funding source of the payment method.
    */
    "fundingSource"?: PaymentMethod.FundingSourceEnum;
    "group"?: PaymentMethodGroup | null;
    /**
    * All input details to be provided to complete the payment with this payment method.
    *
    * @deprecated
    */
    "inputDetails"?: Array<InputDetail>;
    /**
    * A list of issuers for this payment method.
    */
    "issuers"?: Array<PaymentMethodIssuer>;
    /**
    * The displayable name of this payment method.
    */
    "name"?: string;
    /**
    * Indicates whether this payment method should be promoted or not.
    */
    "promoted"?: boolean;
    /**
    * The unique payment method code.
    */
    "type"?: string;
    static readonly discriminator: string | undefined;
    static readonly mapping: {
        [index: string]: string;
    } | undefined;
    static readonly attributeTypeMap: Array<{
        name: string;
        baseName: string;
        type: string;
        format: string;
    }>;
    static getAttributeTypeMap(): {
        name: string;
        baseName: string;
        type: string;
        format: string;
    }[];
    constructor();
}
export declare namespace PaymentMethod {
    enum FundingSourceEnum {
        Credit = "credit",
        Debit = "debit"
    }
}
