"use strict";
/*
 * The version of the OpenAPI document: v71
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateCheckoutSessionResponse = void 0;
class CreateCheckoutSessionResponse {
    static getAttributeTypeMap() {
        return CreateCheckoutSessionResponse.attributeTypeMap;
    }
    constructor() {
    }
}
exports.CreateCheckoutSessionResponse = CreateCheckoutSessionResponse;
CreateCheckoutSessionResponse.discriminator = undefined;
CreateCheckoutSessionResponse.mapping = undefined;
CreateCheckoutSessionResponse.attributeTypeMap = [
    {
        "name": "accountInfo",
        "baseName": "accountInfo",
        "type": "AccountInfo | null",
        "format": ""
    },
    {
        "name": "additionalAmount",
        "baseName": "additionalAmount",
        "type": "Amount | null",
        "format": ""
    },
    {
        "name": "additionalData",
        "baseName": "additionalData",
        "type": "{ [key: string]: string; }",
        "format": ""
    },
    {
        "name": "allowedPaymentMethods",
        "baseName": "allowedPaymentMethods",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "amount",
        "baseName": "amount",
        "type": "Amount",
        "format": ""
    },
    {
        "name": "applicationInfo",
        "baseName": "applicationInfo",
        "type": "ApplicationInfo | null",
        "format": ""
    },
    {
        "name": "authenticationData",
        "baseName": "authenticationData",
        "type": "AuthenticationData | null",
        "format": ""
    },
    {
        "name": "billingAddress",
        "baseName": "billingAddress",
        "type": "BillingAddress | null",
        "format": ""
    },
    {
        "name": "blockedPaymentMethods",
        "baseName": "blockedPaymentMethods",
        "type": "Array<string>",
        "format": ""
    },
    {
        "name": "captureDelayHours",
        "baseName": "captureDelayHours",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "channel",
        "baseName": "channel",
        "type": "CreateCheckoutSessionResponse.ChannelEnum",
        "format": ""
    },
    {
        "name": "company",
        "baseName": "company",
        "type": "Company | null",
        "format": ""
    },
    {
        "name": "countryCode",
        "baseName": "countryCode",
        "type": "string",
        "format": ""
    },
    {
        "name": "dateOfBirth",
        "baseName": "dateOfBirth",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "deliverAt",
        "baseName": "deliverAt",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "deliveryAddress",
        "baseName": "deliveryAddress",
        "type": "DeliveryAddress | null",
        "format": ""
    },
    {
        "name": "enableOneClick",
        "baseName": "enableOneClick",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "enablePayOut",
        "baseName": "enablePayOut",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "enableRecurring",
        "baseName": "enableRecurring",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "expiresAt",
        "baseName": "expiresAt",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "fundOrigin",
        "baseName": "fundOrigin",
        "type": "FundOrigin | null",
        "format": ""
    },
    {
        "name": "fundRecipient",
        "baseName": "fundRecipient",
        "type": "FundRecipient | null",
        "format": ""
    },
    {
        "name": "id",
        "baseName": "id",
        "type": "string",
        "format": ""
    },
    {
        "name": "installmentOptions",
        "baseName": "installmentOptions",
        "type": "{ [key: string]: CheckoutSessionInstallmentOption; }",
        "format": ""
    },
    {
        "name": "lineItems",
        "baseName": "lineItems",
        "type": "Array<LineItem>",
        "format": ""
    },
    {
        "name": "mandate",
        "baseName": "mandate",
        "type": "Mandate | null",
        "format": ""
    },
    {
        "name": "mcc",
        "baseName": "mcc",
        "type": "string",
        "format": ""
    },
    {
        "name": "merchantAccount",
        "baseName": "merchantAccount",
        "type": "string",
        "format": ""
    },
    {
        "name": "merchantOrderReference",
        "baseName": "merchantOrderReference",
        "type": "string",
        "format": ""
    },
    {
        "name": "metadata",
        "baseName": "metadata",
        "type": "{ [key: string]: string; }",
        "format": ""
    },
    {
        "name": "mode",
        "baseName": "mode",
        "type": "CreateCheckoutSessionResponse.ModeEnum",
        "format": ""
    },
    {
        "name": "mpiData",
        "baseName": "mpiData",
        "type": "ThreeDSecureData | null",
        "format": ""
    },
    {
        "name": "platformChargebackLogic",
        "baseName": "platformChargebackLogic",
        "type": "PlatformChargebackLogic | null",
        "format": ""
    },
    {
        "name": "recurringExpiry",
        "baseName": "recurringExpiry",
        "type": "string",
        "format": ""
    },
    {
        "name": "recurringFrequency",
        "baseName": "recurringFrequency",
        "type": "string",
        "format": ""
    },
    {
        "name": "recurringProcessingModel",
        "baseName": "recurringProcessingModel",
        "type": "CreateCheckoutSessionResponse.RecurringProcessingModelEnum",
        "format": ""
    },
    {
        "name": "redirectFromIssuerMethod",
        "baseName": "redirectFromIssuerMethod",
        "type": "string",
        "format": ""
    },
    {
        "name": "redirectToIssuerMethod",
        "baseName": "redirectToIssuerMethod",
        "type": "string",
        "format": ""
    },
    {
        "name": "reference",
        "baseName": "reference",
        "type": "string",
        "format": ""
    },
    {
        "name": "returnUrl",
        "baseName": "returnUrl",
        "type": "string",
        "format": ""
    },
    {
        "name": "riskData",
        "baseName": "riskData",
        "type": "RiskData | null",
        "format": ""
    },
    {
        "name": "sessionData",
        "baseName": "sessionData",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperEmail",
        "baseName": "shopperEmail",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperIP",
        "baseName": "shopperIP",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperInteraction",
        "baseName": "shopperInteraction",
        "type": "CreateCheckoutSessionResponse.ShopperInteractionEnum",
        "format": ""
    },
    {
        "name": "shopperLocale",
        "baseName": "shopperLocale",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperName",
        "baseName": "shopperName",
        "type": "Name | null",
        "format": ""
    },
    {
        "name": "shopperReference",
        "baseName": "shopperReference",
        "type": "string",
        "format": ""
    },
    {
        "name": "shopperStatement",
        "baseName": "shopperStatement",
        "type": "string",
        "format": ""
    },
    {
        "name": "showInstallmentAmount",
        "baseName": "showInstallmentAmount",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "showRemovePaymentMethodButton",
        "baseName": "showRemovePaymentMethodButton",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "socialSecurityNumber",
        "baseName": "socialSecurityNumber",
        "type": "string",
        "format": ""
    },
    {
        "name": "splitCardFundingSources",
        "baseName": "splitCardFundingSources",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "splits",
        "baseName": "splits",
        "type": "Array<Split>",
        "format": ""
    },
    {
        "name": "store",
        "baseName": "store",
        "type": "string",
        "format": ""
    },
    {
        "name": "storeFiltrationMode",
        "baseName": "storeFiltrationMode",
        "type": "CreateCheckoutSessionResponse.StoreFiltrationModeEnum",
        "format": ""
    },
    {
        "name": "storePaymentMethod",
        "baseName": "storePaymentMethod",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "storePaymentMethodMode",
        "baseName": "storePaymentMethodMode",
        "type": "CreateCheckoutSessionResponse.StorePaymentMethodModeEnum",
        "format": ""
    },
    {
        "name": "telephoneNumber",
        "baseName": "telephoneNumber",
        "type": "string",
        "format": ""
    },
    {
        "name": "themeId",
        "baseName": "themeId",
        "type": "string",
        "format": ""
    },
    {
        "name": "threeDS2RequestData",
        "baseName": "threeDS2RequestData",
        "type": "CheckoutSessionThreeDS2RequestData | null",
        "format": ""
    },
    {
        "name": "threeDSAuthenticationOnly",
        "baseName": "threeDSAuthenticationOnly",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "trustedShopper",
        "baseName": "trustedShopper",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "url",
        "baseName": "url",
        "type": "string",
        "format": ""
    }
];
(function (CreateCheckoutSessionResponse) {
    let ChannelEnum;
    (function (ChannelEnum) {
        ChannelEnum["IOs"] = "iOS";
        ChannelEnum["Android"] = "Android";
        ChannelEnum["Web"] = "Web";
    })(ChannelEnum = CreateCheckoutSessionResponse.ChannelEnum || (CreateCheckoutSessionResponse.ChannelEnum = {}));
    let ModeEnum;
    (function (ModeEnum) {
        ModeEnum["Embedded"] = "embedded";
        ModeEnum["Hosted"] = "hosted";
    })(ModeEnum = CreateCheckoutSessionResponse.ModeEnum || (CreateCheckoutSessionResponse.ModeEnum = {}));
    let RecurringProcessingModelEnum;
    (function (RecurringProcessingModelEnum) {
        RecurringProcessingModelEnum["CardOnFile"] = "CardOnFile";
        RecurringProcessingModelEnum["Subscription"] = "Subscription";
        RecurringProcessingModelEnum["UnscheduledCardOnFile"] = "UnscheduledCardOnFile";
    })(RecurringProcessingModelEnum = CreateCheckoutSessionResponse.RecurringProcessingModelEnum || (CreateCheckoutSessionResponse.RecurringProcessingModelEnum = {}));
    let ShopperInteractionEnum;
    (function (ShopperInteractionEnum) {
        ShopperInteractionEnum["Ecommerce"] = "Ecommerce";
        ShopperInteractionEnum["ContAuth"] = "ContAuth";
        ShopperInteractionEnum["Moto"] = "Moto";
        ShopperInteractionEnum["Pos"] = "POS";
    })(ShopperInteractionEnum = CreateCheckoutSessionResponse.ShopperInteractionEnum || (CreateCheckoutSessionResponse.ShopperInteractionEnum = {}));
    let StoreFiltrationModeEnum;
    (function (StoreFiltrationModeEnum) {
        StoreFiltrationModeEnum["Exclusive"] = "exclusive";
        StoreFiltrationModeEnum["Inclusive"] = "inclusive";
        StoreFiltrationModeEnum["SkipFilter"] = "skipFilter";
    })(StoreFiltrationModeEnum = CreateCheckoutSessionResponse.StoreFiltrationModeEnum || (CreateCheckoutSessionResponse.StoreFiltrationModeEnum = {}));
    let StorePaymentMethodModeEnum;
    (function (StorePaymentMethodModeEnum) {
        StorePaymentMethodModeEnum["AskForConsent"] = "askForConsent";
        StorePaymentMethodModeEnum["Disabled"] = "disabled";
        StorePaymentMethodModeEnum["Enabled"] = "enabled";
    })(StorePaymentMethodModeEnum = CreateCheckoutSessionResponse.StorePaymentMethodModeEnum || (CreateCheckoutSessionResponse.StorePaymentMethodModeEnum = {}));
})(CreateCheckoutSessionResponse = exports.CreateCheckoutSessionResponse || (exports.CreateCheckoutSessionResponse = {}));
//# sourceMappingURL=createCheckoutSessionResponse.js.map