"use strict";
/*
 * The version of the OpenAPI document: v68
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit this class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccountInfo = void 0;
class AccountInfo {
    static getAttributeTypeMap() {
        return AccountInfo.attributeTypeMap;
    }
    constructor() {
    }
}
exports.AccountInfo = AccountInfo;
AccountInfo.discriminator = undefined;
AccountInfo.mapping = undefined;
AccountInfo.attributeTypeMap = [
    {
        "name": "accountAgeIndicator",
        "baseName": "accountAgeIndicator",
        "type": "AccountInfo.AccountAgeIndicatorEnum",
        "format": ""
    },
    {
        "name": "accountChangeDate",
        "baseName": "accountChangeDate",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "accountChangeIndicator",
        "baseName": "accountChangeIndicator",
        "type": "AccountInfo.AccountChangeIndicatorEnum",
        "format": ""
    },
    {
        "name": "accountCreationDate",
        "baseName": "accountCreationDate",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "accountType",
        "baseName": "accountType",
        "type": "AccountInfo.AccountTypeEnum",
        "format": ""
    },
    {
        "name": "addCardAttemptsDay",
        "baseName": "addCardAttemptsDay",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "deliveryAddressUsageDate",
        "baseName": "deliveryAddressUsageDate",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "deliveryAddressUsageIndicator",
        "baseName": "deliveryAddressUsageIndicator",
        "type": "AccountInfo.DeliveryAddressUsageIndicatorEnum",
        "format": ""
    },
    {
        "name": "homePhone",
        "baseName": "homePhone",
        "type": "string",
        "format": ""
    },
    {
        "name": "mobilePhone",
        "baseName": "mobilePhone",
        "type": "string",
        "format": ""
    },
    {
        "name": "passwordChangeDate",
        "baseName": "passwordChangeDate",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "passwordChangeIndicator",
        "baseName": "passwordChangeIndicator",
        "type": "AccountInfo.PasswordChangeIndicatorEnum",
        "format": ""
    },
    {
        "name": "pastTransactionsDay",
        "baseName": "pastTransactionsDay",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "pastTransactionsYear",
        "baseName": "pastTransactionsYear",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "paymentAccountAge",
        "baseName": "paymentAccountAge",
        "type": "Date",
        "format": "date-time"
    },
    {
        "name": "paymentAccountIndicator",
        "baseName": "paymentAccountIndicator",
        "type": "AccountInfo.PaymentAccountIndicatorEnum",
        "format": ""
    },
    {
        "name": "purchasesLast6Months",
        "baseName": "purchasesLast6Months",
        "type": "number",
        "format": "int32"
    },
    {
        "name": "suspiciousActivity",
        "baseName": "suspiciousActivity",
        "type": "boolean",
        "format": ""
    },
    {
        "name": "workPhone",
        "baseName": "workPhone",
        "type": "string",
        "format": ""
    }
];
(function (AccountInfo) {
    let AccountAgeIndicatorEnum;
    (function (AccountAgeIndicatorEnum) {
        AccountAgeIndicatorEnum["NotApplicable"] = "notApplicable";
        AccountAgeIndicatorEnum["ThisTransaction"] = "thisTransaction";
        AccountAgeIndicatorEnum["LessThan30Days"] = "lessThan30Days";
        AccountAgeIndicatorEnum["From30To60Days"] = "from30To60Days";
        AccountAgeIndicatorEnum["MoreThan60Days"] = "moreThan60Days";
    })(AccountAgeIndicatorEnum = AccountInfo.AccountAgeIndicatorEnum || (AccountInfo.AccountAgeIndicatorEnum = {}));
    let AccountChangeIndicatorEnum;
    (function (AccountChangeIndicatorEnum) {
        AccountChangeIndicatorEnum["ThisTransaction"] = "thisTransaction";
        AccountChangeIndicatorEnum["LessThan30Days"] = "lessThan30Days";
        AccountChangeIndicatorEnum["From30To60Days"] = "from30To60Days";
        AccountChangeIndicatorEnum["MoreThan60Days"] = "moreThan60Days";
    })(AccountChangeIndicatorEnum = AccountInfo.AccountChangeIndicatorEnum || (AccountInfo.AccountChangeIndicatorEnum = {}));
    let AccountTypeEnum;
    (function (AccountTypeEnum) {
        AccountTypeEnum["NotApplicable"] = "notApplicable";
        AccountTypeEnum["Credit"] = "credit";
        AccountTypeEnum["Debit"] = "debit";
    })(AccountTypeEnum = AccountInfo.AccountTypeEnum || (AccountInfo.AccountTypeEnum = {}));
    let DeliveryAddressUsageIndicatorEnum;
    (function (DeliveryAddressUsageIndicatorEnum) {
        DeliveryAddressUsageIndicatorEnum["ThisTransaction"] = "thisTransaction";
        DeliveryAddressUsageIndicatorEnum["LessThan30Days"] = "lessThan30Days";
        DeliveryAddressUsageIndicatorEnum["From30To60Days"] = "from30To60Days";
        DeliveryAddressUsageIndicatorEnum["MoreThan60Days"] = "moreThan60Days";
    })(DeliveryAddressUsageIndicatorEnum = AccountInfo.DeliveryAddressUsageIndicatorEnum || (AccountInfo.DeliveryAddressUsageIndicatorEnum = {}));
    let PasswordChangeIndicatorEnum;
    (function (PasswordChangeIndicatorEnum) {
        PasswordChangeIndicatorEnum["NotApplicable"] = "notApplicable";
        PasswordChangeIndicatorEnum["ThisTransaction"] = "thisTransaction";
        PasswordChangeIndicatorEnum["LessThan30Days"] = "lessThan30Days";
        PasswordChangeIndicatorEnum["From30To60Days"] = "from30To60Days";
        PasswordChangeIndicatorEnum["MoreThan60Days"] = "moreThan60Days";
    })(PasswordChangeIndicatorEnum = AccountInfo.PasswordChangeIndicatorEnum || (AccountInfo.PasswordChangeIndicatorEnum = {}));
    let PaymentAccountIndicatorEnum;
    (function (PaymentAccountIndicatorEnum) {
        PaymentAccountIndicatorEnum["NotApplicable"] = "notApplicable";
        PaymentAccountIndicatorEnum["ThisTransaction"] = "thisTransaction";
        PaymentAccountIndicatorEnum["LessThan30Days"] = "lessThan30Days";
        PaymentAccountIndicatorEnum["From30To60Days"] = "from30To60Days";
        PaymentAccountIndicatorEnum["MoreThan60Days"] = "moreThan60Days";
    })(PaymentAccountIndicatorEnum = AccountInfo.PaymentAccountIndicatorEnum || (AccountInfo.PaymentAccountIndicatorEnum = {}));
})(AccountInfo = exports.AccountInfo || (exports.AccountInfo = {}));
//# sourceMappingURL=accountInfo.js.map