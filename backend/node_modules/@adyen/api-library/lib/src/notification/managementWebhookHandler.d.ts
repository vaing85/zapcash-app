import { managementWebhooks } from "../typings";
/**
 * DEPRECATED
 *
 * Centralised handler for de-serialising all (Management) webhook payloads.
 *
 * @deprecated Use instead ManagementWebhooksHandler
 */
declare class ManagementWebhookHandler {
    private readonly payload;
    /**
     * Constructor
     * @deprecated Use specific webhook handlers instead.
     *
     * @param jsonPayload
     */
    constructor(jsonPayload: string);
    /**
     * Return generic webhook type
     * @deprecated Use specific webhook handlers instead.
     *
     * @param jsonPayload
     */
    getGenericWebhook(): managementWebhooks.MerchantUpdatedNotificationRequest | managementWebhooks.MerchantCreatedNotificationRequest | managementWebhooks.PaymentMethodCreatedNotificationRequest | managementWebhooks.PaymentMethodRequestRemovedNotificationRequest | managementWebhooks.PaymentMethodScheduledForRemovalNotificationRequest;
    /**
     * @deprecated Use ManagementWebhooksHandler instead.
     */
    getMerchantCreatedNotificationRequest(): managementWebhooks.MerchantCreatedNotificationRequest;
    /**
     * @deprecated Use ManagementWebhooksHandler instead.
     */
    getMerchantUpdatedNotificationRequest(): managementWebhooks.MerchantUpdatedNotificationRequest;
    /**
     * @deprecated Use ManagementWebhooksHandler instead.
     */
    getPaymentMethodCreatedNotificationRequest(): managementWebhooks.PaymentMethodCreatedNotificationRequest;
    /**
     * @deprecated Use ManagementWebhooksHandler instead.
     */
    getPaymentMethodRequestRemovedNotificationRequest(): managementWebhooks.PaymentMethodRequestRemovedNotificationRequest;
    /**
     * @deprecated Use ManagementWebhooksHandler instead.
     */
    getPaymentMethodScheduledForRemovalNotificationRequest(): managementWebhooks.PaymentMethodScheduledForRemovalNotificationRequest;
}
export default ManagementWebhookHandler;
