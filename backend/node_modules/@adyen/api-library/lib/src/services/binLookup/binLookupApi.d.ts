import Service from "../../service";
import Client from "../../client";
import { IRequest } from "../../typings/requestOptions";
import { CostEstimateRequest } from "../../typings/binLookup/models";
import { CostEstimateResponse } from "../../typings/binLookup/models";
import { ThreeDSAvailabilityRequest } from "../../typings/binLookup/models";
import { ThreeDSAvailabilityResponse } from "../../typings/binLookup/models";
/**
 * API handler for BinLookupApi
 */
export declare class BinLookupApi extends Service {
    private readonly API_BASEPATH;
    private baseUrl;
    constructor(client: Client);
    /**
    * @summary Check if 3D Secure is available
    * @param threeDSAvailabilityRequest {@link ThreeDSAvailabilityRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link ThreeDSAvailabilityResponse }
    */
    get3dsAvailability(threeDSAvailabilityRequest: ThreeDSAvailabilityRequest, requestOptions?: IRequest.Options): Promise<ThreeDSAvailabilityResponse>;
    /**
    * @summary Get a fees cost estimate
    * @param costEstimateRequest {@link CostEstimateRequest }
    * @param requestOptions {@link IRequest.Options }
    * @return {@link CostEstimateResponse }
    */
    getCostEstimate(costEstimateRequest: CostEstimateRequest, requestOptions?: IRequest.Options): Promise<CostEstimateResponse>;
}
